VM_CLEARED=Unused
SYSTEM_MASTER_DOMAIN_NOT_IN_SYNC=Sync Error on Master Domain between Host ${VdsName} and oVirt Engine. Domain: ${StorageDomainName} is marked as Master in oVirt Engine database but not on the Storage side. Please consult with Support on how to fix this issue.
IRS_DISK_SPACE_LOW=Warning, Low disk space.${StorageDomainName} domain has ${DiskSpace} GB of free space
IRS_DISK_SPACE_LOW_ERROR=Critical, Low disk space. ${StorageDomainName} domain has ${DiskSpace} GB of free space
VDS_LOW_DISK_SPACE=Warning, Low disk space. Host ${VdsName} has less than ${DiskSpace} MB of free space left on: ${Disks}.
VDS_LOW_DISK_SPACE_ERROR=Critical, Low disk space. Host ${VdsName} has less than ${DiskSpace} MB of free space left on: ${Disks}.
IRS_FAILURE=Failed to access Storage on Host ${VdsName}.
USER_ADD=User '${NewUserName}' was added successfully to the system.
USER_FAILED_ADD_ADUSER=Failed to add User '${NewUserName}' to the system.
USER_ADD_BOOKMARK=Bookmark ${BookmarkName} was added by ${UserName}.
USER_ADD_BOOKMARK_FAILED=Failed to add bookmark: ${BookmarkName} (User: ${UserName}).
USER_ADD_VDS=Host ${VdsName} was added by ${UserName}.
USER_ADD_VM=VM ${VmName} was created by ${UserName}.
USER_ADD_VM_STARTED=VM ${VmName} creation was initiated by ${UserName}.
USER_ADD_VM_FINISHED_SUCCESS=VM ${VmName} creation has been completed.
USER_ADD_VM_FINISHED_FAILURE=Failed to complete VM ${VmName} creation.
USER_ADD_VM_POOL=VM Pool ${VmPoolName} was created by ${UserName}.
USER_ADD_VM_POOL_FAILED=Failed to create VM Pool ${VmPoolName} (User: ${UserName}).
USER_ADD_VM_POOL_WITH_VMS=VM Pool ${VmPoolName} (containing ${VmsCount} VMs) was created by ${UserName}.
USER_ADD_VM_POOL_WITH_VMS_FAILED=Failed to create VM Pool ${VmPoolName}(User: ${UserName}).
USER_ADD_VM_POOL_WITH_VMS_ADD_VDS_FAILED=Pool ${VmPoolName} Created, but some Vms failed to create (User: ${UserName}).
USER_ADD_VM_TEMPLATE=Creation of Template ${VmTemplateName} from VM ${VmName} was initiated by ${UserName}.
USER_ADD_VM_TEMPLATE_FINISHED_SUCCESS=Creation of Template ${VmTemplateName} from VM ${VmName} has been completed.
USER_ADD_VM_TEMPLATE_FINISHED_FAILURE=Failed to complete creation of Template ${VmTemplateName} from VM ${VmName}.
USER_ADD_VM_TEMPLATE_FROM_TRUSTED_TO_UNTRUSTED=The non-trusted Template ${VmTemplateName} was created from trusted Vm ${VmName}.
USER_ADD_VM_TEMPLATE_FROM_UNTRUSTED_TO_TRUSTED=The trusted template ${VmTemplateName} was created from non-trusted Vm ${VmName}.
USER_ADD_VM_TEMPLATE_SUCCESS=Template ${VmTemplateName} was created successfully.
USER_ADD_VM_TEMPLATE_FAILURE=Failed creating Template ${VmTemplateName}.
USER_UPDATE_VM_TEMPLATE_FROM_TRUSTED_TO_UNTRUSTED=The Template ${VmTemplateName} was updated from trusted cluster to non-trusted cluster.
USER_UPDATE_VM_TEMPLATE_FROM_UNTRUSTED_TO_TRUSTED=The Template ${VmTemplateName} was updated from non-trusted cluster to trusted cluster.
USER_ADD_VM_FROM_TRUSTED_TO_UNTRUSTED=The VM ${VmName} was created in an untrusted cluster. It was originated from the Template ${VmTemplateName} which was created in a trusted cluster.
USER_ADD_VM_FROM_UNTRUSTED_TO_TRUSTED=The VM ${VmName} was created in a trusted cluster. It was originated from the Template ${VmTemplateName} which was created in an untrusted cluster.
USER_UPDATE_VM_FROM_TRUSTED_TO_UNTRUSTED=The VM ${VmName} was updated from trusted cluster to non-trusted cluster.
USER_UPDATE_VM_FROM_UNTRUSTED_TO_TRUSTED=The VM ${VmName} was updated from non-trusted cluster to trusted cluster.
USER_ADD_VM_TO_POOL=VM ${VmName} was added to VM Pool ${VmPoolName} by ${UserName}.
USER_ADD_VM_TO_POOL_FAILED=Failed to add VM ${VmName} to VM Pool ${VmPoolName}(User: ${UserName}).
USER_ATTACH_USER_TO_POOL=User ${AdUserName} was attached to VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_USER_TO_POOL_INTERNAL=User ${AdUserName} was attached to VM Pool ${VmPoolName}.
USER_ATTACH_USER_TO_POOL_FAILED=Failed to attach User ${AdUserName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_POOL_FAILED_INTERNAL=Failed to attach User ${AdUserName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_VM_FROM_POOL=Attaching User ${AdUserName} to VM ${VmName} in VM Pool ${VmPoolName} was initiated by ${UserName}.
USER_ATTACH_USER_TO_VM_FROM_POOL_FINISHED_SUCCESS=User ${AdUserName} successfully attached to VM ${VmName} in VM Pool ${VmPoolName}.
USER_ATTACH_USER_TO_VM_FROM_POOL_FINISHED_FAILURE=Failed to attach user ${AdUserName} to VM ${VmName} in VM Pool ${VmPoolName}.
USER_ATTACH_USER_TO_VM_FROM_POOL_FAILED=Failed to attach User ${AdUserName} to VM from VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_VM=User ${AdUserName} was attached to VM ${VmName} by ${UserName}.
USER_CHANGE_DISK_VM=CD ${DiskName} was inserted to VM ${VmName} by ${UserName}
USER_EJECT_VM_DISK=CD was ejected from VM ${VmName} by ${UserName}
USER_CREATE_SNAPSHOT=Snapshot '${SnapshotName}' creation for VM '${VmName}' was initiated by ${UserName}.
USER_CREATE_SNAPSHOT_FINISHED_SUCCESS=Snapshot '${SnapshotName}' creation for VM '${VmName}' has been completed.
USER_CREATE_SNAPSHOT_FINISHED_FAILURE=Failed to complete snapshot '${SnapshotName}' creation for VM '${VmName}'.
USER_CREATE_LIVE_SNAPSHOT_FINISHED_FAILURE=Failed to create live snapshot '${SnapshotName}' for VM '${VmName}'. VM restart is recommended. Note that using the created snapshot might cause data inconsistency.
USER_REMOVE_SNAPSHOT=Snapshot '${SnapshotName}' deletion for VM '${VmName}' was initiated by ${UserName}.
USER_REMOVE_SNAPSHOT_FINISHED_SUCCESS=Snapshot '${SnapshotName}' deletion for VM '${VmName}' has been completed.
USER_REMOVE_SNAPSHOT_FINISHED_FAILURE=Failed to delete snapshot '${SnapshotName}' for VM '${VmName}'.
USER_REMOVE_SNAPSHOT_FINISHED_FAILURE_PARTIAL_SNAPSHOT=Due to partial snapshot removal, Snapshot '${SnapshotName}' of VM '${VmName}' now contains only the following disks: '${DiskAliases}'.
USER_REMOVE_DISK_SNAPSHOT=Disk '${DiskAlias}' from Snapshot(s) '${Snapshots}' of VM '${VmName}' deletion was initiated by ${UserName}.
USER_FAILED_REMOVE_DISK_SNAPSHOT=Failed to delete Disk '${DiskAlias}' from Snapshot(s) ${Snapshots} of VM ${VmName} (User: ${UserName}).
USER_REMOVE_DISK_SNAPSHOT_FINISHED_SUCCESS=Disk '${DiskAlias}' from Snapshot(s) '${Snapshots}' of VM '${VmName}' deletion has been completed (User: ${UserName}).
USER_REMOVE_DISK_SNAPSHOT_FINISHED_FAILURE=Failed to complete deletion of Disk '${DiskAlias}' from snapshot(s) '${Snapshots}' of VM '${VmName}' (User: ${UserName}).
USER_DETACH_USER_FROM_POOL=User ${AdUserName} was detached from VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_USER_FROM_POOL_FAILED=Failed to detach User ${AdUserName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_USER_FROM_VM=User ${AdUserName} was detached from VM ${VmName} by ${UserName}.
USER_FAILED_DETACH_USER_FROM_VM=Failed to detach User ${AdUserName} from VM ${VmName} (User: ${UserName}).
USER_FAILED_ADD_VDS=Failed to add Host ${VdsName} (User: ${UserName}).
USER_FAILED_ADD_VM=Failed to create VM ${VmName} (User: ${UserName}).
USER_FAILED_ADD_VM_TEMPLATE=Failed to initiate creation of Template ${VmTemplateName} from VM ${VmName} (User: ${UserName}).
USER_FAILED_ATTACH_USER_TO_VM=Failed to attach User ${AdUserName} to VM ${VmName} (User: ${UserName}).
USER_FAILED_CHANGE_DISK_VM=Failed to change disk in VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_CREATE_SNAPSHOT=Failed to create Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_CREATE_LIVE_SNAPSHOT_NO_MEMORY_FAILURE=Failed to save memory as part of Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_FAILED_REMOVE_SNAPSHOT=Failed to remove Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_FAILED_PAUSE_VM=Failed to suspend VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_REMOVE_VDS=Failed to remove Host ${VdsName} (User: ${UserName}).
USER_FAILED_REMOVE_VM_TEMPLATE=Failed to initiate removal of Template ${VmTemplateName} (User: ${UserName}).
USER_FAILED_RESTORE_FROM_SNAPSHOT=Failed to restore VM ${VmName} from Snapshot (User: ${UserName}).
USER_FAILED_RESUME_VM=Failed to resume VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_RUN_VM=Failed to run VM ${VmName} (User: ${UserName}).
USER_RUN_VM_AS_STATELESS_FINISHED_FAILURE=Failed to complete starting of VM ${VmName}.
USER_RUN_VM_AS_STATELESS_WITH_DISKS_NOT_ALLOWING_SNAPSHOT=VM ${VmName} was run as stateless with one or more of disks that do not allow snapshots (User:${UserName}).
USER_RUN_VM_FAILURE_STATELESS_SNAPSHOT_LEFT=Failed to start VM ${VmName}, because exist snapshot for stateless state. Snapshot will be deleted.
USER_FAILED_STOP_VM=Failed to power off VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_INITIATED_SHUTDOWN_VM=VM shutdown initiated by ${UserName} on VM ${VmName} (Host: ${VdsName}) (Reason: ${Reason}).
USER_FAILED_SHUTDOWN_VM=Failed to initiate shutdown on VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_STOPPED_VM_INSTEAD_OF_SHUTDOWN=VM ${VmName} was powered off ungracefully by ${UserName} (Host: ${VdsName}) (Reason: ${Reason}).
USER_FAILED_STOPPING_VM_INSTEAD_OF_SHUTDOWN=Failed to power off VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_ADD_DISK_TO_VM=Add-Disk operation of ${DiskAlias} was initiated on VM ${VmName} by ${UserName}.
USER_ADD_DISK_TO_VM_FINISHED_SUCCESS=The disk ${DiskAlias} was successfully added to VM ${VmName}.
USER_ADD_DISK_TO_VM_FINISHED_FAILURE=Operation Add-Disk failed to complete on VM ${VmName}.
USER_FAILED_ADD_DISK_TO_VM=Operation Add-Disk failed on VM ${VmName} (User: ${UserName}).
USER_ADD_DISK=Add-Disk operation of '${DiskAlias}' was initiated by ${UserName}.
USER_ADD_DISK_FINISHED_SUCCESS=The disk '${DiskAlias}' was successfully added.
USER_ADD_DISK_FINISHED_FAILURE=Operation Add-Disk failed to complete.
USER_FAILED_ADD_DISK=Operation Add-Disk failed (User: ${UserName}).
ADD_DISK_INTERNAL_FAILURE=Add-Disk operation of '${DiskAlias}' failed to complete.
ADD_DISK_INTERNAL=Add-Disk operation of '${DiskAlias}' was initiated by the system.
USER_IMPORT_IMAGE=User ${UserName} importing image ${RepoImageName} to domain ${StorageDomainName}.
USER_IMPORT_IMAGE_FINISHED_SUCCESS=User ${UserName} successfully imported image ${RepoImageName} to domain ${StorageDomainName}.
USER_IMPORT_IMAGE_FINISHED_FAILURE=User ${UserName} failed to import image ${RepoImageName} to domain ${StorageDomainName}.
USER_EXPORT_IMAGE=User ${UserName} exporting image ${RepoImageName} to domain ${DestinationStorageDomainName}.
USER_EXPORT_IMAGE_FINISHED_SUCCESS=User ${UserName} successfully exported image ${RepoImageName} to domain ${DestinationStorageDomainName}.
USER_EXPORT_IMAGE_FINISHED_FAILURE=User ${UserName} failed to export image ${RepoImageName} to domain ${DestinationStorageDomainName}.
HOT_SET_NUMBER_OF_CPUS=VM ${vmName} number of CPUs is hot set to ${numberOfCpus}
FAILED_HOT_SET_NUMBER_OF_CPUS= Failed to hot set number of CPUS to VM ${vmName}. Underlying error message: ${ErrorMessage}
USER_ISCSI_BOND_HOST_RESTART_WARNING=The following Networks has been removed from the iSCSI bond ${IscsiBondName}: ${NetworkNames}. for those changes to take affect, the hosts must be moved to maintenance and activated again.
USER_MOVE_IMAGE_GROUP_FAILED_TO_DELETE_SRC_IMAGE=Possible failure while deleting ${DiskAlias} from the source Storage Domain ${StorageDomainName} during the move operation. The Storage Domain may be manually cleaned-up from possible leftovers (User:${UserName}).
USER_MOVE_IMAGE_GROUP_FAILED_TO_DELETE_DST_IMAGE=Possible failure while clearing possible leftovers of ${DiskAlias} from the target Storage Domain ${StorageDomainName} after the move operation failed to copy the image to it properly. The Storage Domain may be manually cleaned-up from possible leftovers (User:${UserName}).
USER_REMOVE_DISK_FROM_VM=Disk was removed from VM ${VmName} by ${UserName}.
USER_FAILED_REMOVE_DISK_FROM_VM=Failed to remove Disk from VM ${VmName} (User: ${UserName}).
USER_UPDATE_VM_DISK=VM ${VmName} ${DiskAlias} disk was updated by ${UserName}.
USER_FAILED_UPDATE_VM_DISK=Failed to update VM ${VmName} disk ${DiskAlias} (User: ${UserName}).
USER_HOTPLUG_DISK=VM ${VmName} disk ${DiskAlias} was plugged by ${UserName}.
USER_FAILED_HOTPLUG_DISK=Failed to plug disk ${DiskAlias} to VM ${VmName} (User: ${UserName}).
USER_HOTUNPLUG_DISK=VM ${VmName} disk ${DiskAlias} was unplugged by ${UserName}.
USER_FAILED_HOTUNPLUG_DISK=Failed to unplug disk ${DiskAlias} from VM ${VmName} (User: ${UserName}).
USER_COPIED_TEMPLATE_DISK=User ${UserName} is copying template disk ${DiskAlias} to domain ${StorageDomainName}.
USER_FAILED_COPY_TEMPLATE_DISK=User ${UserName} failed to copy template disk ${DiskAlias} to domain ${StorageDomainName}.
USER_COPIED_TEMPLATE_DISK_FINISHED_SUCCESS=User ${UserName} finished copying template disk ${DiskAlias} to domain ${StorageDomainName}.
USER_COPIED_TEMPLATE_DISK_FINISHED_FAILURE=User ${UserName} finished with error copying template disk ${DiskAlias} to domain ${StorageDomainName}.
USER_MOVED_VM_DISK=User ${UserName} moving disk ${DiskAlias} to domain ${StorageDomainName}.
USER_FAILED_MOVED_VM_DISK=User ${UserName} failed to move disk ${DiskAlias} to domain ${StorageDomainName}.
USER_MOVED_VM_DISK_FINISHED_SUCCESS=User ${UserName} finished moving disk ${DiskAlias} to domain ${StorageDomainName}.
USER_MOVED_VM_DISK_FINISHED_FAILURE=User ${UserName} have failed to move disk ${DiskAlias} to domain ${StorageDomainName}.
USER_FINISHED_REMOVE_DISK=Disk ${DiskAlias} was successfully removed from domain ${StorageDomainName} (User ${UserName}).
USER_FINISHED_FAILED_REMOVE_DISK=Failed to remove disk ${DiskAlias} from storage domain ${StorageDomainName} (User: ${UserName}).
USER_FINISHED_REMOVE_DISK_NO_DOMAIN=Disk ${DiskAlias} was successfully removed (User ${UserName}).
USER_FINISHED_FAILED_REMOVE_DISK_NO_DOMAIN=Failed to remove disk ${DiskAlias} (User ${UserName}).
USER_ATTACH_DISK_TO_VM=Disk ${DiskAlias} was successfully attached to VM ${VmName} by ${UserName}.
USER_FAILED_ATTACH_DISK_TO_VM=Failed to attach Disk ${DiskAlias} to VM ${VmName} (User: ${UserName}).
USER_DETACH_DISK_FROM_VM=Disk ${DiskAlias} was successfully detached from VM ${VmName} by ${UserName}.
USER_FAILED_DETACH_DISK_FROM_VM=Failed to detach Disk ${DiskAlias} from VM ${VmName} (User: ${UserName}).
USER_ADD_QUOTA=Quota ${QuotaName} has been added by ${UserName}.
USER_FAILED_ADD_QUOTA=Failed to add Quota ${QuotaName}. The operation was initiated by ${UserName}.
USER_UPDATE_QUOTA=Quota ${QuotaName} has been updated by ${UserName}.
USER_FAILED_UPDATE_QUOTA=Failed to update Quota ${QuotaName}. The operation was initiated by ${UserName}..
USER_DELETE_QUOTA=Quota ${QuotaName} has been deleted by ${UserName}.
USER_FAILED_DELETE_QUOTA=Failed to delete Quota ${QuotaName}. The operation was initiated by ${UserName}..
USER_EXCEEDED_QUOTA_VDS_GROUP_GRACE_LIMIT=Cluster-Quota ${QuotaName} limit exceeded and operation was blocked. Utilization: ${Utilization}, Requested: ${Requested} - Please select a different quota or contact your administrator to extend the quota.
USER_EXCEEDED_QUOTA_VDS_GROUP_GRACE_LIMIT_PERMISSIVE_MODE=Cluster-Quota ${QuotaName} limit exceeded, proceeding since in Permissive (Audit) mode. Utilization: ${Utilization}, Requested: ${Requested} - Please select a different quota or contact your administrator to extend the quota.
USER_EXCEEDED_QUOTA_VDS_GROUP_LIMIT=Cluster-Quota ${QuotaName} limit exceeded and entered the grace zone. Utilization: ${Utilization} (It is advised to select a different quota or contact your administrator to extend the quota).
USER_EXCEEDED_QUOTA_VDS_GROUP_THRESHOLD=Cluster-Quota ${QuotaName} is about to exceed. Utilization: ${Utilization}
USER_EXCEEDED_QUOTA_STORAGE_GRACE_LIMIT=Storage-Quota ${QuotaName} limit exceeded and operation was blocked. Utilization(used/requested): ${CurrentStorage}%/${Requested}% - Please select a different quota or contact your administrator to extend the quota.
USER_EXCEEDED_QUOTA_STORAGE_GRACE_LIMIT_PERMISSIVE_MODE=Storage-Quota ${QuotaName} limit exceeded, proceeding since in Permissive (Audit) mode. Utilization(used/requested): ${CurrentStorage}%/${Requested}% - Please select a different quota or contact your administrator to extend the quota.
USER_EXCEEDED_QUOTA_STORAGE_LIMIT=Storage-Quota ${QuotaName} limit exceeded and entered the grace zone. Utilization: ${CurrentStorage}% (It is advised to select a different quota or contact your administrator to extend the quota).
USER_EXCEEDED_QUOTA_STORAGE_THRESHOLD=Storage-Quota ${QuotaName} is about to exceed. Utilization: ${CurrentStorage}%
QUOTA_STORAGE_RESIZE_LOWER_THEN_CONSUMPTION=Storage-Quota ${QuotaName}: the new size set for this quota is less than current disk utilization.
MISSING_QUOTA_STORAGE_PARAMETERS_PERMISSIVE_MODE=Missing Quota for Disk, proceeding since in Permissive (Audit) mode.
MISSING_QUOTA_CLUSTER_PARAMETERS_PERMISSIVE_MODE=Missing Quota for VM ${VmName}, proceeding since in Permissive (Audit) mode.
USER_MOVED_VM=VM ${VmName} moving to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_MOVED_VM_FINISHED_SUCCESS=Moving VM ${VmName} to Domain ${StorageDomainName} has been completed.
USER_MOVED_VM_FINISHED_FAILURE=Failed to complete moving of VM ${VmName} to Domain ${StorageDomainName}.
USER_FAILED_MOVE_VM=Failed to initiate moving of VM ${VmName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_MOVED_TEMPLATE=Template ${VmTemplateName} moving to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_MOVED_TEMPLATE_FINISHED_SUCCESS=Template ${VmTemplateName} moving to Domain ${StorageDomainName} has been completed.
USER_MOVED_TEMPLATE_FINISHED_FAILURE=Failed to complete moving of Template ${VmTemplateName} to Domain ${StorageDomainName}.
USER_FAILED_MOVE_TEMPLATE=Failed to initiate moving Template ${VmTemplateName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_COPIED_TEMPLATE=Template ${VmTemplateName} copy to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_COPIED_TEMPLATE_FINISHED_SUCCESS=Template ${VmTemplateName} copy to Domain ${StorageDomainName} has been completed.
USER_COPIED_TEMPLATE_FINISHED_FAILURE=Failed to complete copy of Template ${VmTemplateName} to Domain ${StorageDomainName}.
USER_FAILED_COPY_TEMPLATE=Failed to initiate copy of Template ${VmTemplateName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_FAILED_TRY_BACK_TO_SNAPSHOT=Failed to preview Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_FAILED_UPDATE_VDS=Failed to update Host ${VdsName} (User: ${UserName}).
USER_FAILED_UPDATE_VM=Failed to update VM ${VmName} (User: ${UserName}).
SYSTEM_FAILED_UPDATE_VM=Failed to Update VM ${VmName} that was initiated by system.
USER_FAILED_UPDATE_VM_TEMPLATE=Failed to update Template ${VmTemplateName} (User: ${UserName}).
USER_FAILED_VDS_RESTART=Failed to restart Host ${VdsName}, (User: ${UserName}).
USER_FAILED_VDS_START=Failed to start Host ${VdsName}, (User: ${UserName}).
USER_FAILED_VDS_STOP=Failed to stop Host ${VdsName}, (User: ${UserName}).
USER_PAUSE_VM=VM ${VmName} was suspended by ${UserName} (Host: ${VdsName}).
USER_REMOVE_BOOKMARK=Bookmark ${BookmarkName} was removed by ${UserName}.
USER_REMOVE_BOOKMARK_FAILED=Failed to remove bookmark ${BookmarkName} (User: ${UserName})
USER_REMOVE_VDS=Host ${VdsName} was removed by ${UserName}.
USER_REMOVE_VM_FINISHED=VM ${VmName} was successfully removed.
USER_REMOVE_VM_FINISHED_WITH_ILLEGAL_DISKS=VM ${VmName} has been removed, but the following disks could not be removed: ${DisksNames}. These disks will appear in the main disks tab in illegal state, please remove manually when possible.
USER_REMOVE_VM_FROM_POOL=VM ${VmName} was removed from VM Pool ${VmPoolName} by ${UserName}.
USER_REMOVE_VM_FROM_POOL_FAILED=Failed to remove VM ${VmName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_REMOVE_VM_POOL=VM Pool ${VmPoolName} was removed by ${UserName}.
USER_REMOVE_VM_POOL_FAILED=Failed to remove VM Pool ${VmPoolName} (User: ${UserName}).
USER_REMOVE_VM_TEMPLATE=Removal of Template ${VmTemplateName} was initiated by ${UserName}.
USER_REMOVE_VM_TEMPLATE_FINISHED=Removal of Template ${VmTemplateName} has been completed.
USER_RESTORE_FROM_SNAPSHOT=VM ${VmName} restored from Snapshot by ${UserName}.
USER_RESTORE_FROM_SNAPSHOT_START=Restoring VM ${VmName} from snapshot started by user ${UserName}.
USER_RESTORE_FROM_SNAPSHOT_FINISH_SUCCESS=VM ${VmName} restoring from Snapshot has been completed.
USER_RESTORE_FROM_SNAPSHOT_FINISH_FAILURE=Failed to complete restoring from Snapshot of VM ${VmName}.
USER_RESUME_VM=VM ${VmName} was resumed by ${UserName} (Host: ${VdsName}).
USER_RUN_VM=VM ${VmName} started on Host ${VdsName}
USER_RUN_VM_AS_STATELESS=VM ${VmName} started on Host ${VdsName} as stateless
USER_RUN_VM_ON_NON_DEFAULT_VDS=Guest ${VmName} started on Host ${VdsName}. (Default Host parameter was ignored - assigned Host was not available).
USER_REBOOT_VM=User ${UserName} initiated reboot of VM ${VmName}.
USER_FAILED_REBOOT_VM=Failed to reboot VM ${VmName} (User: ${UserName}).
USER_STOP_VM=VM ${VmName} powered off by ${UserName} (Host: ${VdsName}) (Reason: ${Reason}).
VM_ALREADY_IN_REQUESTED_STATUS=VM ${VmName} is already ${VmStatus}, ${Action} was skipped. User: ${UserName}.
USER_STOP_SUSPENDED_VM=Suspended VM ${VmName} has had its save state cleared by ${UserName} (Reason: ${Reason}).
USER_STOP_SUSPENDED_VM_FAILED=Failed to power off suspended VM ${VmName} (User: ${UserName}).
USER_TRY_BACK_TO_SNAPSHOT=Snapshot-Preview ${SnapshotName} for VM ${VmName} was initiated by ${UserName}.
USER_TRY_BACK_TO_SNAPSHOT_FINISH_SUCCESS=Snapshot-Preview ${SnapshotName} for VM ${VmName} has been completed.
USER_TRY_BACK_TO_SNAPSHOT_FINISH_FAILURE=Failed to complete Snapshot-Preview ${SnapshotName} for VM ${VmName}.
USER_UPDATE_BOOKMARK=Bookmark ${BookmarkName} was updated by ${UserName}.
USER_UPDATE_BOOKMARK_FAILED=Failed to update bookmark: ${BookmarkName} (User: ${UserName})

USER_UPDATE_VDS=Host ${VdsName} configuration was updated by ${UserName}.
USER_UPDATE_VM=VM ${VmName} configuration was updated by ${UserName}.
SYSTEM_UPDATE_VM=VM ${VmName} configuration was updated by system.
USER_EXTEND_DISK_SIZE_UPDATE_VM_FAILURE=Failed to update VM '${VmName}' with the new volume size. VM restart is recommended.
USER_EXTEND_DISK_SIZE_FAILURE=Failed to extend size of the disk '${DiskAlias}' to ${NewSize} GB, User: ${UserName}.
USER_EXTEND_DISK_SIZE_SUCCESS=Size of the disk '${DiskAlias}' was successfully updated to ${NewSize} GB by ${UserName}.
USER_UPDATE_VM_CLUSTER_DEFAULT_HOST_CLEARED=${VmName} cluster was updated by ${UserName}, Default host was reset to auto assign.
USER_UPDATE_VM_POOL=VM Pool ${VmPoolName} configuration was updated by ${UserName}.
USER_UPDATE_VM_POOL_FAILED=Failed to update VM Pool ${VmPoolName} configuration (User: ${UserName}).
USER_UPDATE_VM_TEMPLATE=Template ${VmTemplateName} configuration was updated by ${UserName}.
USER_VDC_LOGIN=User ${UserName} logged in.
USER_VDC_LOGIN_FAILED=User ${UserName} failed to log in.
USER_VDC_LOGOUT=User ${UserName} logged out.
USER_VDC_LOGOUT_FAILED=Failed to log User ${UserName} out.
USER_FORCE_SELECTED_SPM=Host ${VdsName} was force selected by ${UserName}
USER_FORCE_SELECTED_SPM_STOP_FAILED=Failed to force select ${VdsName} as the SPM due to a failure to stop the current SPM.
USER_VDS_RESTART=Host ${VdsName} was restarted by ${UserName}.
USER_VDS_START=Host ${VdsName} was started by ${UserName}.
USER_VDS_STOP=Host ${VdsName} was stopped by ${UserName}.
VDS_ALREADY_IN_REQUESTED_STATUS=Host ${HostName} is already ${AgentStatus}, Power Management ${Operation} operation skipped.
VDS_AUTO_FENCE_STATUS=Auto fence for host ${VdsName} was started.
VDS_AUTO_FENCE_STATUS_FAILED=Auto fence for host ${VdsName} failed.
VDS_AUTO_FENCE_FAILED_CALL_FENCE_SPM=Auto fence did not revoke the selected SPM (${VdsName}) since the master storage domain\n was not active or could not use another host for the fence operation.
VDS_MANUAL_FENCE_STATUS=Manual fence for host ${VdsName} was started.
VDS_MANUAL_FENCE_STATUS_FAILED=Manual fence for host ${VdsName} failed.
VDS_MANUAL_FENCE_FAILED_CALL_FENCE_SPM=Manual fence did not revoke the selected SPM (${VdsName}) since the master storage domain\n was not active or could not use another host for the fence operation.
VDC_START=Starting oVirt Engine.
VDC_STOP=Stopping oVirt Engine.
VDS_ACTIVATE=Host ${VdsName} was activated by ${UserName}.
VDS_ACTIVATE_ASYNC=Host ${VdsName} was autorecovered.
VDS_ACTIVATE_MANUAL_HA=Host ${VdsName} was activated by ${UserName}, but the Hosted Engine HA service may still be in maintenance mode. If necessary, please correct this manually.
VDS_ACTIVATE_MANUAL_HA_ASYNC=Host ${VdsName} was autorecovered, but the Hosted Engine HA service may still be in maintenance mode. If necessary, please correct this manually.
VDS_ACTIVATE_FAILED=Failed to activate Host ${VdsName}.(User: ${UserName}).
VDS_ACTIVATE_FAILED_ASYNC=Failed to autorecover Host ${VdsName}.
HOST_REFRESHED_CAPABILITIES=Successfully refreshed the capabilities of host ${VdsName}.
HOST_REFRESH_CAPABILITIES_FAILED=Failed to refresh the capabilities of host ${VdsName}.
HOST_INTERFACE_STATE_UP=Interface ${InterfaceName} on host ${VdsName}, changed state to up
HOST_INTERFACE_STATE_DOWN=Interface ${InterfaceName} on host ${VdsName}, changed state to down
HOST_BOND_SLAVE_STATE_UP=Slave ${SlaveName} of bond ${BondName} on host ${VdsName}, changed state to up
HOST_BOND_SLAVE_STATE_DOWN=Slave ${SlaveName} of bond ${BondName} on host ${VdsName}, changed state to down
VDS_DETECTED=Status of host ${VdsName} was set to ${HostStatus}.
VDS_FAILURE=Host ${VdsName} is non responsive.
VDS_MAINTENANCE=Host ${VdsName} was switched to Maintenance Mode.
VDS_MAINTENANCE_MANUAL_HA=Host ${VdsName} was switched to Maintenance mode, but Hosted Engine HA maintenance could not be enabled. Please enable it manually.
VDS_MAINTENANCE_FAILED=Failed to switch Host ${VdsName} to Maintenance mode.
VDS_RECOVER=Host ${VdsName} is rebooting.
VDS_RECOVER_FAILED=Host ${VdsName} failed to recover.
VDS_RECOVER_FAILED_VMS_UNKNOWN=Host ${VdsName} cannot be reached, VMs state on this host are marked as Unknown.
VDS_NO_SELINUX_ENFORCEMENT=Host ${VdsName} does not enforce SELinux.
VDS_PROVISION=Installing OS on Host ${VdsName} using Hostgroup ${HostGroupName}.
VM_DOWN=VM ${VmName} is down. ${ExitMessage}
USER_SUSPEND_VM_OK=VM ${VmName} on Host ${VdsName} is suspended.
VM_FAILURE=VM ${VmName} cannot be found on Host ${VdsName}.
VM_MIGRATION_ABORT=Migration failed: ${MigrationError} (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_MIGRATION_DONE=Migration completed (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}, Duration: ${Duration}).
VM_MIGRATION_FAILED=Migration failed${DueToMigrationError} (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_MIGRATION_FAILED_NO_VDS_TO_RUN_ON=Migration failed, No available host found (VM: ${VmName}, Source: ${VdsName}).
VM_MIGRATION_FAILED_DURING_MOVE_TO_MAINTENANCE=Migration failed${DueToMigrationError} while Host is in 'preparing for maintenance' state.\n  Consider manual intervention\: stopping/migrating Vms as Host's state will not\n  turn to maintenance while VMs are still running on it.(VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_SET_TO_UNKNOWN_STATUS=VM ${VmName} was set to the Unknown status.
VM_MIGRATION_FAILED_FROM_TO=Migration failed${DueToMigrationError} (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_MIGRATION_START=Migration started (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}, User: ${UserName}).
VM_MIGRATION_START_SYSTEM_INITIATED=Migration initiated by system (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_MIGRATION_TRYING_RERUN=Migration failed${DueToMigrationError}. Trying to migrate to another Host (VM: ${VmName}, Source: ${VdsName}, Destination: ${DestinationVdsName}).
VM_CANCEL_MIGRATION=Migration cancelled (VM: ${VmName}, Source: ${VdsName}, User: ${UserName}).
VM_CANCEL_MIGRATION_FAILED=Failed to cancel migration for VM: ${VmName}
VM_STATUS_RESTORED=VM ${VmName} status was restored to ${VmStatus}.
VM_SET_TICKET=user ${UserName} initiated console session for VM ${VmName}
VM_SET_TICKET_FAILED=user ${UserName} failed to initiate a console session for VM ${VmName}
VDS_SLOW_STORAGE_RESPONSE_TIME=Slow storage response time on Host ${VdsName}.
IRS_HOSTED_ON_VDS=Storage Pool Manager runs on Host ${VdsName} (Address: ${ServerIp}).
USER_ATTACH_VM_POOL_TO_AD_GROUP=Group ${GroupName} was attached to VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_VM_POOL_TO_AD_GROUP_INTERNAL=Group ${GroupName} was attached to VM Pool ${VmPoolName}.
USER_ATTACH_VM_POOL_TO_AD_GROUP_FAILED=Failed to attach Group ${GroupName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_VM_POOL_TO_AD_GROUP_FAILED_INTERNAL=Failed to attach Group ${GroupName} to VM Pool ${VmPoolName}.
USER_ATTACH_VM_TO_AD_GROUP=Group ${GroupName} was attached to VM ${VmName} by ${UserName}.
USER_ATTACH_VM_TO_AD_GROUP_FAILED=Failed to attach Group ${GroupName} to VM ${VmName} (User: ${UserName}).
USER_DETACH_VM_POOL_TO_AD_GROUP=Group ${GroupName} was detached from VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_VM_POOL_TO_AD_GROUP_FAILED=Failed to detach Group ${GroupName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_VM_TO_AD_GROUP=Group ${GroupName} was detached from VM ${VmName} by ${UserName}.
USER_DETACH_VM_TO_AD_GROUP_FAILED=Failed to detach Group ${GroupName} from VM ${VmName} (User: ${UserName}).
USER_REMOVE_AD_GROUP=Group ${GroupName} was removed by ${UserName}.
USER_REMOVE_AD_GROUP_FAILED=Failed to remove group ${GroupName} (User: ${UserName}).
USER_FAILED_REMOVE_ADUSER=Failed to remove User ${AdUserName} (User: ${UserName}).
USER_REMOVE_ADUSER=User ${AdUserName} was removed by ${UserName}.
USER_INITIATED_RUN_VM=Starting VM ${VmName} was initiated by ${UserName}.
USER_INITIATED_RUN_VM_AND_PAUSE=Starting in paused mode VM ${VmName} was initiated by ${UserName}.
USER_STARTED_VM=VM ${VmName} was started by ${UserName} (Host: ${VdsName}).
USER_INITIATED_RUN_VM_FAILED=Failed to run VM ${VmName} on Host ${VdsName}.
VDS_FAILED_TO_RUN_VMS=Host ${VdsName} will be switched to Error status for ${Time} minutes because it failed to run a VM.
USER_ADD_TAG=New Tag ${TagName} was created by ${UserName}.
USER_ADD_TAG_FAILED=Failed to create Tag named ${TagName} (User: ${UserName}).
USER_REMOVE_TAG=Tag ${TagName} was removed by ${UserName}.
USER_REMOVE_TAG_FAILED=Failed to remove Tag ${TagName} (User: ${UserName}).
USER_UPDATE_TAG=Tag ${TagName} configuration was updated by ${UserName}.
USER_UPDATE_TAG_FAILED=Failed to update Tag ${TagName} (User: ${UserName}).
USER_MOVE_TAG=Tag ${TagName} was moved from ${OldParnetTagName} to ${NewParentTagName} by ${UserName}.
USER_MOVE_TAG_FAILED=Failed to move Tag ${TagName} from ${OldParnetTagName} to ${NewParentTagName} (User: ${UserName}).
USER_ATTACH_TAG_TO_TEMPLATE=Tag ${TagName} was attached to Templates(s) ${TemplatesNames} by ${UserName}.
USER_ATTACH_TAG_TO_TEMPLATE_FAILED=Failed to attach Tag ${TagName} to Templates(s) ${TemplatesNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_USER_GROUP=Tag ${TagName} was attached to Group(s) ${AttachGroupsNames} by ${UserName}.
USER_ATTACH_TAG_TO_USER_GROUP_FAILED=Failed to attach Group(s) ${AttachGroupsNames} to Tag ${TagName} (User: ${UserName}).
USER_ATTACH_TAG_TO_USER=Tag ${TagName} was attached to User(s) ${AttachUsersNames} by ${UserName}.
USER_ATTACH_TAG_TO_USER_FAILED=Failed to attach Tag ${TagName} to User(s) ${AttachUsersNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_VDS=Tag ${TagName} was attached to Host(s) ${VdsNames} by ${UserName}.
USER_ATTACH_TAG_TO_VDS_FAILED=Failed to attach Tag ${TagName} to Host(s) ${VdsNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_VM=Tag ${TagName} was attached to VM(s) ${VmsNames} by ${UserName}.
USER_ATTACH_TAG_TO_VM_FAILED=Failed to attach Tag ${TagName} to VM(s) ${VmsNames} (User: ${UserName}).
USER_DETACH_TEMPLATE_FROM_TAG=Tag ${TagName} was detached from Template(s) ${TemplatesNames} by ${UserName}.
USER_DETACH_TEMPLATE_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from TEMPLATE(s) ${TemplatesNames} (User: ${UserName}).
USER_DETACH_USER_GROUP_FROM_TAG=Tag ${TagName} was detached from Group(s) ${DetachGroupsNames} by ${UserName}.
USER_DETACH_USER_GROUP_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from Group(s)  ${DetachGroupsNames} (User: ${UserName}).
USER_DETACH_USER_FROM_TAG=Tag ${TagName} detached from User(s) ${DetachUsersNames} by ${UserName}.
USER_DETACH_USER_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from User(s) ${DetachUsersNames} (User: ${UserName}).
USER_DETACH_VDS_FROM_TAG=Tag ${TagName} was detached from Host(s) ${VdsNames} by ${UserName}.
USER_DETACH_VDS_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from Host(s) ${VdsNames} (User: ${UserName}).
USER_DETACH_VM_FROM_TAG=Tag ${TagName} was detached from VM(s) ${VmsNames} by ${UserName}.
USER_DETACH_VM_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from VM(s) ${VmsNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_TEMPLATE_EXISTS=Tag ${TagName} already attached to Template(s) ${TemplatesNamesExists}.
USER_ATTACH_TAG_TO_USER_EXISTS=Tag ${TagName} already attached to User(s) ${AttachUsersNamesExists}.
USER_ATTACH_TAG_TO_USER_GROUP_EXISTS=Tag ${TagName} already attached to Group(s) ${AttachGroupsNamesExists}.
USER_ATTACH_TAG_TO_VDS_EXISTS=Tag ${TagName} already attached to Host(s) ${VdsNamesExists}.
USER_ATTACH_TAG_TO_VM_EXISTS=Tag ${TagName} already attached to VM(s) ${VmsNamesExists}.
USER_LOCKED_VM=User ${GuestUser} locked VM ${VmName}.
USER_LOGGED_IN_VM=User ${GuestUser} logged in to VM ${VmName}.
USER_LOGGED_OUT_VM=User ${GuestUser} logged out from VM ${VmName}.
USER_UNLOCKED_VM=User ${GuestUser} unlocked VM ${VmName}.
USER_SUSPEND_VM=Suspending VM ${VmName} was initiated by User ${UserName} (Host: ${VdsName}).
USER_SUSPEND_VM_FINISH_SUCCESS=Suspending VM ${VmName} has been completed.
USER_SUSPEND_VM_FINISH_FAILURE=Failed to complete suspending of VM ${VmName}.
USER_SUSPEND_VM_FINISH_FAILURE_WILL_TRY_AGAIN=Failed to complete suspending of VM ${VmName}, will try again.
USER_FAILED_SUSPEND_VM=Failed to suspend VM ${VmName} (Host: ${VdsName}).
USER_VDS_MAINTENANCE=Host ${VdsName} was switched to Maintenance mode by ${UserName}.
USER_VDS_MAINTENANCE_MANUAL_HA=Host ${VdsName} was switched to Maintenance mode by ${UserName}, but Hosted Engine HA maintenance could not be enabled. Please enable it manually.
USER_VDS_MAINTENANCE_MIGRATION_FAILED=Host ${VdsName} cannot change into maintenance mode - not all Vms have been migrated successfully. Consider manual intervention: stopping/migrating Vms: ${failedVms} (User: ${UserName}).
USER_EXPORT_VM=VM ${VmName} exported to ${ExportPath} by ${UserName}
USER_EXPORT_VM_FAILED=Failed to export VM ${VmName} to ${ExportPath} (User: ${UserName})
USER_EXPORT_TEMPLATE=Template ${VmTemplateName} exported to ${ExportPath} by ${UserName}
USER_EXPORT_TEMPLATE_FAILED=Failed to export Template ${VmTemplateName} to ${ExportPath} (User: ${UserName})
VM_IMPORT=Started VM import of ${ImportedVmName} (User: ${UserName})
VM_IMPORT_INFO=Value of field ${FieldName} of imported VM ${VmName} is  ${FieldValue}. The field is reset to the default value
VM_IMPORT_FAILED=Failed to import VM ${ImportedVmName} (User: ${UserName})
TEMPLATE_IMPORT=Started Template import of ${ImportedVmTemplateName} (User: ${UserName})
TEMPLATE_IMPORT_FAILED=Failed to import Template ${ImportedVmTemplateName} (User: ${UserName})
TEMPLATE_IMPORT_FROM_CONFIGURATION_SUCCESS=Template ${VmTemplateName} has been successfully imported from the given configuration.
TEMPLATE_IMPORT_FROM_CONFIGURATION_FAILED=Failed to import Template ${VmTemplateName} from the given configuration.
VM_NOT_RESPONDING=VM ${VmName} is not responding.
VM_PAUSED_ENOSPC=VM ${VmName} has paused due to no Storage space error.
VM_PAUSED_ERROR=VM ${VmName} has paused due to unknown storage error.
VM_PAUSED_EIO=VM ${VmName} has paused due to storage I/O problem.
VM_PAUSED_EPERM=VM ${VmName} has paused due to storage permissions problem.
VM_POWER_DOWN_FAILED=Shutdown of VM ${VmName} failed.
VM_MEMORY_UNDER_GUARANTEED_VALUE=VM ${VmName} on host ${VdsName} was guaranteed ${MemGuaranteed} MB but currently has ${MemActual} MB
VM_BALLOON_DRIVER_ERROR=The Balloon driver on VM ${VmName} on host ${VdsName} is requested but unavailable.
VM_BALLOON_DRIVER_UNCONTROLLED=The Balloon device on VM ${VmName} on host ${VdsName} is inflated but the device cannot be controlled (guest agent is down).
VM_IMPORT_FROM_CONFIGURATION_EXECUTED_SUCCESSFULLY=VM ${VmName} has been successfully imported from the given configuration.
VM_IMPORT_FROM_CONFIGURATION_ATTACH_DISKS_FAILED=VM ${VmName} has been imported from the given configuration but the following disk(s) failed to attach: ${DiskAliases}.
VDS_INSTALL=Host ${VdsName} installed
VDS_INSTALL_FAILED=Host ${VdsName} installation failed. ${FailedInstallMessage}.
VDS_INITIALIZING=Host ${VdsName} is initializing. Message: ${ErrorMessage}
VDS_INITIATED_RUN_AS_STATELESS_VM_NOT_YET_RUNNING=Starting VM ${VmName} as stateless was initiated.
VDS_INITIATED_RUN_VM=VM ${VmName} was restarted on Host ${VdsName}
VDS_INITIATED_RUN_VM_AS_STATELESS=VM ${VmName} was restarted on Host ${VdsName} as stateless
VDS_INITIATED_RUN_VM_FAILED=Failed to restart VM ${VmName} on Host ${VdsName}
USER_ADD_VDS_GROUP=Cluster ${VdsGroupName} was added by ${UserName}
USER_ADD_VDS_GROUP_FAILED=Failed to add Host cluster (User: ${UserName})
USER_REMOVE_VDS_GROUP=Host cluster ${VdsGroupName} was removed by ${UserName}
USER_REMOVE_VDS_GROUP_FAILED=Failed to remove Host cluster (User: ${UserName})
USER_UPDATE_VDS_GROUP=Host cluster ${VdsGroupName} was updated by ${UserName}
USER_UPDATE_VDS_GROUP_FAILED=Failed to update Host cluster (User: ${UserName})
SYSTEM_UPDATE_VDS_GROUP=Host cluster ${VdsGroupName} was updated by system
SYSTEM_UPDATE_VDS_GROUP_FAILED=Failed to update Host cluster by system
VDS_INSTALL_IN_PROGRESS=Installing Host ${VdsName}. ${Message}.
VDS_INSTALL_IN_PROGRESS_ERROR=Failed to install Host ${VdsName}. ${Message}.
VDS_INSTALL_IN_PROGRESS_WARNING=Host ${VdsName} installation in progress . ${Message}.
USER_UPDATE_VM_POOL_WITH_VMS=VM Pool ${VmPoolName} was updated by ${UserName}, ${VmsCount} VMs were added.
USER_UPDATE_VM_POOL_WITH_VMS_FAILED=Failed to update VM Pool ${VmPoolName}(User: ${UserName}).
USER_VM_POOL_MAX_SUBSEQUENT_FAILURES_REACHED=Not all VMs where successfully created in VM Pool ${VmPoolName}.
MAC_POOL_EMPTY=No MAC addresses left in the MAC Address Pool.
MAC_ADDRESS_IS_IN_USE=Network Interface ${IfaceName} has MAC address ${MACAddr} which is in use.
MAC_ADDRESS_IS_IN_USE_UNPLUG=Network Interface ${IfaceName} has MAC address ${MACAddr} which is in use, therefore it is being unplugged from VM ${VmName}.
MAC_ADDRESSES_POOL_NOT_INITIALIZED=Mac Address Pool is not initialized. ${Message}
USER_PASSWORD_CHANGED=Password changed successfully for ${UserName}
USER_PASSWORD_CHANGE_FAILED=Failed to change password. (User: ${UserName})
USER_CLEAR_UNKNOWN_VMS=All VMs' status on Non Responsive Host ${VdsName} were changed to 'Down' by ${UserName}
USER_FAILED_CLEAR_UNKNOWN_VMS=Failed to clear VMs' status on Non Responsive Host ${VdsName}. (User: ${UserName}).
CERTIFICATE_FILE_NOT_FOUND=Could not find oVirt Engine Certificate file.
VDS_RUN_IN_NO_KVM_MODE=Host ${VdsName} running without virtualization hardware acceleration
VDS_VERSION_NOT_SUPPORTED_FOR_CLUSTER=Host ${VdsName} is installed with VDSM version (${VdsSupportedVersions}) and cannot join cluster ${VdsGroupName} which is compatible with VDSM versions ${CompatibilityVersion}.
VDS_CLUSTER_VERSION_NOT_SUPPORTED=Host ${VdsName} is compatible with versions (${VdsSupportedVersions}) and cannot join Cluster ${VdsGroupName} which is set to version ${CompatibilityVersion}.
VDS_ARCHITECTURE_NOT_SUPPORTED_FOR_CLUSTER=Host ${VdsName} has architecture ${VdsArchitecture} and cannot join Cluster ${VdsGroupName} which has architecture ${VdsGroupArchitecture}.
CPU_TYPE_UNSUPPORTED_IN_THIS_CLUSTER_VERSION=Host ${VdsName} moved to Non-Operational state as host CPU type is not supported in this cluster compatibility version or is not supported at all
RUN_VM_FAILED=Cannot run VM ${VmName} on Host ${VdsName}. Error: ${ErrMsg}
USER_ADD_PERMISSION=User/Group ${SubjectName}, Namespace ${Namespace}, Authorization provider: ${Authz} was granted permission for Role ${RoleName} on ${VdcObjectType} ${VdcObjectName}, by ${UserName}.
USER_ADD_PERMISSION_FAILED=User ${UserName} failed to grant permission for Role ${RoleName} on ${VdcObjectType} ${VdcObjectName} to User/Group ${SubjectName}.
USER_REMOVE_PERMISSION=User/Group ${SubjectName} Role ${RoleName} permission was removed from ${VdcObjectType} ${VdcObjectName} by ${UserName}
USER_REMOVE_PERMISSION_FAILED=User ${UserName} failed to remove permission for Role ${RoleName} from ${VdcObjectType} ${VdcObjectName} to User/Group ${SubjectName}
USER_ADD_SYSTEM_PERMISSION=User/Group ${SubjectName} was granted permission for Role ${RoleName} on ${VdcObjectType} by ${UserName}.
USER_ADD_SYSTEM_PERMISSION_FAILED=User ${UserName} failed to grant permission for Role ${RoleName} on ${VdcObjectType} to User/Group ${SubjectName}.
USER_REMOVE_SYSTEM_PERMISSION=User/Group ${SubjectName} Role ${RoleName} permission was removed from ${VdcObjectType} by ${UserName}
USER_REMOVE_SYSTEM_PERMISSION_FAILED=User ${UserName} failed to remove permission for Role ${RoleName} from ${VdcObjectType} to User/Group ${SubjectName}
USER_ADD_ROLE=Role ${RoleName} granted to ${UserName}
USER_ADD_ROLE_FAILED=Failed to grant role ${RoleName} (User ${UserName})
USER_REMOVE_ROLE=Role ${RoleName} removed from ${UserName}
USER_REMOVE_ROLE_FAILED=Failed to remove role ${RoleName} (User ${UserName})
USER_UPDATE_ROLE=${UserName} Role was updated to the ${RoleName} Role
USER_UPDATE_ROLE_FAILED=Failed to update role ${RoleName} to ${UserName}
USER_ATTACHED_ACTION_GROUP_TO_ROLE=Action group ${ActionGroup} was attached to Role ${RoleName} by ${UserName}
USER_ATTACHED_ACTION_GROUP_TO_ROLE_FAILED=Failed to attach Action group ${ActionGroup} to Role ${RoleName} (User: ${UserName})
USER_DETACHED_ACTION_GROUP_FROM_ROLE=Action group ${ActionGroup} was detached from Role ${RoleName} by ${UserName}
USER_DETACHED_ACTION_GROUP_FROM_ROLE_FAILED=Failed to attach Action group ${ActionGroup} to Role ${RoleName} by ${UserName}
VDS_REGISTER_ERROR_UPDATING_HOST=Host registration failed - cannot update Host Name for Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_HOST_ALL_TAKEN=Host registration failed - all available Host Names are taken. (Host: ${VdsName1})
VDS_REGISTER_HOST_IS_ACTIVE=Host registration failed - cannot change Host Name of active Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_NAME=Host registration failed - cannot update Host Name for Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_NAMES_ALL_TAKEN=Host registration failed - all available Host Names are taken. (Host: ${VdsName1})
VDS_REGISTER_NAME_IS_ACTIVE=Host registration failed - cannot change Host Name of active Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_AUTO_APPROVE_PATTERN=Host registration failed - auto approve pattern error. (Host: ${VdsName1})
VDS_REGISTER_EMPTY_ID=Host registration failed, empty host id (Host: ${VdsHostName})
VDS_REGISTER_FAILED=Host registration failed. (Host: ${VdsName1})
VDS_REGISTER_EXISTING_VDS_UPDATE_FAILED=Host registration failed - cannot update existing Host. (Host: ${VdsName1})
VDS_REGISTER_SUCCEEDED=Host ${VdsName1} registered.
VM_MIGRATION_ON_CONNECT_CHECK_FAILED=VM migration logic failed. (VM name: ${VmName})
AD_COMPUTER_ACCOUNT_SUCCEEDED=Account creation successful.
AD_COMPUTER_ACCOUNT_FAILED=Account creation failed.
VDS_CPU_LOWER_THAN_CLUSTER=Host ${VdsName} moved to Non-Operational state as host does not meet the cluster's minimum CPU level. Missing CPU features : ${CpuFlags}
CPU_FLAGS_NX_IS_MISSING=Host ${VdsName} is missing the NX cpu flag. This flag can be enabled via the host BIOS. Please set Disable Execute (XD) for an Intel host, or No Execute (NX) for AMD.  Please make sure to completely power off the host for this change to take effect.
VDS_CPU_RETRIEVE_FAILED=Failed to determine Host ${VdsName} CPU level - could not retrieve CPU flags.
VDS_STORAGE_CONNECTION_FAILED_BUT_LAST_VDS=Failed to connect Host ${VdsName} to Data Center, due to connectivity errors with the Storage. Host ${VdsName} will remain in Up state (but inactive), as it is the last Host in the Data Center, to enable manual intervention by the Administrator.
VDS_STORAGE_VDS_STATS_FAILED=Host ${VdsName} reports about one of the Active Storage Domains as Problematic.
VDS_STORAGES_CONNECTION_FAILED=Failed to connect Host ${VdsName} to the Storage Domains ${failedStorageDomains}.
VDS_SET_NONOPERATIONAL=Host ${VdsName} moved to Non-Operational state.
VDS_SET_NONOPERATIONAL_FAILED=Failed to move Host ${VdsName} to Non-Operational state.
VDS_FENCE_STATUS=Host ${VdsName} power management was verified successfully.
VDS_FENCE_STATUS_FAILED=Failed to verify Host ${VdsName} power management.
VDS_APPROVE=Host ${VdsName} was successfully approved by user ${UserName}.
VDS_APPROVE_FAILED=Failed to approve Host ${VdsName}.
VDS_FAILED_TO_GET_HOST_HARDWARE_INFO=Could not get hardware information for host ${VdsName}
VM_MIGRATION_ON_CONNECT_CHECK_SUCCEEDED=Migration check failed to execute.
NETWORK_ADD_BOND=Add bond: ${BondName} with interfaces: ${Interfaces} for Host: ${VdsName} by ${UserName}.
NETWORK_ADD_BOND_FAILED=Failed to add bond: ${BondName} with interfaces: ${Interfaces} for Host: ${VdsName} (User:${UserName}).
NETWORK_ATTACH_NETWORK_TO_VDS=Attach network: ${NetworkName} to Host: ${VdsName} by ${UserName}.
NETWORK_ATTACH_NETWORK_TO_VDS_FAILED=Failed to attach network: ${NetworkName} to Host: ${VdsName} (User: ${UserName}).
NETWORK_DETACH_NETWORK_FROM_VDS=Detach network: ${NetworkName} from Host: ${VdsName} by ${UserName}.
NETWORK_DETACH_NETWORK_FROM_VDS_FAILED=Failed to detach network: ${NetworkName} from Host: ${VdsName} (User: ${UserName}).
NETWORK_REMOVE_BOND=Remove bond: ${BondName} for Host: ${VdsName} (User:${UserName}).
NETWORK_REMOVE_BOND_FAILED=Failed to remove bond: ${BondName} for Host: ${VdsName} (User:${UserName}).
NETWORK_VDS_NETWORK_NOT_MATCH_CLUSTER=Vds ${VdsName} network does not match to cluster ${VdsGroupName}
NETWORK_VDS_NETWORK_MATCH_CLUSTER=Vds ${VdsName} network match to cluster ${VdsGroupName}
USER_ACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was activated by ${UserName}
USER_ACTIVATED_STORAGE_DOMAIN_ASYNC=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was autorecovered.
RECOVERY_STORAGE_POOL=Data Center ${StoragePoolName} was recovered by ${UserName}
RECOVERY_STORAGE_POOL_FAILED=Failed to recover Data Center ${StoragePoolName}  (User:${UserName})
USER_ACTIVATE_STORAGE_DOMAIN_FAILED=Failed to activate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) by ${UserName}
USER_ACTIVATE_STORAGE_DOMAIN_FAILED_ASYNC=Failed to autorecover Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}).
USER_ADD_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was added by ${UserName}
USER_ADD_STORAGE_DOMAIN_FAILED=Failed to add Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_ADD_STORAGE_POOL=Data Center ${StoragePoolName}, Compatibility Version ${CompatibilityVersion} and Quota Type ${QuotaEnforcementType} was added by ${UserName}
USER_ADD_STORAGE_POOL_FAILED=Failed to add Data Center ${StoragePoolName}. (User: ${UserName})
USER_ATTACH_STORAGE_DOMAIN_TO_POOL=Storage Domain ${StorageDomainName} was attached to Data Center ${StoragePoolName} by ${UserName}
USER_ATTACH_STORAGE_DOMAIN_TO_POOL_FAILED=Failed to attach Storage Domain ${StorageDomainName} to Data Center ${StoragePoolName}. (User: ${UserName})
USER_ATTACH_STORAGE_DOMAINS_TO_POOL=Storage Domains were attached to Data Center ${StoragePoolName} by ${UserName}
USER_ATTACH_STORAGE_DOMAINS_TO_POOL_FAILED=Failed to attach Storage Domains to Data Center ${StoragePoolName}. (User: ${UserName})
USER_DEACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was deactivated.
USER_DEACTIVATE_STORAGE_DOMAIN_FAILED=Failed to deactivate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}).
USER_DETACH_STORAGE_DOMAIN_FROM_POOL=Storage Domain ${StorageDomainName} was detached from Data Center ${StoragePoolName} by ${UserName}
USER_DETACH_STORAGE_DOMAIN_FROM_POOL_FAILED=Failed to detach Storage Domain ${StorageDomainName} to Data Center ${StoragePoolName}. (User: ${UserName})
USER_REMOVE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was removed by ${UserName}
USER_REMOVE_STORAGE_DOMAIN_FAILED=Failed to remove Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_FORCE_REMOVE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was forcibly removed by ${UserName}
USER_FORCE_REMOVE_STORAGE_DOMAIN_FAILED=Failed to forcibly remove Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_FORCE_REMOVE_STORAGE_POOL=Data Center ${StoragePoolName} was forcibly removed by ${UserName}
USER_FORCE_REMOVE_STORAGE_POOL_FAILED=Failed to forcibly remove Data Center ${StoragePoolName}. (User: ${UserName})
USER_REMOVE_STORAGE_POOL=Data Center ${StoragePoolName} was removed by ${UserName}
USER_REMOVE_STORAGE_POOL_FAILED=Failed to remove Data Center ${StoragePoolName}. (User: ${UserName})
USER_UPDATE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was updated by ${UserName}
USER_UPDATE_STORAGE_DOMAIN_FAILED=Failed to update Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_UPDATE_STORAGE_POOL=Data Center ${StoragePoolName} was updated by ${UserName}
UPGRADE_STORAGE_POOL_ENCOUNTERED_PROBLEMS=Data Center ${StoragePoolName} has encountered problems during upgrade process.
USER_UPDATE_STORAGE_POOL_FAILED=Failed to update Data Center ${StoragePoolName}. (User: ${UserName})
VDS_SET_NONOPERATIONAL_NETWORK=Host ${VdsName} does not comply with the cluster ${VdsGroupName} networks, the following networks are missing on host: '${Networks}'
VDS_NETWORKS_OUT_OF_SYNC=Host ${VdsName}'s following network(s) are not synchronized with their Logical Network configuration: ${Networks}.
VDS_SET_NONOPERATIONAL_IFACE_DOWN=Host ${VdsName} moved to Non-Operational state because interfaces which are down are needed by required networks in the current cluster: '${NicsWithNetworks}'.
BRIDGED_NETWORK_OVER_MULTIPLE_INTERFACES=Bridged network ${NetworkName} is attached to multiple interfaces: ${Interfaces} on Host ${VdsName}.
NETWORK_WITHOUT_INTERFACES=Network ${NetworkName} is not attached to any interface on host ${VdsName}.
VNIC_PROFILE_UNSUPPORTED_FEATURES=VM ${VmName} has network interface ${NicName} which is using profile ${VnicProfile} with unsupported feature(s) '${UnsupportedFeatures}' by VM cluster ${VdsGroupName} (version ${CompatibilityVersion}).
ADD_NETWORK_BY_LABEL_FAILED=Network ${Network} cannot be configured using the label ${Label} in data-center ${StoragePoolName} on the following hosts: ${HostNames}.
REMOVE_NETWORK_BY_LABEL_FAILED=Network ${Network} cannot be removed from the following hosts: ${HostNames} in data-center ${StoragePoolName}.
LABEL_NETWORK=Network ${NetworkName} was labeled ${Label} in data-center ${StoragePoolName}.
LABEL_NETWORK_FAILED=Failed to label network ${NetworkName} with label ${Label} in data-center ${StoragePoolName}.
UNLABEL_NETWORK=Network ${NetworkName} was unlabeled in data-center ${StoragePoolName}.
UNLABEL_NETWORK_FAILED=Failed to unlabel network ${NetworkName} in data-center ${StoragePoolName}.
LABEL_NIC=Network interface card ${NicName} was labeled ${Label} on host ${VdsName}.
LABEL_NIC_FAILED=Failed to label network interface card ${NicName} with label ${Label} on host ${VdsName}.
UNLABEL_NIC=Label ${Label} was removed from network interface card ${NicName} on host ${VdsName}.
UNLABEL_NIC_FAILED=Failed to remove label ${Label} from network interface card ${NicName} on host ${VdsName}.
CONFIGURE_NETWORK_BY_LABELS_WHEN_CHANGING_CLUSTER_FAILED=Failed to configure networks on host ${VdsName} while changing its cluster.
PROVIDER_ADDED=Provider ${ProviderName} was added. (User: ${UserName})
PROVIDER_ADDITION_FAILED=Failed to add provider ${ProviderName}. (User: ${UserName})
PROVIDER_UPDATED=Provider ${ProviderName} was updated. (User: ${UserName})
PROVIDER_UPDATE_FAILED=Failed to update provider ${ProviderName}. (User: ${UserName})
PROVIDER_REMOVED=Provider ${ProviderName} was removed. (User: ${UserName})
PROVIDER_REMOVAL_FAILED=Failed to remove provider ${ProviderName}. (User: ${UserName})
PROVIDER_CERTIFICATE_IMPORTED=Certificate for provider ${ProviderName} was imported. (User: ${UserName})
PROVIDER_CERTIFICATE_IMPORT_FAILED=Failed importing Certificate for provider ${ProviderName}. (User: ${UserName})
SUBNET_ADDED=Subnet ${SubnetName} was added on provider ${ProviderName}. (User: ${UserName})
SUBNET_ADDITION_FAILED=Failed to add subnet ${SubnetName} on provider ${ProviderName}. (User: ${UserName})
SUBNET_REMOVED=Subnet ${SubnetName} was removed from provider ${ProviderName}. (User: ${UserName})
SUBNET_REMOVAL_FAILED=Failed to remove subnet ${SubnetName} from provider ${ProviderName}. (User: ${UserName})
PERSIST_NETWORK_ON_HOST=(${Sequence}/${Total}): Applying changes for network(s) ${NetworkNames} on host ${VdsName}. (User: ${UserName})
PERSIST_NETWORK_ON_HOST_FINISHED=(${Sequence}/${Total}): Successfully applied changes for network(s) ${NetworkNames} on host ${VdsName}. (User: ${UserName})
PERSIST_NETWORK_ON_HOST_FAILED=(${Sequence}/${Total}): Failed to apply changes for network(s) ${NetworkNames} on host ${VdsName}. (User: ${UserName})
MULTI_UPDATE_NETWORK_NOT_POSSIBLE=Cannot apply network ${NetworkName} changes to hosts on unsupported data center ${StoragePoolName}. (User: ${UserName})
NETWORK_ADD_NETWORK=Network ${NetworkName} was added to Data Center: ${StoragePoolName}
NETWORK_ADD_NETWORK_FAILED=Failed to add Network ${NetworkName} to Data Center: ${StoragePoolName}
NETWORK_ADD_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was added to Template ${VmTemplateName}. (User: ${UserName})
NETWORK_ADD_TEMPLATE_INTERFACE_FAILED=Failed to add Interface ${InterfaceName} (${InterfaceType}) to Template ${VmTemplateName}. (User: ${UserName})
NETWORK_ADD_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was added to VM ${VmName}. (User: ${UserName})
NETWORK_ADD_VM_INTERFACE_FAILED=Failed to add Interface ${InterfaceName} (${InterfaceType}) to VM ${VmName}. (User: ${UserName})
NETWORK_ATTACH_NETWORK_TO_VDS_GROUP=Network ${NetworkName} attached to Cluster ${VdsGroupName}
NETWORK_ATTACH_NETWORK_TO_VDS_GROUP_FAILED=Failed to attach Network ${NetworkName} to Cluster ${VdsGroupName}
NETWORK_DETACH_NETWORK_TO_VDS_GROUP=Network ${NetworkName} detached from Cluster ${VdsGroupName}
NETWORK_DETACH_NETWORK_TO_VDS_GROUP_FAILED=Failed to detach Network ${NetworkName} from Cluster ${VdsGroupName}
REMOVE_PORT_FROM_EXTERNAL_PROVIDER_FAILED=Failed to remove vNIC ${NicName} from external network provider ${ProviderName}. The vNIC can be identified on the provider by device id ${NicId}.
NETWORK_ACTIVATE_VM_INTERFACE_SUCCESS=Network Interface ${InterfaceName} (${InterfaceType}) was plugged to VM ${VmName}. (User: ${UserName})
NETWORK_ACTIVATE_VM_INTERFACE_FAILURE=Failed to plug Network Interface ${InterfaceName} (${InterfaceType}) to VM ${VmName}. (User: ${UserName})
NETWORK_DEACTIVATE_VM_INTERFACE_SUCCESS=Network Interface ${InterfaceName} (${InterfaceType}) was unplugged from VM ${VmName}. (User: ${UserName})
NETWORK_DEACTIVATE_VM_INTERFACE_FAILURE=Failed to unplug Network Interface ${InterfaceName} (${InterfaceType}) from VM ${VmName}. (User: ${UserName})
NETWORK_UPDTAE_NETWORK_ON_CLUSTER=Network ${NetworkName} on Cluster ${VdsGroupName} updated.
NETWORK_UPDTAE_NETWORK_ON_CLUSTER_FAILED=Failed to update Network ${NetworkName} on Cluster ${VdsGroupName}.
NETWORK_REMOVE_NETWORK=Network ${NetworkName} was removed from Data Center: ${StoragePoolName}
NETWORK_REMOVE_NETWORK_FAILED=Failed to remove Network ${NetworkName} from Data Center: ${StoragePoolName}
NETWORK_UPDATE_NETWORK=Network ${NetworkName} was updated on Data Center: ${StoragePoolName}
NETWORK_UPDATE_NETWORK_FAILED=Failed to update Network ${NetworkName} on Data Center: ${StoragePoolName}
NETWORK_REMOVE_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was removed from Template ${VmTemplateName}. (User: ${UserName})
NETWORK_REMOVE_TEMPLATE_INTERFACE_FAILED=Failed to remove Interface ${InterfaceName} (${InterfaceType}) from Template ${VmTemplateName}. (User: ${UserName})
NETWORK_REMOVE_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was removed from VM ${VmName}. (User: ${UserName})
NETWORK_REMOVE_VM_INTERFACE_FAILED=Failed to remove Interface ${InterfaceName} (${InterfaceType}) from VM ${VmName}. (User: ${UserName})
NETWORK_UPDATE_DISPLAY_FOR_CLUSTER_WITH_ACTIVE_VM=Display Network (${NetworkName}) was updated for Cluster ${VdsGroupName} with active VMs attached. The change will be applied to those VMs after their next reboot.
NETWORK_UPDATE_DISPLAY_FOR_HOST_WITH_ACTIVE_VM=Display Network was updated on Host ${VdsName} with active VMs attached. The change will be applied to those VMs after their next reboot. Running VMs might loose display connectivity until then.
NETWORK_UPDATE_DISPLAY_TO_VDS_GROUP=Update Display Network (${NetworkName}) for Cluster ${VdsGroupName}. (User: ${UserName})
NETWORK_UPDATE_DISPLAY_TO_VDS_GROUP_FAILED=Failed to update Display Network (${NetworkName}) for Cluster ${VdsGroupName}. (User: ${UserName})
NETWORK_UPDATE_NETWORK_TO_VDS_INTERFACE=Update Network ${NetworkName} in Host ${VdsName}. (User: ${UserName})
NETWORK_UPDATE_NETWORK_TO_VDS_INTERFACE_FAILED=Failed to update Network ${NetworkName} in Host ${VdsName}. (User: ${UserName})
NETWORK_UPDATE_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was updated for Template ${VmTemplateName}. (User: ${UserName})
NETWORK_UPDATE_TEMPLATE_INTERFACE_FAILED=Failed to update Interface ${InterfaceName} (${InterfaceType}) for Template ${VmTemplateName}. (User: ${UserName})
NETWORK_UPDATE_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was updated for VM ${VmName}. ${LinkState} (User: ${UserName})
NETWORK_UPDATE_VM_INTERFACE_LINK_UP=Link State is UP.
NETWORK_UPDATE_VM_INTERFACE_LINK_DOWN=Link State is DOWN.
NETWORK_UPDATE_VM_INTERFACE_FAILED=Failed to update Interface ${InterfaceName} (${InterfaceType}) for VM ${VmName}. (User: ${UserName})
NETWORK_HOST_USING_WRONG_CLUSER_VLAN=${VdsName} is having wrong vlan id: ${VlanIdHost}, expected vlan id: ${VlanIdCluster}
NETWORK_HOST_MISSING_CLUSER_VLAN=${VdsName} is missing vlan id: ${VlanIdCluster} that is expected by the cluster
INVALID_INTERFACE_FOR_MANAGEMENT_NETWORK_CONFIGURATION=Failed to configure management network on host ${VdsName}. Host ${VdsName} has an invalid interface ${InterfaceName} for the management network configuration.
VLAN_ID_MISMATCH_FOR_MANAGEMENT_NETWORK_CONFIGURATION=Failed to configure management network on host ${VdsName}. Host ${VdsName} has an interface ${InterfaceName} for the management network configuration with VLAN-ID (${VlanId}), which is different from data-center definition (${MgmtVlanId}).
SETUP_NETWORK_FAILED_FOR_MANAGEMENT_NETWORK_CONFIGURATION=Failed to configure management network on host ${VdsName} due to setup networks failure.
PERSIST_NETWORK_FAILED_FOR_MANAGEMENT_NETWORK=Failed to activate host ${VdsName} due to failure in persisting the management network configuration.
ADD_VNIC_PROFILE=VM network interface profile ${VnicProfileName} was added to network ${NetworkName} in Data Center: ${DataCenterName}. (User: ${UserName})
ADD_VNIC_PROFILE_FAILED=Failed to add VM network interface profile ${VnicProfileName} to network ${NetworkName} in Data Center: ${DataCenterName} (User: ${UserName})
UPDATE_VNIC_PROFILE=VM network interface profile ${VnicProfileName} was updated for network ${NetworkName} in Data Center: ${DataCenterName}. (User: ${UserName})
UPDATE_VNIC_PROFILE_FAILED=Failed to update VM network interface profile ${VnicProfileName} for network ${NetworkName} in Data Center: ${DataCenterName}. (User: ${UserName})
REMOVE_VNIC_PROFILE=VM network interface profile ${VnicProfileName} was removed from network ${NetworkName} in Data Center: ${DataCenterName}. (User: ${UserName})
REMOVE_VNIC_PROFILE_FAILED=Failed to remove VM network interface profile ${VnicProfileName} from network ${NetworkName} in Data Center: ${DataCenterName}. (User: ${UserName})
SYSTEM_DEACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was deactivated by system because it's not visible by any of the hosts.
SYSTEM_DEACTIVATE_STORAGE_DOMAIN_FAILED=Failed to deactivate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}).
VDS_SET_NONOPERATIONAL_DOMAIN=Host ${VdsName} cannot access the Storage Domain(s) ${StorageDomainNames} attached to the Data Center ${StoragePoolName}. Setting Host state to Non-Operational.
VDS_SET_NONOPERATIONAL_DOMAIN_FAILED=Host ${VdsName} cannot access the Storage Domain(s) ${StorageDomainNames} attached to the Data Center ${StoragePoolName}. Failed to set Host state to Non-Operational.
VDS_DOMAIN_DELAY_INTERVAL=Storage domain ${StorageDomainName} experienced a high latency of ${Delay} seconds from host ${VdsName}. This may cause performance and functional issues. Please consult your Storage Administrator.
USER_EXTENDED_STORAGE_DOMAIN=Storage ${StorageDomainName} has been extended by ${UserName}. Please wait for refresh.
USER_EXTENDED_STORAGE_DOMAIN_FAILED=Failed to extend Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_CONNECT_HOSTS_TO_LUN_FAILED=Failed to connect Host ${VdsName} to device. (User: ${UserName})
USER_REMOVE_VG=Volume group ${VgId} was removed by ${UserName}.
USER_REMOVE_VG_FAILED=Failed to remove Volume group ${VgId}. (User: UserName)
USER_ACTIVATE_STORAGE_POOL=Data Center ${StoragePoolName} was activated. (User: ${UserName})
USER_ACTIVATE_STORAGE_POOL_FAILED=Failed to activate Data Center ${StoragePoolName}. (User: ${UserName})
SYSTEM_FAILED_CHANGE_STORAGE_POOL_STATUS=Failed to change Data Center ${StoragePoolName} status.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_NO_HOST_FOR_SPM=Fencing failed on Storage Pool Manager ${VdsName} for Data Center ${StoragePoolName}. Setting status to Non-Operational.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC=Invalid status on Data Center ${StoragePoolName}. Setting status to Non Responsive.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_RESET_IRS=Data Center ${StoragePoolName} was reset. Setting status to Non Responsive (Elect new Storage Pool Manager).
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_FROM_NON_OPERATIONAL=Try to recover Data Center ${StoragePoolName}. Setting status to Non Responsive.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_SEARCHING_NEW_SPM=Data Center is being initialized, please wait for initialization to complete.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_WITH_ERROR=Invalid status on Data Center ${StoragePoolName}. Setting Data Center status to Non Responsive (On host ${VdsName}, Error: ${Error}).
USER_CHANGE_FLOPPY_VM=Floppy ${DiskName} was inserted in VM ${VmName} by ${UserName}
USER_EJECT_VM_FLOPPY=Floppy was ejected from VM ${VmName} by ${UserName}
USER_FAILED_CHANGE_FLOPPY_VM=Failed to change floppy ${DiskName} (User: ${UserName}).
VM_DOWN_ERROR=VM ${VmName} is down with error. ${ExitMessage}.
NETWORK_COMMINT_NETWORK_CHANGES=Network changes were saved on host ${VdsName}
NETWORK_COMMINT_NETWORK_CHANGES_FAILED=Failed to commit network changes on ${VdsName}
SYSTEM_VDS_RESTART=Host ${VdsName} was restarted by the engine.
SYSTEM_FAILED_VDS_RESTART=A restart initiated by the engine to Host ${VdsName} has failed.
FENCING_DISABLED_IN_CLUSTER_POLICY=Fencing is disabled in Fencing Policy of the Cluster ${VdsGroupName}, so HA VMs running on a non-responsive host will not be restarted elsewhere.
VDS_TIME_DRIFT_ALERT=Host ${VdsName} has time-drift of ${Actual} seconds while maximum configured value is ${Max} seconds.
PROXY_HOST_SELECTION=Host ${Proxy} from ${Origin} was chosen as a proxy to execute ${Command} command on Host ${VdsName}.
RECONSTRUCT_MASTER_FAILED_NO_MASTER=No valid Data Storage Domains are available in Data Center ${StoragePoolName} (please check your storage infrastructure).
RECONSTRUCT_MASTER_DONE=Reconstruct Master Domain for Data Center ${StoragePoolName} completed.
RECONSTRUCT_MASTER_FAILED=Failed to Reconstruct Master Domain for Data Center ${StoragePoolName}.
IMPORTEXPORT_STARTING_EXPORT_VM=Starting export Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_EXPORT_VM=Vm ${VmName} was exported successfully to ${StorageDomainName}
IMPORTEXPORT_EXPORT_VM_FAILED=Failed to export Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_IMPORT_VM=Starting to import Vm ${VmName} to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_IMPORT_VM=Vm ${VmName} was imported successfully to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_IMPORT_VM_FAILED=Failed to import Vm ${VmName} to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_IMPORT_VM_FAILED_UPDATING_OVF=Failed to import Vm ${VmName} to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}, could not update VM data in export.
IMPORTEXPORT_STARTING_EXPORT_TEMPLATE=Starting to export Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_EXPORT_TEMPLATE=Template ${VmTemplateName} was exported successfully to ${StorageDomainName}
IMPORTEXPORT_EXPORT_TEMPLATE_FAILED=Failed to export Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_IMPORT_TEMPLATE=Starting to import Template ${VmTemplateName} to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_IMPORT_TEMPLATE=Template ${VmTemplateName} was imported successfully to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_IMPORT_TEMPLATE_FAILED=Failed to import Template ${VmTemplateName} to Data Center ${StoragePoolName}, Cluster ${VdsGroupName}
IMPORTEXPORT_STARTING_REMOVE_TEMPLATE=Starting to remove Template ${VmTemplateName} remove ${StorageDomainName}
IMPORTEXPORT_REMOVE_TEMPLATE=Template ${VmTemplateName} was removed from ${StorageDomainName}
IMPORTEXPORT_REMOVE_TEMPLATE_FAILED=Failed to remove Template ${VmTemplateName} from ${StorageDomainName}
IMPORTEXPORT_STARTING_REMOVE_VM=Starting to remove Vm ${VmName} remove from ${StorageDomainName}
IMPORTEXPORT_REMOVE_VM=Vm ${VmName} was removed from ${StorageDomainName}
IMPORTEXPORT_REMOVE_VM_FAILED=Failed to remove Vm ${VmName} remove from ${StorageDomainName}
IMPORTEXPORT_GET_VMS_INFO_FAILED=Failed to retrieve VM/Templates information from export domain ${StorageDomainName}
IMPORTEXPORT_IMPORT_TEMPLATE_FROM_TRUSTED_TO_UNTRUSTED=The Template ${VmTemplateName} was created in trusted cluster and imported into a non-trusted cluster
IMPORTEXPORT_IMPORT_TEMPLATE_FROM_UNTRUSTED_TO_TRUSTED=The Template ${VmTemplateName} was created in non-trusted cluster and imported into a trusted cluster
IMPORTEXPORT_IMPORT_VM_FROM_TRUSTED_TO_UNTRUSTED=The VM ${VmName} was created in trusted cluster and imported into a non-trusted cluster
IMPORTEXPORT_IMPORT_VM_FROM_UNTRUSTED_TO_TRUSTED=The VM ${VmName} was created in non-trusted cluster and imported into a trusted cluster
USER_ADD_ROLE_WITH_ACTION_GROUP=Role ${RoleName} was added by ${UserName}
USER_ADD_ROLE_WITH_ACTION_GROUP_FAILED=Failed to add role ${RoleName}
VDS_ALERT_FENCE_IS_NOT_CONFIGURED=Failed to verify Power Management configuration for Host ${VdsName}.
VDS_ALERT_FENCE_TEST_FAILED=Power Management test failed for Host ${VdsName}.${Reason}
VDS_ALERT_FENCE_OPERATION_FAILED=Failed to power fence host ${VdsName}. Please check the host status and it's power management settings, and then manually reboot it and click "Confirm Host Has Been Rebooted"
VDS_ALERT_FENCE_OPERATION_SKIPPED=Host ${VdsName} became non responsive. It has no power management configured. Please check the host status, manually reboot it, and click "Confirm Host Has Been Rebooted"
VDS_ALERT_FENCE_NO_PROXY_HOST=There is no other host in the data center that can be used to test the power management settings.
VDS_ALERT_FENCE_STATUS_VERIFICATION_FAILED=Failed to verify Host ${Host} ${Status} status, Please ${Status} Host ${Host} manually.
VDS_ALERT_SECONDARY_AGENT_USED_FOR_FENCE_OPERATION=Secondary fence agent was used to ${Operation} Host ${VdsName}
VDS_ALERT_PM_HEALTH_CHECK_FAILED_FOR_CON_PRIMARY_AGENT=Health check failed on Host ${VdsName} primary concurrent agent, future fence operations may fail on this Host.
VDS_ALERT_PM_HEALTH_CHECK_FAILED_FOR_SEQ_PRIMARY_AGENT=Health check failed on Host ${VdsName} primary sequential agent, future fence operations may fail if secondary agent is not defined properly.
VDS_ALERT_PM_HEALTH_CHECK_FAILED_FOR_CON_SECONDARY_AGENT=Health check failed on Host ${VdsName} secondary concurrent agent, future fence operations may fail on this Host.
VDS_ALERT_PM_HEALTH_CHECK_FAILED_FOR_SEQ_SECONDARY_AGENT=Health check failed on Host ${VdsName} secondary sequential agent, future fence operations may fail if primary agent is not defined properly.
VDS_ALERT_FENCE_OPERATION_SKIPPED_BROKEN_CONNECTIVITY=Host ${VdsName} became non responsive and was not restarted due to Fencing Policy: ${Percents} percents of the Hosts in the Cluster have connectivity issues.
VDS_ALERT_NOT_RESTARTED_DUE_TO_POLICY=Host ${VdsName} became non responsive and was not restarted due to the Cluster Fencing Policy.
VDS_ALERT_FENCE_DISABLED_BY_CLUSTER_POLICY=Host ${VdsName} became Non Responsive and was not restarted due to disabled fencing in the Cluster Fencing Policy.
VDS_HOST_NOT_RESPONDING_CONNECTING=Host ${VdsName} is not responding. It will stay in Connecting state for a grace period of ${Seconds} seconds and after that an attempt to fence the host will be issued.
TASK_STOPPING_ASYNC_TASK=Stopping async task ${CommandName} that started at ${Date}
REFRESH_REPOSITORY_IMAGE_LIST_FAILED=Refresh image list failed for domain(s): ${imageDomains}. Please check domain activity.
REFRESH_REPOSITORY_IMAGE_LIST_SUCCEEDED=Refresh image list succeeded for domain(s): ${imageDomains}
REFRESH_REPOSITORY_IMAGE_LIST_INCOMPLETE=Refresh image list probably incomplete for domain ${imageDomain}, only ${imageListSize} images discovered.
NUNBER_OF_LVS_ON_STORAGE_DOMAIN_EXCEEDED_THRESHOLD=The number of LVs on the domain ${storageDomainName} exceeded ${maxNumOfLVs}, you are approaching the limit where performance may degrade.
TASK_CLEARING_ASYNC_TASK=Clearing asynchronous task ${CommandName} that started at ${Date}
VM_WAS_SET_DOWN_DUE_TO_HOST_REBOOT_OR_MANUAL_FENCE=Vm ${VmName} was shut down due to ${VdsName} host reboot or manual fence
UPDATE_TAGS_VM_DEFAULT_DISPLAY_TYPE=Vm ${VmName} tag default display type was updated
UPDATE_TAGS_VM_DEFAULT_DISPLAY_TYPE_FAILED=Failed to update Vm ${VmName} tag default display type
CONNECT_STORAGE_SERVERS_FAILED=Failed to connect Host ${VdsName} to Storage Servers
CONNECT_STORAGE_POOL_FAILED=Failed to connect Host ${VdsName} to Storage Pool ${StoragePoolName}
STORAGE_DOMAIN_ERROR=The error message for connection ${Connection} returned by VDSM was: ${ErrorMessage}
VDS_LOW_MEM=Available memory of host ${HostName} [${AvailableMemory} MB] is under defined threshold [${Threshold} MB].
VDS_HIGH_MEM_USE=Used memory of host ${HostName} [${UsedMemory}%] exceeded defined threshold [${Threshold}%].
HOST_INTERFACE_HIGH_NETWORK_USE=Host ${HostName} has network interface which exceeded the defined threshold [${Threshold}%] (${InterfaceName}: transmit rate[${TransmitRate}%], receive rate [${ReceiveRate}%])
VDS_HIGH_CPU_USE=Used CPU of host ${HostName} [${UsedCpu}%] exceeded defined threshold [${Threshold}%].
VDS_HIGH_SWAP_USE=Used swap memory of host ${HostName} [${UsedSwap}%] exceeded defined threshold [${Threshold}%].
VDS_LOW_SWAP=Available swap memory of host ${HostName} [${AvailableSwapMemory} MB] is under defined threshold [${Threshold} MB].
UPDATE_OVF_FOR_STORAGE_POOL_FAILED=Failed to update VMs/Templates OVF data in Data Center ${StoragePoolName}.
RETRIEVE_OVF_STORE_FAILED=Failed to retrieve VMs and Templates from the OVF disk of Storage Domain ${StorageDomainName}.
OVF_STORE_DOES_NOT_EXISTS=The Storage Domain does not contain any OVF_STORE disks. Usually the Storage Domain does not contain OVF_STORE disks when the Storage Domain has been previously managed with a Data Center version lower then 3.5.
RETRIEVE_UNREGISTERED_ENTITIES_NOT_SUPPORTED_IN_DC_VERSION=Skipping retrieval attempt of VMs and Templates from the OVF_STORE disk of Storage Domain ${StorageDomainName} since it is not supported by the Data Center version.
UPDATE_OVF_FOR_STORAGE_DOMAIN_FAILED=Failed to update VMs/Templates OVF data for Storage Domain ${StorageDomainName} in Data Center ${StoragePoolName}.
CREATE_OVF_STORE_FOR_STORAGE_DOMAIN_FAILED=Failed to create OVF store disk for Storage Domain ${StorageDomainName}.\n The Disk with the id ${DiskId} might be removed manually for automatic attempt to create new one. \n OVF updates won't be attempted on the created disk.
CREATE_OVF_STORE_FOR_STORAGE_DOMAIN_INITIATE_FAILED=Failed to create OVF store disk for Storage Domain ${StorageDomainName}. \n OVF data won't be updated meanwhile for that domain.
UPDATE_FOR_OVF_STORES_FAILED=Failed to update OVF disks ${DisksIds}, OVF data isn't updated on those OVF stores (Data Center ${DataCenterName}, Storage Domain ${StorageDomainName}).
UPDATE_DESCRIPTION_FOR_DISK_FAILED=Failed to update the meta data description of disk ${DiskName} (Data Center ${DataCenterName}, Storage Domain ${StorageDomainName}).
UPDATE_DESCRIPTION_FOR_DISK_SKIPPED_SINCE_STORAGE_DOMAIN_NOT_ACTIVE=Not updating the metadata of Disk ${DiskName} (Data Center ${DataCenterName}. Since the Storage Domain ${StorageDomainName} is not in active.
DELETE_OVF_STORE_FOR_STORAGE_DOMAIN_FAILED=Failed to delete the OVF store disk for Storage Domain ${StorageDomainName}.\n In order to detach the domain please remove it manually or try to detach the domain again for another attempt.
IMPORTEXPORT_FAILED_TO_IMPORT_VM=Failed to read VM '${ImportedVmName}' OVF, it may be corrupted
IMPORTEXPORT_FAILED_TO_IMPORT_TEMPLATE=Failed to read Template '${Template}' OVF, it may be corrupted
CANNOT_HIBERNATE_RUNNING_VMS_AFTER_CLUSTER_CPU_UPGRADE=Hibernation of VMs after CPU upgrade of Cluster ${VdsGroup} is not supported. Please stop and restart those VMs in case you wish to hibernate them
STORAGE_ALERT_VG_METADATA_CRITICALLY_FULL=The system has reached the 80% watermark on the VG metadata area size on ${StorageDomainName}.\nThis is due to a high number of Vdisks or large Vdisks size allocated on this specific VG.
STORAGE_ALERT_SMALL_VG_METADATA=The allocated VG metadata area size is smaller than 50MB on ${StorageDomainName},\nwhich might limit its capacity (the number of Vdisks and/or their size).
RELOAD_CONFIGURATIONS_SUCCESS=System Configurations reloaded successfully.
RELOAD_CONFIGURATIONS_FAILURE=System Configurations failed to reload.
USER_ACCOUNT_DISABLED_OR_LOCKED=User ${UserName} cannot login, as it got disabled or locked. Please contact the system administrator.
USER_ACCOUNT_EXPIRED=The account for ${UserName} got expired. Please contact the system administrator.
USER_ACCOUNT_PASSWORD_EXPIRED=User ${UserName} cannot login, as the user account password has expired. Please contact the system administrator.
AUTH_FAILED_INVALID_CREDENTIALS=User ${UserName} cannot login, please verify the username and password.
AUTH_FAILED_CLOCK_SKEW_TOO_GREAT=User ${UserName} cannot login, the engine clock is not synchronized with directory services. Please contact the system administrator.
AUTH_FAILED_NO_KDCS_FOUND=User ${UserName} cannot login, authentication domain cannot be found. Please contact the system administrator.
AUTH_FAILED_DNS_ERROR=User ${UserName} cannot login, there's an error in DNS configuration. Please contact the system administrator.
AUTH_FAILED_OTHER=User ${UserName} cannot login, unknown kerberos error. Please contact the system administrator.
AUTH_FAILED_DNS_COMMUNICATION_ERROR=User ${UserName} cannot login, cannot lookup DNS for SRV records. Please contact the system administrator.
AUTH_FAILED_CONNECTION_TIMED_OUT=User ${UserName} cannot login, connection to LDAP server has timed out. Please contact the system administrator.
AUTH_FAILED_WRONG_REALM=User ${UserName} cannot login, please verify your domain name.
AUTH_FAILED_CONNECTION_ERROR=User ${UserName} cannot login, connection refused or some configuration problems exist. Possible DNS error. Please contact the system administrator.
AUTH_FAILED_CANNOT_FIND_LDAP_SERVER_FOR_DOMAIN=User ${UserName} cannot login, cannot find valid LDAP server for domain. Please contact the system administrator.
AUTH_FAILED_NO_USER_INFORMATION_WAS_FOUND=User ${UserName} cannot login, no user information was found. Please contact the system administrator.
AUTH_FAILED_CLIENT_NOT_FOUND_IN_KERBEROS_DATABASE=User ${UserName} cannot login, user was not found in domain. Please contact the system administrator.
AUTH_FAILED_INTERNAL_KERBEROS_ERROR=User ${UserName} cannot login, an internal error has ocurred in the Kerberos implementation of the JVM. Please contact the system administrator.
ENTITY_RENAMED=${EntityType} ${OldEntityName} was renamed from ${OldEntityName} to ${NewEntityName} by ${UserName}.
USER_ADD_EXTERNAL_JOB=New external Job ${description} was added by user ${UserName}
USER_ADD_EXTERNAL_JOB_FAILED=Failed to add new external Job ${description}
STORAGE_DOMAIN_TASKS_ERROR=Storage Domain ${StorageDomainName} is down while there are tasks running on it. These tasks may fail.
IMPORTEXPORT_IMPORT_VM_INVALID_INTERFACES=While importing VM ${EntityName}, the Network/s ${Networks} were found to be Non-VM Networks or do not exist in Cluster or are missing a suitable VM network interface profile. Network Name was not set in the Interface/s ${Interfaces}.
IMPORTEXPORT_IMPORT_TEMPLATE_INVALID_INTERFACES=While importing Template ${EntityName}, the Network/s ${Networks} were found to be Non-VM Networks or do not exist in Cluster. Network Name was not set in the Interface/s ${Interfaces}.
IMPORTEXPORT_SNAPSHOT_VM_INVALID_INTERFACES=While previewing a snapshot of VM ${EntityName}, the Network/s ${Networks} were found to be Non-VM Networks or do not exist in Cluster. Network Name was not set in the Interface/s ${Interfaces}.
ADD_VM_FROM_SNAPSHOT_INVALID_INTERFACES=While adding vm ${EntityName} from snapshot, the Network/s ${Networks} were found to be Non-VM Networks or do not exist in Cluster. Network Name was not set in the Interface/s ${Interfaces}.
VDS_SET_NON_OPERATIONAL_VM_NETWORK_IS_BRIDGELESS=Host ${VdsName} does not comply with the cluster ${VdsGroupName} networks, the following VM networks are non-VM networks: '${Networks}'
EMULATED_MACHINES_INCOMPATIBLE_WITH_CLUSTER=Host ${VdsName} does not comply with the cluster ${VdsGroupName} emulated machines. The Hosts emulated machines are ${hostSupportedEmulatedMachines} and the cluster is ${clusterEmulatedMachines}}
MIXING_RHEL_VERSIONS_IN_CLUSTER=Not possible to mix RHEL 6.x and 7.x hosts in one cluster. Tried adding ${addingRhel} host to a cluster with ${previousRhel} hosts.
RNG_SOURCES_INCOMPATIBLE_WITH_CLUSTER=Host ${VdsName} does not comply with the cluster ${VdsGroupName} Random Number Generator sources. The Hosts supported sources are: ${hostSupportedRngSources}; and the cluster requirements are: ${clusterRequiredRngSources}.
# NUMA Messages
NUMA_ADD_VM_NUMA_NODE_SUCCESS=Add VM NUMA node successfully.
NUMA_ADD_VM_NUMA_NODE_FAILED=Add VM NUMA node failed.
NUMA_UPDATE_VM_NUMA_NODE_SUCCESS=Update VM NUMA node successfully.
NUMA_UPDATE_VM_NUMA_NODE_FAILED=Update VM NUMA node failed.
NUMA_REMOVE_VM_NUMA_NODE_SUCCESS=Remove VM NUMA node successfully.
NUMA_REMOVE_VM_NUMA_NODE_FAILED=Remove VM NUMA node failed.
# Gluster Messages
GLUSTER_VOLUME_CREATE=Gluster Volume ${glusterVolumeName} created.
GLUSTER_VOLUME_CREATE_FAILED=Creation of Gluster Volume ${glusterVolumeName} failed.
GLUSTER_VOLUME_OPTION_ADDED=Volume Option ${Key}=${Value} set on ${glusterVolumeName}.
GLUSTER_VOLUME_OPTION_MODIFIED=Volume Option ${Key} changed to ${Value} from ${oldvalue} on ${glusterVolumeName}.
GLUSTER_VOLUME_OPTION_SET_FAILED=Volume Option ${Key}=${Value} could not be set on ${glusterVolumeName}.
GLUSTER_VOLUME_START=Gluster Volume ${glusterVolumeName} started.
GLUSTER_VOLUME_START_FAILED=Could not start Gluster Volume ${glusterVolumeName}.
GLUSTER_VOLUME_STOP=Gluster Volume ${glusterVolumeName} stopped.
GLUSTER_VOLUME_STOP_FAILED=Could not stop Gluster Volume ${glusterVolumeName}.
GLUSTER_VOLUME_OPTIONS_RESET=Volume Option ${Key}=${Value} reset on ${glusterVolumeName}.
GLUSTER_VOLUME_OPTIONS_RESET_ALL=All Volume Options reset on ${glusterVolumeName}.
GLUSTER_VOLUME_OPTIONS_RESET_FAILED=Could not reset Gluster Volume ${glusterVolumeName} Options.
GLUSTER_VOLUME_DELETE=Gluster Volume ${glusterVolumeName} deleted.
GLUSTER_VOLUME_DELETE_FAILED=Could not delete Gluster Volume ${glusterVolumeName}.
GLUSTER_VOLUME_REMOVE_BRICKS=Bricks removed from Gluster Volume ${glusterVolumeName}.
GLUSTER_VOLUME_REMOVE_BRICKS_FAILED=Could not remove Gluster Volume ${glusterVolumeName} Bricks.
GLUSTER_VOLUME_ADD_BRICK= ${NoOfBricks} brick(s) added to volume ${glusterVolumeName}.
GLUSTER_VOLUME_ADD_BRICK_FAILED=Gluster Volume ${glusterVolumeName} add brick failed.
GLUSTER_VOLUME_REBALANCE_START=Gluster Volume ${glusterVolumeName} rebalance started.
GLUSTER_VOLUME_REBALANCE_START_FAILED=Could not start Gluster Volume ${glusterVolumeName} rebalance.
GLUSTER_VOLUME_REBALANCE_STOP=Gluster Volume ${glusterVolumeName} rebalance stopped.
GLUSTER_VOLUME_REBALANCE_STOP_FAILED=Could not stop rebalance of gluster volume ${glusterVolumeName}.
START_REMOVING_GLUSTER_VOLUME_BRICKS=Started removing bricks from Volume ${glusterVolumeName}
START_REMOVING_GLUSTER_VOLUME_BRICKS_FAILED=Could not start remove bricks from Volume ${glusterVolumeName}
GLUSTER_VOLUME_REMOVE_BRICKS_COMMIT=Gluster volume ${glusterVolumeName} remove bricks committed. ${NoOfBricks} brick(s) removed from volume ${glusterVolumeName}.
GLUSTER_VOLUME_REMOVE_BRICKS_STOP=Stopped removing bricks from Volume ${glusterVolumeName}
GLUSTER_VOLUME_REMOVE_BRICKS_STOP_FAILED=Failed to stop remove bricks from Volume ${glusterVolumeName}
GLUSTER_VOLUME_REMOVE_BRICKS_COMMIT_FAILED=Gluster volume ${glusterVolumeName} remove bricks could not be commited
GLUSTER_VOLUME_REPLACE_BRICK_FAILED=Replace Gluster Volume ${glusterVolumeName} Brick failed
GLUSTER_VOLUME_REPLACE_BRICK_START=Gluster Volume ${glusterVolumeName} Replace Brick started.
GLUSTER_VOLUME_REPLACE_BRICK_START_FAILED=Could not start Gluster Volume ${glusterVolumeName} Replace Brick.
GLUSTER_VOLUME_REBALANCE_FINISHED=${action} ${status} on volume ${glusterVolumeName}.
GLUSTER_VOLUME_MIGRATE_BRICK_DATA_FINISHED=${action} ${status} for brick(s) on volume ${glusterVolumeName}. Please review to abort or commit.
GLUSTER_SERVER_ADD_FAILED=Failed to add host ${VdsName} into Cluster ${VdsGroupName}.
GLUSTER_VOLUME_REBALANCE_START_DETECTED_FROM_CLI=Detected start of rebalance on volume ${glusterVolumeName} of Cluster ${VdsGroupName} from CLI.
START_REMOVING_GLUSTER_VOLUME_BRICKS_DETECTED_FROM_CLI=Detected start of brick removal for bricks ${brick} on volume ${glusterVolumeName} of Cluster ${VdsGroupName} from CLI.
GLUSTER_VOLUME_REBALANCE_NOT_FOUND_FROM_CLI=Could not find information for rebalance on volume ${glusterVolumeName} of Cluster ${VdsGroupName} from CLI. Marking it as unknown.
REMOVE_GLUSTER_VOLUME_BRICKS_NOT_FOUND_FROM_CLI=Could not find information for remove brick on volume ${glusterVolumeName} of Cluster ${VdsGroupName} from CLI. Marking it as unknown.
GLUSTER_SERVER_REMOVE=Host ${VdsName} removed from Cluster ${VdsGroupName}.
GLUSTER_SERVER_REMOVE_FAILED=Failed to remove host ${VdsName} from Cluster ${VdsGroupName}.
GLUSTER_SERVERS_LIST_FAILED=Failed to fetch gluster peer list from server ${VdsName} on Cluster ${VdsGroupName}.
HA_VM_FAILED=Highly Available VM ${VmName} failed. It will be restarted automatically.
HA_VM_RESTART_FAILED=Restart of the Highly Available VM ${VmName} failed.
EXCEEDED_MAXIMUM_NUM_OF_RESTART_HA_VM_ATTEMPTS=Highly Available VM ${VmName} could not be restarted automatically, exceeded the maximum number of attempts.
GLUSTER_VOLUME_PROFILE_START=Gluster Volume ${glusterVolumeName} Profile started.
GLUSTER_VOLUME_PROFILE_START_FAILED=Could not start Profiling on gluster volume ${glusterVolumeName}
GLUSTER_VOLUME_PROFILE_STOP=Gluster Volume ${glusterVolumeName} Profile stopped.
GLUSTER_VOLUME_PROFILE_STOP_FAILED=Could not stop Profiling on gluster volume ${glusterVolumeName}.
GLUSTER_COMMAND_FAILED=Gluster command [${Command}] failed on server ${VdsName}.
GLUSTER_VOLUME_INFO_FAILED=Failed to fetch gluster volume list from server ${VdsName}.
GLUSTER_VOLUME_CREATED_FROM_CLI=Detected new volume ${glusterVolumeName} on cluster ${VdsGroupName}, and added it to engine DB.
GLUSTER_VOLUME_DELETED_FROM_CLI=Detected deletion of volume ${glusterVolumeName} on cluster ${VdsGroupName}, and deleted it from engine DB.
GLUSTER_VOLUME_OPTION_SET_FROM_CLI=Detected new option ${key}=${value} on volume ${glusterVolumeName} of cluster ${VdsGroupName}, and added it to engine DB.
GLUSTER_VOLUME_OPTION_CHANGED_FROM_CLI=Detected change in value of option ${key} from ${oldValue} to ${newValue} on volume ${glusterVolumeName} of cluster ${VdsGroupName}, and updated it to engine DB.
GLUSTER_VOLUME_OPTION_RESET_FROM_CLI=Detected option ${key}=${value} reset on volume ${glusterVolumeName} of cluster ${VdsGroupName}, and removed it from engine DB.
GLUSTER_VOLUME_PROPERTIES_CHANGED_FROM_CLI=Detected changes in properties of volume ${glusterVolumeName} of cluster ${VdsGroupName}, and updated the same in engine DB.
GLUSTER_VOLUME_BRICK_ADDED_FROM_CLI=Detected new brick ${brick} on volume ${glusterVolumeName} of cluster ${VdsGroupName}, and added it to engine DB.
GLUSTER_VOLUME_BRICK_REMOVED_FROM_CLI=Detected brick ${brick} removed from Volume ${glusterVolumeName} of cluster ${VdsGroupName}, and removed it from engine DB.
GLUSTER_SERVER_REMOVED_FROM_CLI=Detected server ${VdsName} removed from Cluster ${VdsGroupName}, and removed it from engine DB.
GLUSTER_VOLUME_STARTED_FROM_CLI=Detected that Volume ${glusterVolumeName} of Cluster ${VdsGroupName} was started, and updated engine DB with it's new status.
GLUSTER_VOLUME_STOPPED_FROM_CLI=Detected that Volume ${glusterVolumeName} of Cluster ${VdsGroupName} was stopped, and updated engine DB with it's new status.
GLUSTER_HOOK_ENABLE=Gluster Hook ${GlusterHookName} enabled on cluster ${VdsGroupName}.
GLUSTER_HOOK_ENABLE_PARTIAL=Gluster Hook ${GlusterHookName} enabled on some of the servers on cluster ${VdsGroupName}. ${FailureMessage}
GLUSTER_HOOK_ENABLE_FAILED=Failed to enable Gluster Hook ${GlusterHookName} on cluster ${VdsGroupName}. ${FailureMessage}
GLUSTER_HOOK_DISABLE=Gluster Hook ${GlusterHookName} disabled on cluster ${VdsGroupName}.
GLUSTER_HOOK_DISABLE_FAILED=Failed to disable Gluster Hook ${GlusterHookName} on cluster ${VdsGroupName}. ${FailureMessage}
GLUSTER_HOOK_DISABLE_PARTIAL=Gluster Hook ${GlusterHookName} disabled on some of the servers on cluster ${VdsGroupName}. ${FailureMessage}
GLUSTER_HOOK_LIST_FAILED=Failed to retrieve hook list from ${VdsName} of Cluster ${VdsGroupName}.
GLUSTER_HOOK_CONFLICT_DETECTED=Detected conflict in hook ${HookName} of Cluster ${VdsGroupName}.
GLUSTER_HOOK_DETECTED_NEW=Detected new hook ${HookName} in Cluster ${VdsGroupName}.
GLUSTER_HOOK_DETECTED_DELETE=Detected removal of hook ${HookName} in Cluster ${VdsGroupName}.
GLUSTER_HOOK_GETCONTENT_FAILED=Failed to read content of hook ${HookName} in Cluster ${VdsGroupName}.
GLUSTER_SERVICES_LIST_FAILED=Could not fetch statuses of services from server ${VdsName}. Updating statuses of all services on this server to UNKNOWN.
GLUSTER_SERVICE_TYPE_ADDED_TO_CLUSTER=Service type ${ServiceType} was not mapped to cluster ${VdsGroupName}. Mapped it now.
GLUSTER_CLUSTER_SERVICE_STATUS_CHANGED=Status of service type ${ServiceType} changed from ${OldStatus} to ${NewStatus} on cluster ${VdsGroupName}
GLUSTER_CLUSTER_SERVICE_STATUS_ADDED=Status of service type ${ServiceType} set to ${NewStatus} on cluster ${VdsGroupName}
GLUSTER_SERVICE_ADDED_TO_SERVER=Service ${ServiceName} was not mapped to server ${VdsName}. Mapped it now.
GLUSTER_SERVER_SERVICE_STATUS_CHANGED=Status of service ${ServiceName} on server ${VdsName} changed from ${OldStatus} to ${NewStatus}. Updating in engine now.
GLUSTER_HOST_UUID_NOT_FOUND=Could not find gluster uuid of server ${VdsName} on Cluster ${VdsGroupName}.
GLUSTER_HOST_UUID_ALREADY_EXISTS=Gluster UUID of host ${VdsName} on Cluster ${VdsGroupName} already exists.
WATCHDOG_EVENT=Watchdog event (${wdaction}) triggered on ${VmName} at ${wdevent} (host time).
GLUSTER_HOOK_UPDATED=Gluster Hook ${GlusterHookName} updated on conflicting servers.
GLUSTER_HOOK_UPDATE_FAILED=Failed to update Gluster Hook ${GlusterHookName} on conflicting servers. ${FailureMessage}
GLUSTER_HOOK_ADDED=Gluster Hook ${GlusterHookName} added on conflicting servers.
GLUSTER_HOOK_ADD_FAILED=Failed to add Gluster Hook ${GlusterHookName} on conflicting servers. ${FailureMessage}
GLUSTER_HOOK_REMOVED=Gluster Hook ${GlusterHookName} removed from all servers in cluster ${VdsGroupName}.
GLUSTER_HOOK_REMOVE_FAILED=Failed to remove Gluster Hook ${GlusterHookName} from cluster ${VdsGroupName}. ${FailureMessage}
GLUSTER_HOOK_REFRESH=Refreshed gluster hooks in Cluster ${VdsGroupName}.
GLUSTER_HOOK_REFRESH_FAILED=Failed to refresh gluster hooks in Cluster ${VdsGroupName}.
GLUSTER_VOLUME_DETAILS_REFRESH=Refreshed details of the volume ${glusterVolumeName}.
GLUSTER_VOLUME_DETAILS_REFRESH_FAILED=Failed to refresh the details of volume ${glusterVolumeName}.
GLUSTER_SERVICE_STARTED=${servicetype} service started on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_SERVICE_START_FAILED=Could not start ${servicetype} service on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_SERVICE_STOPPED=${servicetype} services stopped on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_SERVICE_STOP_FAILED=Could not stop ${servicetype} service on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_SERVICES_LIST_NOT_FETCHED=Could not fetch list of services from ${ServiceGroupType} named ${ServiceGroupName}.
GLUSTER_SERVICE_RESTARTED=${servicetype} service re-started on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_SERVICE_RESTART_FAILED=Could not re-start ${servicetype} service on host ${VdsName} on cluster ${VdsGroupName}.
GLUSTER_VOLUME_BRICK_ADDED=Brick [${brickpath}] on host [${servername}] added to volume [${glusterVolumeName}]
GLUSTER_BRICK_STATUS_CHANGED=Detected change in status of brick ${brickpath} of volume ${glusterVolumeName} from ${oldValue} to ${newValue}.
VDS_UNTRUSTED=Host ${VdsName} was set to non-operational. Host is not trusted by the attestation service.
USER_ADDED_NETWORK_QOS=Network QoS ${QosName} was added. (User: ${UserName})
USER_FAILED_TO_ADD_NETWORK_QOS=Failed to add Network QoS ${QosName}. (User: ${UserName})
USER_REMOVED_NETWORK_QOS=Network QoS ${QosName} was removed. (User: ${UserName})
USER_FAILED_TO_REMOVE_NETWORK_QOS=Failed to remove Network QoS ${QosName}. (User: ${UserName})
USER_UPDATED_NETWORK_QOS=Network QoS ${QosName} was updated. (User: ${UserName})
USER_FAILED_TO_UPDATE_NETWORK_QOS=Failed to update Network QoS ${QosName}. (User: ${UserName})
USER_ADDED_QOS=QoS ${QoSName} was added. (User: ${UserName})
USER_FAILED_TO_ADD_QOS=Failed to add QoS ${QoSName}. (User: ${UserName})
USER_REMOVED_QOS=QoS ${QoSName} was removed. (User: ${UserName})
USER_FAILED_TO_REMOVE_QOS=Failed to remove QoS ${QoSName}. (User: ${UserName})
USER_UPDATED_QOS=QoS ${QoSName} was updated. (User: ${UserName})
USER_FAILED_TO_UPDATE_QOS=Failed to update QoS ${QoSName}. (User: ${UserName})
USER_ADD_CLUSTER_POLICY=Clsuter Policy ${ClusterPolicy} was added. (User: ${UserName})
USER_FAILED_TO_ADD_CLUSTER_POLICY=Failed to add Clsuter Policy: ${ClusterPolicy}. (User: ${UserName})
USER_UPDATE_CLUSTER_POLICY=Clsuter Policy ${ClusterPolicy} was updated. (User: ${UserName})
USER_FAILED_TO_UPDATE_CLUSTER_POLICY=Failed to update Clsuter Policy: ${ClusterPolicy}. (User: ${UserName})
USER_REMOVE_CLUSTER_POLICY=Clsuter Policy ${ClusterPolicy} was removed. (User: ${UserName})
USER_FAILED_TO_REMOVE_CLUSTER_POLICY=Failed to remove Clsuter Policy: ${ClusterPolicy}. (User: ${UserName})
FAILED_TO_CONNECT_TO_SCHEDULER_PROXY=Failed to connect to external scheduler proxy. External filters, scoring functions and load balancing will not be performed.
EXTERNAL_SCHEDULER_PLUGIN_ERROR=Running the external scheduler plugin '${PluginName}' failed: '${ErrorMessage}'
EXTERNAL_SCHEDULER_ERROR=Running the external scheduler failed: '${ErrorMessage}'
EXTERNAL_EVENT_NORMAL=An external event with NORMAL severity has been added.
EXTERNAL_EVENT_WARNING=An external event with WARNING severity has been added.
EXTERNAL_EVENT_ERROR=An external event with ERROR severity has been added.
EXTERNAL_ALERT=An external event with ALERT severity has been added.
USER_UPDATED_MOM_POLICIES=Mom policy was updated on host ${VdsName}.
USER_FAILED_TO_UPDATE_MOM_POLICIES=Mom policy could not be updated on host ${VdsName}.
DISK_ALIGNMENT_SCAN_START=Starting alignment scan of disk '${DiskAlias}'.
DISK_ALIGNMENT_SCAN_FAILURE=Alignment scan of disk '${DiskAlias}' failed.
DISK_ALIGNMENT_SCAN_SUCCESS=Alignment scan of disk '${DiskAlias}' is complete.
VM_MEMORY_NOT_IN_RECOMMENDED_RANGE=VM ${VmName} was configured with ${VmMemInMb}mb of memory while the recommended value range is ${VmMinMemInMb}mb - ${VmMaxMemInMb}mb
VM_CONSOLE_CONNECTED=User ${UserName} is connected to VM ${VmName}.
VM_CONSOLE_DISCONNECTED=User ${UserName} got disconnected from VM ${VmName}.
VDS_STATUS_CHANGE_FAILED_DUE_TO_STOP_SPM_FAILURE=Failed to change status of host '${VdsName}' due to a failure to stop the spm.
CLUSTER_ALERT_HA_RESERVATION=Cluster ${ClusterName} failed the HA Reservation check, HA VMs on host(s): ${Hosts} will fail to migrate in case of a failover, consider adding resources or shutting down unused VMs.
CLUSTER_ALERT_HA_RESERVATION_DOWN=Cluster ${ClusterName} passed the HA Reservation check.
PM_POLICY_UP_TO_MAINTENANCE=Host ${Host} is not currently needed, activating maintenance mode in preparation for shutdown.
PM_POLICY_MAINTENANCE_TO_DOWN=Host ${Host} is not currently needed, shutting down.
PM_POLICY_TO_UP=Reactivating host ${Host} according to the current power management policy.
USER_ADDED_AFFINITY_GROUP=Affinity Group ${affinityGroupName} was added. (User: ${UserName})
USER_FAILED_TO_ADD_AFFINITY_GROUP=Failed to add Affinity Group ${affinityGroupName}. (User: ${UserName})
USER_UPDATED_AFFINITY_GROUP=Affinity Group ${affinityGroupName} was updated. (User: ${UserName})
USER_FAILED_TO_UPDATE_AFFINITY_GROUP=Failed to update Affinity Group ${affinityGroupName}. (User: ${UserName})
USER_REMOVED_AFFINITY_GROUP=Affinity Group ${affinityGroupName} was removed. (User: ${UserName})
USER_FAILED_TO_REMOVE_AFFINITY_GROUP=Failed to remove Affinity Group ${affinityGroupName}. (User: ${UserName})
USER_SET_HOSTED_ENGINE_MAINTENANCE=Hosted Engine HA maintenance mode was updated on host ${VdsName}.
USER_FAILED_TO_SET_HOSTED_ENGINE_MAINTENANCE=Hosted Engine HA maintenance mode could not be updated on host ${VdsName}.
VM_SLA_POLICY=VM ${VmName} SLA Policy was set. CPU limit is set to ${cpuLimit}
FAILED_VM_SLA_POLICY= Failed to set SLA Policy to VM ${VmName}. Underlying error message: ${ErrorMessage}

ISCSI_BOND_ADD_SUCCESS=iSCSI bond '${IscsiBondName}' was successfully created in Data Center '${StoragePoolName}'.
ISCSI_BOND_ADD_SUCCESS_WITH_WARNING=iSCSI bond '${IscsiBondName}' was successfully created in Data Center '${StoragePoolName}' but some of the hosts encountered connection issues.
ISCSI_BOND_ADD_FAILED=Failed to create iSCSI bond '${IscsiBondName}' in Data Center '${StoragePoolName}'.
ISCSI_BOND_EDIT_SUCCESS=iSCSI bond '${IscsiBondName}' was successfully updated.
ISCSI_BOND_EDIT_SUCCESS_WITH_WARNING=iSCSI bond '${IscsiBondName}' was successfully updated but some of the hosts encountered connection issues.
ISCSI_BOND_EDIT_FAILED=Failed to update iSCSI bond '${IscsiBondName}'.
ISCSI_BOND_REMOVE_SUCCESS=iSCSI bond '${IscsiBondName}' was removed from Data Center '${StoragePoolName}'
ISCSI_BOND_REMOVE_FAILED=Failed to remove iSCSI bond '${IscsiBondName}' from Data Center '${StoragePoolName}'

FENCE_KDUMP_LISTENER_IS_NOT_ALIVE=Unable to determine if Kdump is in progress on host '${VdsName}', because fence_kdump listener is not running.
KDUMP_FLOW_DETECTED_ON_VDS=Kdump flow is in progress on host '${VdsName}'.
KDUMP_FLOW_NOT_DETECTED_ON_VDS=Kdump flow is not in progress on host '${VdsName}'.
KDUMP_FLOW_FINISHED_ON_VDS=Kdump flow finished on host '${VdsName}'.
KDUMP_DETECTION_NOT_CONFIGURED_ON_VDS=Kdump integration is enabled for host '${VdsName}', but kdump is not configured properly on host.
DWH_STOPPED=History Service stopped.
DWH_STARTED=History Service started.
DWH_ERROR=Error in History Service.
USER_REMOVE_AUDIT_LOG=Event log message ${AuditLogId} was removed by User ${UserName}.
USER_REMOVE_AUDIT_LOG_FAILED=User ${UserName} failed to remove event log message  ${AuditLogId}.
USER_CLEAR_ALL_DISMISSED_AUDIT_LOG=User ${UserName} had restored all deleted event log messages.
USER_CLEAR_ALL_DISMISSED_AUDIT_LOG_FAILED=User ${UserName} failed to restore all deleted audit log messages.
VM_FAILED_TO_PRESTART_IN_POOL=Cannot pre-start VM in pool '${VmPoolName}'. The system will continue trying.

