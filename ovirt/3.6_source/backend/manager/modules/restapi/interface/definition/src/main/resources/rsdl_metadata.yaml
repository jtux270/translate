


!!org.ovirt.engine.api.rsdl.MetaData
actions:
- name: /vms|rel=get
  description: get all the virtual machines in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}|rel=get
  description: get the virtual machine in the system for the given virtual machine id
  request:
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}|rel=delete
  description: deletes the virtual machine in the system for the given virtual machine id
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.force: xs:boolean
          action.vm.disks.detach_only: xs:boolean
        description: deletes the virtual machine in the system for the given virtual machine id with optional arguments where the vm can be forced to be removed and option to just detach the disks associated with the vm.
- name: /vms/{vm:id}|rel=update
  description: update the virtual machine in the system for the given virtual machine id
  request:
    body:
      parameterType: VM
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          vm.instance_type.id|name: xs:string
          vm.name: xs:string
          vm.cluster.id|name: xs:string
          vm.timezone--DEPRECATED: xs:string
          vm.time_zone.name: xs:string
          vm.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          vm.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
          vm.os.type: xs:string
          vm.usb.enabled: xs:boolean
          vm.usb.type: xs:string
          vm.type: xs:string
          vm.os.initRd: xs:string
          vm.display.monitors: xs:int
          vm.display.single_qxl_pci: xs:boolean
          vm.display.type: xs:string
          vm.display.allow_override: xs:boolean
          vm.display.smartcard_enabled: xs:boolean
          vm.display.file_transfer_enabled: xs:boolean
          vm.display.copy_paste_enabled: xs:boolean
          vm.display.keyboard_layout: xs:string
          vm.os.cmdline: xs:string
          vm.cpu.mode: xs:string
          vm.cpu.architecture: xs:string
          vm.cpu.topology.cores: xs:int
          vm.cpu_shares: xs:int
          vm.memory: xs:long
          vm.io.threads: xs:int
          vm.memory_policy.guaranteed: xs:long
          vm.memory_policy.ballooning: xs:boolean
          vm.high_availability.priority: xs:int
          vm.high_availability.enabled: xs:boolean
          vm.domain.name: xs:string
          vm.description: xs:string
          vm.comment: xs:string
          vm.stateless: xs:boolean
          vm.delete_protected: xs:boolean
          vm.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
          vm.rng_device.rate.bytes: xs:int
          vm.rng_device.rate.period: xs:int
          vm.rng_device.source: xs:string
          vm.console.enabled: xs:boolean
          vm.cpu.topology.sockets: xs:int
          vm.placement_policy.affinity: xs:string
          vm.placement_policy.host.id|name: xs:string
          vm.origin: xs:string
          vm.os.kernel: xs:string
          vm.tunnel_migration: xs:boolean
          vm.migration_downtime: xs:int
          vm.virtio_scsi.enabled: xs:boolean
          vm.soundcard_enabled: xs:boolean
          vm.custom_emulated_machine: xs:string
          vm.custom_cpu_model: xs:string
          vm.use_latest_template_version: xs:boolean
          vm.payloads.payload--COLLECTION: {payload.type: 'xs:string', payload.volume_id: 'xs:string', payload.files.file--COLLECTION: {file.name: 'xs:string', file.content: 'xs:string'}}
          vm.cpu.cpu_tune.vcpu_pin--COLLECTION: {vcpu_pin.vcpu: 'xs:int', vcpu_pin.cpu_set: 'xs:string'}
          vm.serial_number.policy: xs:string
          vm.serial_number.value: xs:string
          vm.bios.boot_menu.enabled: xs:boolean
          vm.numa_tune_mode: xs:string
          vm.start_paused: xs:boolean
          vm.cpu_profile.id: xs:string
          vm.migration.auto_converge: xs:string
          vm.migration.compressed: xs:string
          vm.external_host_provider.id: xs:string
          vm.small_icon.id: xs:string
          vm.large_icon.id: xs:string
          vm.large_icon.media_type: xs:string
          vm.large_icon.data: xs:string
        description: update the virtual machine in the system for the given virtual machine id with the values specified in the request
- name: /vms/{vm:id}/applications|rel=get
  description: get all the applications installed on the vm identified by the given id
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /vms/{vm:id}/applications/{application:id}|rel=get
  description: get the application installed on the specified vm
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /vms|rel=add
  description: add a virtual machine to the system
  request:
    body:
      parameterType: VM
      signatures:
      - mandatoryArguments: {vm.name: 'xs:string', vm.template.id|name: 'xs:string', vm.cluster.id|name: 'xs:string'}
        optionalArguments:
          vm.instance_type.id|name: xs:string
          vm.quota.id: xs:string
          vm.timezone--DEPRECATED: xs:string
          vm.time_zone.name: xs:string
          vm.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          vm.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
          vm.os.type: xs:string
          vm.usb.enabled: xs:boolean
          vm.usb.type: xs:string
          vm.type: xs:string
          vm.os.initRd: xs:string
          vm.display.monitors: xs:int
          vm.display.single_qxl_pci: xs:boolean
          vm.display.type: xs:string
          vm.display.allow_override: xs:boolean
          vm.display.smartcard_enabled: xs:boolean
          vm.display.file_transfer_enabled: xs:boolean
          vm.display.copy_paste_enabled: xs:boolean
          vm.display.keyboard_layout: xs:string
          vm.display.disconnect_action: xs:string
          vm.os.cmdline: xs:string
          vm.cpu.topology.cores: xs:int
          vm.cpu.architecture: xs:string
          vm.memory: xs:long
          vm.io.threads: xs:int
          vm.memory_policy.guaranteed: xs:long
          vm.memory_policy.ballooning: xs:boolean
          vm.high_availability.priority: xs:int
          vm.high_availability.enabled: xs:boolean
          vm.domain.name: xs:string
          vm.description: xs:string
          vm.comment: xs:string
          vm.stateless: xs:boolean
          vm.permissions.clone: xs:boolean
          vm.delete_protected: xs:boolean
          vm.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
          vm.rng_device.rate.bytes: xs:int
          vm.rng_device.rate.period: xs:int
          vm.rng_device.source: xs:string
          vm.console.enabled: xs:boolean
          vm.cpu.mode: xs:string
          vm.cpu.topology.sockets: xs:int
          vm.cpu_shares: xs:int
          vm.placement_policy.affinity: xs:string
          vm.placement_policy.host.id|name: xs:string
          vm.origin: xs:string
          vm.os.kernel: xs:string
          vm.disks.clone: xs:boolean
          vm.tunnel_migration: xs:boolean
          vm.migration_downtime: xs:int
          vm.virtio_scsi.enabled: xs:boolean
          vm.soundcard_enabled: xs:boolean
          vm.custom_emulated_machine: xs:string
          vm.custom_cpu_model: xs:string
          vm.payloads.payload--COLLECTION: {payload.type: 'xs:string', payload.volume_id: 'xs:string', payload.files.file--COLLECTION: {file.name: 'xs:string', file.content: 'xs:string'}}
          vm.initialization.configuration.type: 'xs:string'
          vm.initialization.configuration.data: 'xs:string'
          vm.cpu.cpu_tune.vcpu_pin--COLLECTION: {vcpu_pin.vcpu: 'xs:int', vcpu_pin.cpu_set: 'xs:string'}
          vm.use_latest_template_version: xs:boolean
          vm.serial_number.policy: xs:string
          vm.serial_number.value: xs:string
          vm.bios.boot_menu.enabled: xs:boolean
          vm.numa_tune_mode: xs:string
          vm.start_paused: xs:boolean
          vm.cpu_profile.id: xs:string
          vm.migration.auto_converge: xs:string
          vm.migration.compressed: xs:string
          vm.small_icon.id: xs:string
          vm.large_icon.id: xs:string
          vm.large_icon.media_type: xs:string
          vm.large_icon.data: xs:string
        description: add a virtual machine to the system from scratch
      # the following signature is for clone VM from a Snapshot - requires the Snapshot ID
      - mandatoryArguments: {vm.name: 'xs:string', vm.template.id|name: 'xs:string', vm.cluster.id|name: 'xs:string',
          vm.snapshots.snapshot--COLLECTION: {snapshot.id: 'xs:string'}}
        optionalArguments:
          vm.quota.id: xs:string
          vm.timezone--DEPRECATED: xs:string
          vm.time_zone.name: xs:string
          vm.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          vm.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
          vm.os.type: xs:string
          vm.usb.enabled: xs:boolean
          vm.usb.type: xs:string
          vm.type: xs:string
          vm.os.initRd: xs:string
          vm.display.monitors: xs:int
          vm.display.single_qxl_pci: xs:boolean
          vm.display.type: xs:string
          vm.display.allow_override: xs:boolean
          vm.display.smartcard_enabled: xs:boolean
          vm.display.file_transfer_enabled: xs:boolean
          vm.display.copy_paste_enabled: xs:boolean
          vm.display.keyboard_layout: xs:string
          vm.display.disconnect_action: xs:string
          vm.os.cmdline: xs:string
          vm.cpu.topology.cores: xs:int
          vm.cpu_shares: xs:int
          vm.cpu.architecture: xs:string
          vm.memory: xs:long
          vm.memory_policy.guaranteed: xs:long
          vm.memory_policy.ballooning: xs:boolean
          vm.high_availability.priority: xs:int
          vm.high_availability.enabled: xs:boolean
          vm.domain.name: xs:string
          vm.description: xs:string
          vm.comment: xs:string
          vm.stateless: xs:boolean
          vm.delete_protected: xs:boolean
          vm.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
          vm.rng_device.rate.bytes: xs:int
          vm.rng_device.rate.period: xs:int
          vm.rng_device.source: xs:string
          vm.console.enabled: xs:boolean
          vm.cpu.topology.sockets: xs:int
          vm.placement_policy.affinity: xs:string
          vm.placement_policy.host.id|name: xs:string
          vm.origin: xs:string
          vm.os.kernel: xs:string
          vm.tunnel_migration: xs:boolean
          vm.migration_downtime: xs:int
          vm.virtio_scsi.enabled: xs:boolean
          vm.soundcard_enabled: xs:boolean
          vm.custom_emulated_machine: xs:string
          vm.custom_cpu_model: xs:string
          vm.payloads.payload--COLLECTION: {payload.type: 'xs:string', payload.volume_id: 'xs:string', payload.files.file--COLLECTION: {file.name: 'xs:string', file.content: 'xs:string'}}
          vm.cpu.cpu_tune.vcpu_pin--COLLECTION: {vcpu_pin.vcpu: 'xs:int', vcpu_pin.cpu_set: 'xs:string'}
          vm.serial_number.policy: xs:string
          vm.serial_number.value: xs:string
          vm.bios.boot_menu.enabled: xs:boolean
          vm.numa_tune_mode: xs:string
          vm.start_paused: xs:boolean
          vm.cpu_profile.id: xs:string
          vm.migration.auto_converge: xs:string
          vm.migration.compressed: xs:string
          vm.small_icon.id: xs:string
          vm.large_icon.id: xs:string
          vm.large_icon.media_type: xs:string
          vm.large_icon.data: xs:string
        description: add a virtual machine to the system by cloning from a snapshot
      # the following signature is for adding VM from a configuration - requires the configuration type and the configuration data
      - mandatoryArguments: {vm.initialization.configuration.type: 'xs:string', vm.initialization.configuration.data: 'xs:string'}
        optionalArguments:
                vm.name: 'xs:string'
                vm.quota.id: xs:string
                vm.timezone--DEPRECATED: xs:string
                vm.time_zone.name: xs:string
                vm.os.boot--COLLECTION: {boot.dev: 'xs:string'}
                vm.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
                vm.os.type: xs:string
                vm.usb.enabled: xs:boolean
                vm.usb.type: xs:string
                vm.type: xs:string
                vm.os.initRd: xs:string
                vm.display.monitors: xs:int
                vm.display.type: xs:string
                vm.display.allow_override: xs:boolean
                vm.display.smartcard_enabled: xs:boolean
                vm.display.file_transfer_enabled: xs:boolean
                vm.display.copy_paste_enabled: xs:boolean
                vm.display.keyboard_layout: xs:string
                vm.display.disconnect_action: xs:string
                vm.os.cmdline: xs:string
                vm.cpu.topology.cores: xs:int
                vm.memory: xs:long
                vm.memory_policy.guaranteed: xs:long
                vm.memory_policy.ballooning: xs:boolean
                vm.high_availability.priority: xs:int
                vm.high_availability.enabled: xs:boolean
                vm.domain.name: xs:string
                vm.description: xs:string
                vm.comment: xs:string
                vm.stateless: xs:boolean
                vm.permissions.clone: xs:boolean
                vm.delete_protected: xs:boolean
                vm.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
                vm.rng_device.rate.bytes: xs:int
                vm.rng_device.rate.period: xs:int
                vm.rng_device.source: xs:string
                vm.cpu.mode: xs:string
                vm.cpu.topology.sockets: xs:int
                vm.placement_policy.affinity: xs:string
                vm.placement_policy.host.id|name: xs:string
                vm.origin: xs:string
                vm.os.kernel: xs:string
                vm.disks.clone: xs:boolean
                vm.disks.disk--COLLECTION: {disk.id: 'xs:string', storage_domains.storage_domain--COLLECTION: {storage_domain.id: 'xs:string'}}
                vm.tunnel_migration: xs:boolean
                vm.migration_downtime: xs:int
                vm.virtio_scsi.enabled: xs:boolean
                vm.payloads.payload--COLLECTION: {payload.type: 'xs:string', payload.volume_id: 'xs:string', payload.files.file--COLLECTION: {file.name: 'xs:string', file.content: 'xs:string'}}
                vm.initialization.configuration.type: 'xs:string'
                vm.initialization.configuration.data: 'xs:string'
                vm.initialization.regenerate_ids: 'xs:boolean'
                vm.cpu.cpu_tune.vcpu_pin--COLLECTION: {vcpu_pin.vcpu: 'xs:int', vcpu_pin.cpu_set: 'xs:string'}
                vm.serial_number.policy: xs:string
                vm.serial_number.value: xs:string
                vm.bios.boot_menu.enabled: xs:boolean
                vm.numa_tune_mode: xs:string
                vm.start_paused: xs:boolean
                vm.cpu_profile.id: xs:string
                vm.migration.auto_converge: xs:string
                vm.migration.compressed: xs:string
                vm.small_icon.id: xs:string
                vm.large_icon.id: xs:string
                vm.large_icon.media_type: xs:string
                vm.large_icon.data: xs:string
        description: add a virtual machine to the system from a configuration - requires the configuration type and the configuration data
- name: /vms/{vm:id}/shutdown|rel=shutdown
  description: shutdown a virtual machine in the system identified by the given id
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: shutdown a virtual machine in the system identified by the given id
- name: /vms/{vm:id}/stop|rel=stop
  description: stop a virtual machine in the system identified by the given id
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: stop a virtual machine in the system identified by the given id
- name: /vms/{vm:id}/reboot|rel=reboot
  description: reboot a virtual machine in the system identified by the given id
  request:
    body:
      parameterType: Action
      signatures: []
- name: /vms/{vm:id}/start|rel=start
  description: start a virtual machine in the system identified by the given id
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.vm.os.initRd: xs:string
          action.vm.domain.name: xs:string
          action.vm.placement_policy.host.id|name: xs:string
          action.vm.placement_policy.affinity: xs:string
          action.vm.os.kernel: xs:string
          action.vm.display.type: xs:string
          action.vm.stateless: xs:boolean
          action.vm.os.cmdline: xs:string
          action.vm.domain.user.username: xs:string
          action.pause: xs:boolean
          action.vm.os.boot--COLLECTION:
            boot.dev: xs:string
          action.vm.domain.user.password: xs:string
          action.vm.initialization.cloud_init.host.address: xs:string
          action.vm.custom_emulated_machine: xs:string
          action.vm.custom_cpu_model: xs:string
          action.vm.initialization.cloud_init.network_configuration.nics.nic--COLLECTION:
            nic.name: xs:string
            nic.boot_protocol: xs:string
            nic.network.address.ip: xs:string
            nic.network.address.netmask: xs:string
            nic.network.address.gateway: xs:string
            nic.onboot: xs:boolean
          action.vm.initialization.cloud_init.network_configuration.dns.servers.host--COLLECTION:
            host.address: xs:string
          action.vm.initialization.cloud_init.network_configuration.dns.search_domains.host--COLLECTION:
            host.address: xs:string
          action.vm.initialization.cloud_init.authorized_keys.authorized_key--COLLECTION:
            authorized_key.key: xs:string
          authorized_key.user.name: xs:string
          action.vm.initialization.cloud_init.regenerate_ssh_keys: xs:boolean
          action.vm.initialization.cloud_init.timezone: xs:string
          action.vm.initialization.cloud_init.users.user--COLLECTION:
            user.password: xs:string
            user.name: xs:string
          action.vm.initialization.cloud_init.payload_files.payload_file--COLLECTION:
            payload_file.name: xs:string
            payload_file.content: xs:string
            payload_file.type: xs:string
          action.use_sysprep: xs:boolean
          action.use_cloud_init: xs:boolean
        description: start a virtual machine in the system identified by the given id with the options specified in the request body
    headers:
      Filter: {value: true|false, required: false}
- name: /vms/{vm:id}/suspend|rel=suspend
  description: suspend a virtual machine in the system identified by the given id
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: suspend a virtual machine in the system identified by the given id
- name: /vms/{vm:id}/export|rel=export
  description: export a virtual machine in the system identified by the given id to the export domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.exclusive: xs:boolean
          action.discard_snapshots: xs:boolean
          action.storage_domain.id|name: xs:string
        description: export a virtual machine in the system identified by the given id to the export domain with the options specified in the request body
- name: /vms/{vm:id}/preview_snapshot|rel=preview_snapshot
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.snapshot.id: xs:string
        optionalArguments:
          action.restore_memory: xs:boolean
          action.disks.disk--COLLECTION:
            disk.id: xs:string
            disk.image_id: xs:string
            disk.snapshot.id: xs:string
- name: /vms/{vm:id}/commit_snapshot|rel=commit_snapshot
  request:
    body:
      parameterType: Action
      signatures: []
- name: /vms/{vm:id}/undo_snapshot|rel=undo_snapshot
  request:
    body:
      parameterType: Action
      signatures: []
- name: /vms/{vm:id}/clone|rel=clone
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.vm.name: 'xs:string'}
- name: /vms/{vm:id}/reordermacaddresses|rel=reordermacaddresses
  description: re-assigns vNic MAC addressses in the ascending order (for NICs that have no PCI address assigned to them)
- name: /vms/{vm:id}/detach|rel=detach
  description: detach a virtual machine in the system identified by the given id from the storage domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: detach a virtual machine in the system identified by the given id from the storage domain
- name: /vms/{vm:id}/migrate|rel=migrate
  description: migrate a virtual machine in the system identified by the given id to another host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.host.id|name: xs:string
          action.force: xs:boolean
          action.cluster.id: xs:string
        description: migrate a virtual machine in the system identified by the given id to another host with options specified in the request body
- name: /vms/{vm:id}/move|rel=move #deprecated, replaced by '/vms/{vm:id}/disks/{disk:id}/move|rel=move'
  description: This action is deprecated. Move a virtual machine's disk
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.storage_domain.id|name: 'xs:string'}
        description: This action is deprecated. Move a virtual machine's disk to the target storage domain
- name: /vms/{vm:id}/ticket|rel=ticket
  description: Create a ticket for connecting to the VM using the display protocol.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.ticket.value: xs:string
        description: Create a ticket for connecting to the VM using the display protocol.
- name: /vms/{vm:id}/graphicsconsoles|rel=get
  description: Get graphics consoles of a VM.
  request:
    urlparams:
      current:
        context: matrix
        type: xs:boolean
        value: true|false
        required: false
- name: /vms/{vm:id}/graphicsconsoles|rel=add
  description: add a graphics console to a virtual machine
  request:
    body:
      parameterType: GraphicsConsole
      signatures:
      - mandatoryArguments:
          graphics_console.protocol: xs:string
- name: /vms/{vm:id}/graphicsconsoles/{graphicsconsole:id}|rel=get
  description: Get active graphics console of a VM.
  request:
    urlparams:
      current:
        context: matrix
        type: xs:boolean
        value: true|false
        required: false
    headers:
      Content-Type:
        value: application/xml|json|x-virt-viewer
        required: false
- name: /vms/{vm:id}/graphicsconsoles/{graphicsconsole:id}|rel=delete
  description: delete the graphics console for a virtual machine identified by the given id
- name: /vms/{vm:id}/graphicsconsoles/{graphicsconsole:id}/proxyticket|rel=proxyticket
  description: Get websocket proxy ticket for current console.
- name: /vms/{vm:id}/logon|rel=logon
  description: Perform automatic logon on the VM using the guest agent.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: Perform automatic logon on the VM using the guest agent.
- name: /vms/{vm:id}/freezefilesystems|rel=freezefilesystems
  description: Freeze the filesystems of the VM using qemu guest agent.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: Freeze the filesystems of the VM using qemu guest agent.
- name: /vms/{vm:id}/thawfilesystems|rel=thawfilesystems
  description: Thaw the filesystems of the VM using qemu guest agent.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: Thaw the filesystems of the VM using qemu guest agent.
- name: /vms/{vm:id}/cdroms|rel=get
  description: get all the cdroms for a virtual machine
  request:
    urlparams:
      current: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /vms/{vm:id}/cdroms/{cdrom:id}|rel=get
  description: get the cdrom for a virtual machine identified by the given id
  request:
    urlparams:
      current: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /vms/{vm:id}/cdroms/{cdrom:id}|rel=delete
  description: delete the cdrom for a virtual machine identified by the given id
- name: /vms/{vm:id}/cdroms/{cdrom:id}|rel=update
  description: update the cdrom for a virtual machine identified by the given id
  request:
    body:
      parameterType: CdRom
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {cdrom.file.id: 'xs:string'}
        description: update the cdrom for a virtual machine identified by the given id with a new file
    urlparams:
      current: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /vms/{vm:id}/cdroms|rel=add
  description: add a cdrom to a virtual machine identified by the given id
  request:
    body:
      parameterType: CdRom
      signatures:
      - mandatoryArguments: {cdrom.file.id: 'xs:string'}
        description: add a cdrom to a virtual machine identified by the given id and attach a file to the cdrom
- name: /vms/{vm:id}/watchdogs|rel=get
  description: get all the watchdogs for the virtual machine identified by the given id
- name: /vms/{vm:id}/watchdogs/{watchdog:id}|rel=get
  description: get the watchdog identified by the id for a given virtual machine
  request:
- name: /vms/{vm:id}/watchdogs/{watchdog:id}|rel=delete
  description: delete the watchdog for the virtual machine identified by the given id
- name: /vms/{vm:id}/watchdogs/{watchdog:id}|rel=update
  description: update the watchdog for the virtual machine identified by the given id
  request:
    body:
      parameterType: WatchDog
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {watchdog.action: 'xs:string', watchdog.model: 'xs:string'}
        description: update the watchdog for the virtual machine identified by the given id with a new action and model as specified in the request data
    urlparams:
- name: /vms/{vm:id}/watchdogs|rel=add
  description: add a watchdog to the virtual machine identified by the given id
  request:
    body:
      parameterType: WatchDog
      signatures:
      - mandatoryArguments: {watchdog.action: 'xs:string', watchdog.model: 'xs:string'}
        description: add a watchdog to the virtual machine identified by the given id
- name: /vms/{vm:id}/disks|rel=get
  description: get all disks for a given virtual machine
- name: /vms/{vm:id}/disks/{disk:id}|rel=get
  description: get the details of a disk for a given virtual machine
  request:
- name: /vms/{vm:id}/disks/{disk:id}|rel=delete
  description: delete or detach a disk for a given virtual machine
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.detach: 'xs:boolean'}
        description: delete or detach a disk for a given virtual machine based on detach flag provided
- name: /vms/{vm:id}/disks/{disk:id}|rel=update
  description: update the parameters of the disk attached to the virtual machine
  request:
    body:
      parameterType: Disk
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          size: xs:int #deprecated, replaced by 'provisioned_size'
          provisioned_size: xs:int
          disk.name: xs:string
          disk.alias: xs:string
          disk.interface: xs:string
          disk.format: xs:string
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.disk_profile.id: xs:string
          disk.sgio: xs:string
          disk.uses_scsi_reservation: xs:boolean
          disk.read_only: xs:boolean
          description: update the size, boot flag and other parameters of the disk attached to the virtual machine
- name: /vms/{vm:id}/disks|rel=add
  description: add a new or existing disk to the virtual machine
  request:
    body:
      parameterType: Disk
      signatures:
      - mandatoryArguments: {provisioned_size: 'xs:int', disk.interface: 'xs:string', disk.format: 'xs:string'}
        optionalArguments:
          disk.alias: xs:string
          disk.name: xs:string
          disk.size: xs:int #deprecated, replaced by 'provisioned_size'
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.disk_profile.id: xs:string
          disk.storage_domains.storage_domain--COLLECTION: {storage_domain.id|name: 'xs:string'}
          disk.openstack_volume_type.name: xs:string
        description: add a new disk to the virtual machine allocating space from the storage domain
        #the signature below is for direct-LUN disk, which doesn't require size, but requires the lun id, the lun type, and the lun connection-details.
      - mandatoryArguments: {disk.interface: 'xs:string', disk.lun_storage.type: 'xs:string',
          disk.lun_storage.logical_unit--COLLECTION: {logical_unit.id: 'xs:string', logical_unit.address: 'xs:string', logical_unit.port: 'xs:int', logical_unit.target: 'xs:string'}}
        optionalArguments:
          disk.alias: xs:string
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.sgio: xs:string
          disk.uses_scsi_reservation: xs:boolean
          disk.lun_storage.host: xs:string
        description: add a new direct lun disk to the virtual machine, this operation does not require size but needs lun connection details
      - mandatoryArguments: {disk.id: 'xs:string'}
        optionalArguments:
          disk.active: xs:boolean
          disk.read_only: xs:boolean
        description: attach a disk to the virtual machine
      - mandatoryArguments: {disk.id: 'xs:string', disk.snapshot.id: 'xs:string'}
        optionalArguments: {disk.active: 'xs:boolean'}
        description: attach a disk snapshot to the virtual machine
- name: /vms/{vm:id}/disks/{disk:id}/activate|rel=activate
  description: activate a disk attached to a virtual machine
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: activate a disk attached to a virtual machine
- name: /vms/{vm:id}/disks/{disk:id}/deactivate|rel=deactivate
  description: deactivate a disk attached to a virtual machine
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: deactivate a disk attached to a virtual machine
- name: /vms/{vm:id}/disks/{disk:id}/move|rel=move
  description: move a disk attached to a virtual machine to a different storage domain. If the virtual machine is running this will trigger a live storage migration
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
        description: move a disk attached to a virtual machine to a different storage domain. If the virtual machine is running this will trigger a live storage migration
    headers:
      Filter: {value: true|false, required: false}
- name: /vms/{vm:id}/disks/{disk:id}/export|rel=export
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
    headers:
      Filter: {value: true|false, required: false}
- name: /vms/{vm:id}/nics|rel=get
  description: get all the network interfaces for a given virtual machine
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}/nics/{nic:id}|rel=get
  description: get the details of a network interface for a given virtual machine
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}/nics/{nic:id}|rel=delete
  description: remove the network interface from the given virtual machine
- name: /vms/{vm:id}/nics/{nic:id}|rel=update
  description: update the network interface for the given virtual machine
  request:
    body:
      parameterType: NIC
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {nic.vnic_profile.id: 'xs:string', nic.linked: 'xs:boolean', nic.name: 'xs:string', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.plugged: 'xs:boolean'}
        description: update the network interface for the given virtual machine
      - mandatoryArguments: {}
        optionalArguments: {nic.network.id|name: 'xs:string', nic.linked: 'xs:boolean', nic.name: 'xs:string', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.port_mirroring.networks.network--COLLECTION: {network.id: 'xs:string'}, nic.plugged: 'xs:boolean'}
        deprecated: true
        description: update the network interface for the given virtual machine with port mirroring options
- name: /vms/{vm:id}/nics/{nic:id}/activate|rel=activate #deprecated, replaced by 'add/edit'
  description: Deprecated, replaced by add/edit
  request:
    body:
      parameterType: Action
      signatures: []
- name: /vms/{vm:id}/nics/{nic:id}/deactivate|rel=deactivate #deprecated, replaced by 'add/edit'
  description: Deprecated, replaced by add/edit
  request:
    body:
      parameterType: Action
      signatures: []
- name: /vms/{vm:id}/nics|rel=add
  description: add a new network interface to the given virtual machine
  request:
    body:
      parameterType: NIC
      signatures:
      - mandatoryArguments: {nic.name: 'xs:string'}
        optionalArguments: {nic.vnic_profile.id: 'xs:string', nic.linked: 'xs:boolean', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.plugged: 'xs:boolean'}
        description: add a new network interface to the given virtual machine with vnic profile id
      - mandatoryArguments: {nic.name: 'xs:string'}
        optionalArguments: {nic.network.id|name: 'xs:string', nic.linked: 'xs:boolean', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.port_mirroring.networks.network--COLLECTION: {network.id: 'xs:string'}, nic.plugged: 'xs:boolean'}
        deprecated: true
        description: add a new network interface to the given virtual machine with port mirroring options
- name: /vms/{vm:id}/permissions|rel=get
  description: get all the permissions for a given virtual machine
- name: /vms/{vm:id}/permissions/{permission:id}|rel=get
  description: get details of a permission for a given virtual machine
- name: /vms/{vm:id}/permissions/{permission:id}|rel=delete
  description: delete a permission for a given virtual machine
- name: /vms/{vm:id}/permissions|rel=add
  description: add a new permission for a given virtual machine
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission for a given virtual machine
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission for a given virtual machine
- name: /vms/{vm:id}/statistics|rel=get
  description: get the memory and cpu statistics for a given virtual machine
- name: /vms/{vm:id}/statistics/{statistic:id}|rel=get
  description: get the detail statistics for a given virtual machine
- name: /vms/{vm:id}/snapshots|rel=get
  description: get all snapshots for a given virtual machine
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}/snapshots/{snapshot:id}|rel=get
  description: get the details of a snapshot for a given virtual machine
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /vms/{vm:id}/snapshots/{snapshot:id}|rel=delete
  description: delete the snapshot for a given virtual machine
- name: /vms/{vm:id}/snapshots|rel=add
  description: create a new snapshot for a given virtual machine
  request:
    body:
      parameterType: Snapshot
      signatures:
      - mandatoryArguments: {snapshot.description: 'xs:string'}
        optionalArguments:
          snapshot.persist_memorystate: xs:boolean
          snapshot.disks.disk--COLLECTION: {disk.id: 'xs:string'}
        description: create a new snapshot for a given virtual machine
- name: /vms/{vm:id}/snapshots/{snapshot:id}/restore|rel=restore
  description: restore the virtual machine from a given snapshot
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.restore_memory: xs:boolean
          action.disks.disk--COLLECTION:
            disk.id: xs:string
            disk.image_id: xs:string
        description: restore the virtual machine from a given snapshot
- name: /vms/{vm:id}/snapshots/{snapshot:id}/cdroms|rel=get
  description: get the list of cdroms attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/snapshots/{snapshot:id}/cdroms/{cdrom:id}|rel=get
  description: get the details of a cdrom attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/snapshots/{snapshot:id}/disks|rel=get
  description: get the list of disks attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/snapshots/{snapshot:id}/disks/{disk:id}|rel=get
  description: get the details of a disk attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/snapshots/{snapshot:id}/disks/{disk:id}|rel=delete
  description: delete a disk from a VM snapshot
- name: /vms/{vm:id}/snapshots/{snapshot:id}/nics|rel=get
  description: get the list of network interfaces attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/snapshots/{snapshot:id}/nics/{nic:id}|rel=get
  description: get the details of a network interface attached to the virtual machine at the time the snapshot was created
- name: /vms/{vm:id}/tags|rel=get
  description: get the list of tags added to the virtual machine
- name: /vms/{vm:id}/tags/{tag:id}|rel=get
  description: get the details of the tag added to the virtual machine
- name: /vms/{vm:id}/tags/{tag:id}|rel=delete
  description: delete a tag added to the virtual machine
- name: /vms/{vm:id}/tags|rel=add
  description: add a new tag to the virtual machine
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.id|name: 'xs:string'}
        description: add a new tag to the virtual machine
- name: /vms/{vm:id}/sessions|rel=get
  description: get the open user-sessions of this VM
- name: /vms/{vm:id}/sessions/{session:id}|rel=get
  description: get the deails of a VM user session.
- name: /vms/{vm:id}/maintenance|rel=maintenance
  description: enable or disable maintenance mode for this virtual machine
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.maintenance_enabled: 'xs:boolean'}
        description: enable or disable maintenance mode for this virtual machine
- name: /vms/{vm:id}/katelloerrata|rel=get
  description: get the list of errata available for the vm
- name: /vms/{vm:id}/katelloerrata/{katelloerratum:id}|rel=get
  description: get the details of the specific erratum available for the vm
- name: /vms/{vm:id}/hostdevices|rel=get
  description: get all configured host devices for this virtual machine
- name: /vms/{vm:id}/hostdevices|rel=add
  description: add a host device to this virtual machine
  request:
    body:
      parameterType: HostDevice
      signatures:
      - mandatoryArguments:
          host_device.id|name: xs.string
- name: /vms/{vm:id}/hostdevices/{hostdevice:id}|rel=get
  description: get details of a host device for this virtual machine
- name: /vms/{vm:id}/hostdevices/{hostdevice:id}|rel=delete
  description: detach a host device from this virtual machine
- name: /disks|rel=get
  description: get a list of disks in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /disks/{disk:id}|rel=get
  description: get the details of a disk in the system
- name: /disks/{disk:id}|rel=delete
  description: delete the specified disk in the system
- name: /disks/{disk:id}/export|rel=export
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.storage_domain.id|name: xs:string
    headers:
      Filter: {value: true|false, required: false}
- name: /disks/{disk:id}/move|rel=move
  description: move a disk to a different storage domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.storage_domain.id|name: xs:string
        description: move a disk to a different storage domain
    headers:
      Filter: {value: true|false, required: false}
- name: /disks/{disk:id}/copy|rel=copy
  description: copy a disk to a different storage domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.storage_domain.id|name: xs:string
        optionalArguments:
          action.disk.name|alias: xs:string
        description: copy a disk to a different storage domain
    headers:
      Filter: {value: true|false, required: false}
- name: /disks|rel=add
  description: add a new disk to the system
  request:
    body:
      parameterType: Disk
      signatures:
      - mandatoryArguments: {provisioned_size: 'xs:int', disk.interface: 'xs:string', disk.format: 'xs:string'}
        optionalArguments:
          disk.alias: xs:string
          disk.name: xs:string
          disk.size: xs:int #deprecated, replaced by 'provisioned_size'
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.disk_profile.id: xs:string
          disk.storage_domains.storage_domain--COLLECTION: {storage_domain.id|name: 'xs:string'}
          disk.openstack_volume_type.name: xs:string
        description: add a new disk to the system with specified size, space will be allocated from the storage domain for the disk
        #the signature below is for direct-LUN disk, which doesn't require size, but requires the lun id, the lun type, and the lun connection-details.
      - mandatoryArguments: {disk.interface: 'xs:string', disk.lun_storage.type: 'xs:string',
          disk.lun_storage.logical_unit--COLLECTION: {logical_unit.id: 'xs:string', logical_unit.address: 'xs:string', logical_unit.port: 'xs:int', logical_unit.target: 'xs:string'}}
        optionalArguments:
          disk.alias: xs:string
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.sgio: xs:string
          disk.lun_storage.host: xs:string
        description: add a new lun disk to the system, this operation does not require size but requires lun connection details
- name: /disks/{disk:id}/statistics|rel=get
  description: get the disk statistics for the specified disk in the system
- name: /disks/{disk:id}/statistics/{statistic:id}|rel=get
  description: get the disk statistics for the specified disk in the system
- name: /disks/{disk:id}/permissions|rel=get
  description: get the list of permissions for the disk in the system. Disk inherits permissions from the VM it is attached to and from the storage domain it resides on (if there is one)
- name: /disks/{disk:id}/permissions/{permission:id}|rel=get
  description: get the details of the permission for the specified disk in the system
- name: /capabilities|rel=get
  description: get the capabilities of the system listing the features that are supported for all versions of cluster/data center
- name: /capabilities/{version:id}|rel=get
  description: get the capabilities of the system for the specified version, lists the features that are supported for the provided version of the cluster/data center
- name: /datacenters/{datacenter:id}/networks|rel=get
  description: get networks for the datacenter in the system
- name: /datacenters/{datacenter:id}/networks/{network:id}|rel=get
  description: get the specified network in the datacenter
- name: /datacenters/{datacenter:id}/networks/{network:id}|rel=delete
  description: delete the specified network in the datacenter
- name: /datacenters/{datacenter:id}/networks/{network:id}|rel=update
  description: update the specified network in the datacenter
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {network.display: 'xs:boolean', network.usages.usage--COLLECTION: {usage: 'xs:string'}}
- name: /datacenters/{datacenter:id}/networks|rel=add
  description: add a new network to the datacenter
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {network.id|name: 'xs:string'}
        optionalArguments: {
            network.description: 'xs:string',
            network.comment: 'xs:string',
            network.vlan.id: 'xs:string',
            network.ip.address: 'xs:string',
            network.ip.gateway: 'xs:string',
            network.ip.netmask: 'xs:string',
            network.stp: 'xs:boolean',
            network.mtu: 'xs:int',
            network.profile_required: 'xs:boolean',
            network.usages.usage--COLLECTION: {usage: 'xs:string'}
        }
        description: add a new network to the datacenter
- name: /datacenters/{datacenter:id}/networks/{network:id}/labels|rel=get
  description: get the labels of a network
- name: /datacenters/{datacenter:id}/networks/{network:id}/labels|rel=add
  description: add a new label to the network
  request:
    body:
      parameterType: Label
      signatures:
      - mandatoryArguments: {label.id: 'xs:string'}
        description: add a new label to the network
- name: /datacenters/{datacenter:id}/networks/{network:id}/labels/{label:id}|rel=get
  description: get a specific label of a network
- name: /datacenters/{datacenter:id}/networks/{network:id}/labels/{label:id}|rel=delete
  description: delete the specified label of a network
- name: /datacenters/{datacenter:id}/qoss|rel=get
  description: get QoSs for the datacenter in the system
- name: /datacenters/{datacenter:id}/qoss/{qos:id}|rel=get
  description: get the specified QoS in the datacenter
- name: /datacenters/{datacenter:id}/qoss/{qos:id}|rel=delete
  description: delete the specified QoS in the datacenter
- name: /datacenters/{datacenter:id}/qoss/{qos:id}|rel=update
  description: update the specified QoS in the datacenter
  request:
    body:
      parameterType: QoS
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {qos.name: 'xs:string',
                           qos.description: 'xs:string',
                           qos.max_throughput: 'xs:int',
                           qos.max_read_throughput: 'xs:int',
                           qos.max_write_throughput: 'xs:int',
                           qos.max_iops: 'xs:int',
                           qos.max_read_iops: 'xs:int',
                           qos.max_write_iops: 'xs:int',
                           qos.cpu_limit: 'xs:int',
                           qos.inbound_average: 'xs:int',
                           qos.inbound_peak: 'xs:int',
                           qos.inbound_burst: 'xs:int',
                           qos.outbound_average: 'xs:int',
                           qos.outbound_peak: 'xs:int',
                           qos.outbound_burst: 'xs:int',
                           qos.outbound_average_linkshare: 'xs:int',
                           qos.outbound_average_upperlimit: 'xs:int',
                           qos.outbound_average_realtime: 'xs:int'}
- name: /datacenters/{datacenter:id}/qoss|rel=add
  description: add a new QoS to the datacenter
  request:
    body:
      parameterType: QoS
      signatures:
      - mandatoryArguments: {qos.name: 'xs:string', qos.type: 'xs:string'}
        optionalArguments: {qos.description: 'xs:string',
                           qos.max_throughput: 'xs:int',
                           qos.max_read_throughput: 'xs:int',
                           qos.max_write_throughput: 'xs:int',
                           qos.max_iops: 'xs:int',
                           qos.max_read_iops: 'xs:int',
                           qos.max_write_iops: 'xs:int',
                           qos.cpu_limit: 'xs:int',
                           qos.inbound_average: 'xs:int',
                           qos.inbound_peak: 'xs:int',
                           qos.inbound_burst: 'xs:int',
                           qos.outbound_average: 'xs:int',
                           qos.outbound_peak: 'xs:int',
                           qos.outbound_burst: 'xs:int',
                           qos.outbound_average_linkshare: 'xs:int',
                           qos.outbound_average_upperlimit: 'xs:int',
                           qos.outbound_average_realtime: 'xs:int'}
        description: add a new QoS to the datacenter
- name: /storagedomains|rel=get
  description: get storage domains in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}|rel=get
  description: get the details of the specified storage domain in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}|rel=delete
  description: delete the specified storage domain in the system
  request:
    body:
      parameterType: StorageDomain
      signatures:
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string'}
        optionalArguments: {storagedomain.format: 'xs:boolean'}
        description: delete the specified storage domain in the system with options to format the storage domain
- name: /storagedomains/{storagedomain:id}/isattached|rel=isattached
  description: Querying if the Storage Domain is already attached to a Data Center by the is_attached boolean field, which is part of the storage server. IMPORTANT, Executing this API will cause the Host to disconnect from the Storage Domain.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.host.id: xs:string
- name: /storagedomains/{storagedomain:id}/refreshluns|rel=refreshluns
  description: Refresh the size of the provided LUNs
  request:
    body:
      parameterType: Action
      signatures:
      - optionalArguments:
          action.logical_units.logical_unit--COLLECTION:
            logical_unit.id: xs:string
- name: /storagedomains/{storagedomain:id}|rel=update
  description: update the storage domain
  request:
    body:
      parameterType: StorageDomain
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {storagedomain.name: 'xs:string'}
        description: update the storage domain
      - mandatoryArguments: {storagedomain.storage.logical_unit--COLLECTION: {logical_unit.address: 'xs:string',
            logical_unit.port: 'xs:int', logical_unit.target: 'xs:string', logical_unit.username: 'xs:string', logical_unit.password: 'xs:string',
            logical_unit.serial: 'xs:string', logical_unit.vendor_id: 'xs:string', logical_unit.product_id: 'xs:string',
            logical_unit.lun_mapping: 'xs:int', logical_unit.portal: 'xs:string', logical_unit.paths: 'xs:int', logical_unit.id: 'xs:string'}}
        optionalArguments: {storagedomain.host.id--DEPRECATED: 'xs:string', storagedomain.name: 'xs:string', storagedomain.comment: 'xs:string', storagedomain.storage.override_luns: 'xs:boolean',
          storagedomain.wipe_after_delete: 'xs:boolean', storagedomain.warning_low_space_indicator: 'xs:int', storagedomain.critical_space_action_blocker: 'xs:int'}
        description: update the storage domain
- name: /storagedomains|rel=add
  description: add a new storage domain to the system
  request:
    body:
      parameterType: StorageDomain
      signatures:
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string',
          storagedomain.type: 'xs:string', storagedomain.storage.type: 'xs:string',
          storagedomain.storage.address: 'xs:string',
          storagedomain.storage.logical_unit--COLLECTION: {logical_unit.address: 'xs:string',
            logical_unit.port: 'xs:int', logical_unit.target: 'xs:string', logical_unit.username: 'xs:string', logical_unit.password: 'xs:string',
            logical_unit.serial: 'xs:string', logical_unit.vendor_id: 'xs:string', logical_unit.product_id: 'xs:string',
            logical_unit.lun_mapping: 'xs:int', logical_unit.portal: 'xs:string', logical_unit.paths: 'xs:int', logical_unit.id: 'xs:string'}}
        optionalArguments: {storagedomain.name: 'xs:string', storagedomain.comment: 'xs:string', storagedomain.storage.override_luns: 'xs:boolean',
          storagedomain.storage_format: 'xs:string', storagedomain.wipe_after_delete: 'xs:boolean', storagedomain.warning_low_space_indicator: 'xs:int',
          storagedomain.critical_space_action_blocker: 'xs:int'}
        description: add a new storage domain to the system using a direct lun
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string',
          storagedomain.type: 'xs:string', storagedomain.storage.type: 'xs:string', storagedomain.import: 'xs:boolean'}
        optionalArguments: {storagedomain.storage.address: 'xs:string', storagedomain.comment: 'xs:string',
          storagedomain.warning_low_space_indicator: 'xs:int', storagedomain.critical_space_action_blocker: 'xs:int'}
        description: Import an existing block storage domain to the system using the targets already connected to the host
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string',
          storagedomain.type: 'xs:string', storagedomain.storage.type: 'xs:string',
          storagedomain.storage.address: 'xs:string',
          storagedomain.storage.path: 'xs:string'}
        optionalArguments: {storagedomain.name: 'xs:string', storagedomain.comment: 'xs:string', storagedomain.storage_format: 'xs:string',
          storagedomain.wipe_after_delete: 'xs:boolean', storagedomain.warning_low_space_indicator: 'xs:int', storagedomain.critical_space_action_blocker: 'xs:int'}
        description: add a new storage domain to the system using the storage on the given host and path
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string',
          storagedomain.type: 'xs:string', storagedomain.storage.type: 'xs:string',
          storagedomain.storage.path: 'xs:string'}
        optionalArguments: {storagedomain.name: 'xs:string', storagedomain.comment: 'xs:string', storagedomain.storage_format: 'xs:string', storagedomain.wipe_after_delete: 'xs:boolean',
          storagedomain.warning_low_space_indicator: 'xs:int', storagedomain.critical_space_action_blocker: 'xs:int'}
        description: add a new storage domain to the system using the storage on the localhost at the given path
      - mandatoryArguments: {storagedomain.host.id|name: 'xs:string',
          storagedomain.type: 'xs:string', storagedomain.storage.type: 'xs:string',
          storagedomain.storage.path: 'xs:string', storagedomain.storage.vfs_type: 'xs:string'}
        optionalArguments: {storagedomain.name: 'xs:string', storagedomain.comment: 'xs:string', storagedomain.storage.address: 'xs:string',
          storagedomain.storage.mount_options: 'xs:string', storagedomain.storage_format: 'xs:string', storagedomain.wipe_after_delete: 'xs:boolean',
          storagedomain.warning_low_space_indicator: 'xs:int', storagedomain.critical_space_action_blocker: 'xs:int'}
        description: add a new storage domain to the system using the gluster or posixfs storage
- name: /storagedomains/{storagedomain:id}/files|rel=get
  description: get the files stored in the iso storage domain
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/files/{file:id}|rel=get
  description: get the details of the specified file stored in the iso storage domain
- name: /storagedomains/{storagedomain:id}/images|rel=get
- name: /storagedomains/{storagedomain:id}/images/{image:id}|rel=get
- name: /storagedomains/{storagedomain:id}/images/{image:id}/import|rel=import
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
        optionalArguments:
          action.import_as_template: xs:boolean
          action.cluster.id|name: xs:string
          action.disk.alias|name: xs:string
- name: /storagedomains/{storagedomain:id}/permissions|rel=get
  description: get the list of permissions for the storage domain
- name: /storagedomains/{storagedomain:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission for the storage domain
- name: /storagedomains/{storagedomain:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on the storage domain
- name: /storagedomains/{storagedomain:id}/permissions|rel=add
  description: add a new user or group level permission on the storage domain
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the storage domain
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the storage domain
- name: /storagedomains/{storagedomain:id}/templates/{template:id}|rel=delete
  description: delete the specified template from the export or data domain
- name: /storagedomains/{storagedomain:id}/templates|rel=get
  description: get the list of templates in the export or data domain
  request:
    urlparams:
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/templates/{template:id}|rel=get
  description: get the details of the specified template in the export or data domain
- name: /storagedomains/{storagedomain:id}/templates/{template:id}/register|rel=register
  description: Register the Template means importing the Template from the data domain, by inserting the configuration of the Template and disks into the DB without the copy process
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.cluster.id|name: 'xs:string'}
        optionalArguments: {action.clone: 'xs:boolen', action.exclusive: 'xs:boolen', action.template.name: 'xs:string'}
        description: Register the Template means importing the Template from the data domain, by inserting the configuration of the Template and disks into the DB without the copy process
- name: /storagedomains/{storagedomain:id}/templates/{template:id}/import|rel=import
  description: import the template from the export or data domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.cluster.id|name: 'xs:string'}
        optionalArguments:
          action.storage_domain.id|name: xs:string
          action.clone: xs:boolen
          action.exclusive: xs:boolen
          action.template.name: xs:string
          action.vm.disks.disk--COLLECTION:
            disk.id: xs:string
        description: import the template from the export or data domain identified by storagedomain-identifier into the destination storage domain identified by storage_domain.id|name
- name: /storagedomains/{storagedomain:id}/templates/{template:id}/disks|rel=get
  description: get the list of disks attached to the template in the export or data domain
- name: /storagedomains/{storagedomain:id}/templates/{template:id}/disks/{disk:id}|rel=get
  description: get the details of the specified disk attached to the template in the export or data domain
- name: /storagedomains/{storagedomain:id}/vms|rel=get
  description: get the list of virtual machines in the storage domain
  request:
    urlparams:
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}|rel=delete
  description: delete the specified virtual machine from the storage domain
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}|rel=get
  description: get the details of the specified virtual machine in the storage domain
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}/register|rel=register
  description: Register the VM means importing the VM from the data domain, by inserting the configuration of the VM and disks into the DB without the copy process
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.cluster.id|name: 'xs:string'}
        optionalArguments: {action.clone: 'xs:boolen', action.vm.name: 'xs:string'}
        description: Register the VM means importing the VM from the data domain, by inserting the configuration of the VM and disks into the DB without the copy process
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}/import|rel=import
  description: import the specified virtual machine in the storage domain into the system
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.cluster.id|name: 'xs:string'}
        optionalArguments:
          action.storage_domain.id|name: xs:string
          action.vm.snapshots.collapse_snapshots: xs:boolean
          action.clone: xs:boolen
          action.exclusive: xs:boolen
          action.vm.name: xs:string
          action.vm.disks.disk--COLLECTION:
            disk.id: xs:string
        description: import the specified virtual machine from the source storagedomain identified by storagedomain-identifier into the destination storage domain identified by storage_domain.id|name
- name: /storagedomains/{storagedomain:id}/disksnapshots|rel=get
  description: get the list of disk snapshots in the storage domain
- name: /storagedomains/{storagedomain:id}/disksnapshots/{disksnapshot:id}|rel=delete
  description: delete the specified disk snapshot from the storage domain
- name: /storagedomains/{storagedomain:id}/disksnapshots/{disksnapshot:id}|rel=get
  description: get the details of the specified disk snapshot in the storage domain
- name: /clusters|rel=get
  description: get the list of clusters in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}/disks|rel=get
  description: get the list of disks attached to the virtual machine in the storage domain
- name: /storagedomains/{storagedomain:id}/vms/{vm:id}/disks/{disk:id}|rel=get
  description: get the details of the specified disk attached to the virtual machine in the storage domain
- name: /clusters/{cluster:id}|rel=get
  description: get the details of the specified cluster in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/storageconnections|rel=get
  description: get the list of storage connections in the storage domain. allow sediting just the connection details without editing the storage domain itself. multiple storage domains could use a single storage connection in the case of iSCSI.
- name: /storagedomains/{storagedomain:id}/storageconnections/{storageconnection:id}|rel=get
  description: get the details of the specified storage connection in the storage domain. allow sediting just the connection details without editing the storage domain itself. multiple storage domains could use a single storage connection in the case of iSCSI.
- name: /storagedomains/{storagedomain:id}/storageconnections/{storageconnection:id}|rel=delete
- name: /storagedomains/{storagedomain:id}/storageconnections|rel=add
  request:
    body:
      parameterType: StorageConnection
      signatures:
      - mandatoryArguments: {storageconnection.id: 'xs:string'}
        optionalArguments: {}
- name: /clusters/{cluster:id}|rel=delete
  description: get the details of the specified cluster in the system
- name: /clusters/{cluster:id}|rel=update
  description: update the specified cluster in the system
  request:
    body:
      parameterType: Cluster
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          cluster.name: xs:string
          cluster.description: xs:string
          cluster.comment: xs:string
          cluster.data_center.id: xs:string
          cluster.cpu.id: xs:string
          cluster.version.major: xs:int
          cluster.version.minor: xs:int,
          cluster.memory_policy.overcommit.percent: xs:double
          cluster.memory_policy.transparent_hugepages.enabled: xs:boolean
          cluster.scheduling_policy.policy--DEPRECATED: xs:string
          cluster.scheduling_policy.thresholds.low--DEPRECATED: xs:int
          cluster.scheduling_policy.thresholds.high--DEPRECATED: xs:int
          cluster.scheduling_policy.thresholds.duration--DEPRECATED: xs:int
          cluster.scheduling_policy.id: xs:string
          cluster.scheduling_policy.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          cluster.error_handling.on_error: xs:string
          cluster.virt_service: xs:boolean
          cluster.gluster_service: xs:boolean
          cluster.threads_as_cores: xs:boolean
          cluster.tunnel_migration: xs:boolean
          cluster.ballooning_enabled: xs:boolean
          cluster.cpu.architecture: xs:string
          cluster.display.proxy: xs:string
          cluster.ksm.enabled: xs:boolean
          cluster.fencing_policy.enabled: xs:boolean
          cluster.fencing_policy.skip_if_sd_active.enabled: xs:boolean
          cluster.fencing_policy.skip_if_connectivity_broken.enabled: xs:boolean
          cluster.fencing_policy.skip_if_connectivity_broken.threshold: xs:int
          cluster.maintenance_reason_required: xs:boolean
          cluster.management_network.id|name: xs:string
          cluster.ha_reservation: xs:boolean
          cluster.ksm.merge_across_nodes: xs:boolean
        description: update the specified cluster in the system. The capabilities like virt service, cluster service, tarnsparent huge pages etc can be changed.
- name: /clusters|rel=add
  description: add a new cluster to the system
  request:
    body:
      parameterType: Cluster
      signatures:
      - mandatoryArguments: {cluster.data_center.id|name: 'xs:string', cluster.name: 'xs:string', cluster.version.major: 'xs:int', cluster.version.minor: 'xs:int', cluster.cpu.id: 'xs:string'}
        optionalArguments: {cluster.description: 'xs:string', cluster.comment: 'xs:string', cluster.memory_policy.overcommit.percent: 'xs:double', cluster.memory_policy.transparent_hugepages.enabled: 'xs:boolean',
        cluster.scheduling_policy.policy--DEPRECATED: 'xs:string', cluster.scheduling_policy.thresholds.low--DEPRECATED: 'xs:int', cluster.scheduling_policy.thresholds.high--DEPRECATED: 'xs:int',
        cluster.scheduling_policy.thresholds.duration--DEPRECATED: 'xs:int', cluster.scheduling_policy.id: 'xs:string', cluster.scheduling_policy.properties.property--COLLECTION: {property.name: 'xs:string', property.value: 'xs:string'}, cluster.error_handling.on_error: 'xs:string', cluster.virt_service: 'xs:boolean', cluster.gluster_service: 'xs:boolean', cluster.threads_as_cores: 'xs:boolean',
        cluster.tunnel_migration: 'xs:boolean', cluster.trusted_service: 'xs:boolean',  cluster.ha_reservation: 'xs:boolean', cluster.ballooning_enabled: 'xs:boolean', cluster.cpu.architecture: 'xs:string', cluster.display.proxy: 'xs:string',
        cluster.ksm.enabled: 'xs:boolean', cluster.ksm.merge_across_nodes: 'xs:boolean',
        cluster.fencing_policy.enabled: 'xs:boolean', cluster.fencing_policy.skip_if_sd_active.enabled: 'xs:boolean', cluster.fencing_policy.skip_if_connectivity_broken.enabled: 'xs:boolean', cluster.fencing_policy.skip_if_connectivity_broken.threshold: 'xs:int',
        cluster.management_network.id|name: 'xs:string', cluster.maintenance_reason_required: 'xs:boolean'}
        description: add a new cluster to the system
- name: /clusters/{cluster:id}/networks|rel=get
  description: get the list of networks in the cluster
- name: /clusters/{cluster:id}/resetemulatedmachine|rel=resetemulatedmachine
  request:
    body:
      parameterType: Action
      signatures: []
- name: /clusters/{cluster:id}/networks/{network:id}|rel=get
  description: get the details of the specified network in the cluster
- name: /clusters/{cluster:id}/networks/{network:id}|rel=delete
  description: delete the specified network in the cluster
- name: /clusters/{cluster:id}/networks/{network:id}|rel=update
  description: update the specified network in the cluster
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {network.display: 'xs:boolean', network.usages.usage--COLLECTION: {usage: 'xs:string'}}
        description: update the specified network in the cluster with network usage. Display is provided here for backwards compatibility.
- name: /clusters/{cluster:id}/networks|rel=add
  description: add a new network to the cluster
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {network.id|name: 'xs:string'}
        optionalArguments: {network.usages.usage--COLLECTION: {usage: 'xs:string'}}
        description: add a new network to the cluster
- name: /clusters/{cluster:id}/permissions|rel=get
  description: get the list of permissions on the cluster
- name: /clusters/{cluster:id}/permissions/{permission:id}|rel=get
  description: get the details of the permission on the cluster
- name: /clusters/{cluster:id}/permissions/{permission:id}|rel=delete
  description: delete the permission on the cluster
- name: /clusters/{cluster:id}/permissions|rel=add
  description: add a new permission on the cluster
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the cluster
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the cluster
- name: /macpools|rel=get
  description: get a list of mac pools in the system
- name: /macpools/{macpool:id}|rel=get
  description: get the details of the specified mac pool in the system
- name: /macpools|rel=add
  description: add the specified mac pool into the system
  request:
    body:
      parameterType: MacPool
      signatures:
      - mandatoryArguments:
          macpool.name: xs:string
          macpool.ranges.range--COLLECTION: {range.from: 'xs:string', range.to: 'xs:string'}
        optionalArguments:
          macpool.description: xs:string
          macpool.allow_duplicates: xs:boolean
          macpool.default_pool: xs:boolean
        description: add the specified mac pool into the system
- name: /macpools/{macpool:id}|rel=delete
  description: delete the specified mac pool from the system
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: delete the specified data center from the system
- name: /macpools/{macpool:id}|rel=update
  description: update the specified mac pool in the system
  request:
    body:
      parameterType: MacPool
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          macpool.name: xs:string
          macpool.description: xs:string
          macpool.allow_duplicates: xs:boolean
          macpool.default_pool: xs:boolean
          macpool.ranges.range--COLLECTION: {range.from: 'xs:string', range.to: 'xs:string'}
        description: update the specified mac pool in the system
- name: /datacenters/{datacenter:id}|rel=update
  description: update the specified data center in the system
  request:
    body:
      parameterType: DataCenter
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          datacenter.name: xs:string
          datacenter.description: xs:string
          datacenter.comment: xs:string
          datacenter.storage_type--DEPRECATED: xs:string
          datacenter.local: xs:boolean
          datacenter.version.major: xs:int
          datacenter.version.minor: xs:int
          datacenter.description: xs:string
          datacenter.storage_format: xs:string
          datacenter.mac_pool.id: xs:string
        description: update the specified data center in the system
- name: /datacenters|rel=get
  description: get a list of data centers in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}|rel=get
  description: get the details of the specified data center in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}|rel=delete
  description: delete the specified data center in the system
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.force: xs:boolean
        description: delete the specified data center in the system
- name: /datacenters|rel=add
  description: add a new data center to the system
  request:
    body:
      parameterType: DataCenter
      signatures:
      - mandatoryArguments:
          datacenter.local: xs:boolean
          datacenter.name: xs:string
        optionalArguments:
          datacenter.comment: xs:string
          datacenter.description: xs:string
          datacenter.storage_format: xs:string
          datacenter.storage_type--DEPRECATED: xs:string
          datacenter.version.major: xs:int
          datacenter.version.minor: xs:int
          datacenter.mac_pool.id: xs:string
        description: add a new data center to the system
- name: /datacenters/{datacenter:id}/permissions|rel=get
  description: get the list of permissions on the data center
- name: /datacenters/{datacenter:id}/permissions/{permission:id}|rel=get
  description: get details of the specified permission on the data center
- name: /datacenters/{datacenter:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on the data center
- name: /datacenters/{datacenter:id}/permissions|rel=add
  description: add a new permission on the data center
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the data center
      - mandatoryArguments:
         permission.group.id: xs:string
         permission.role.id|name: xs:string
        description: add a new role permission on the data center
- name: /datacenters/{datacenter:id}/storagedomains|rel=get
  description: get the list of storage domains in a data center
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}|rel=get
  description: get details of the specified storage domain in a data center
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}|rel=delete
  description: Detach the specified Storage Domain from the Data Center. If the Storage Domain is local it will also be completely removed.
- name: /datacenters/{datacenter:id}/storagedomains|rel=add
  description: add a new storage domain to the data center
  request:
    body:
      parameterType: StorageDomain
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
        optionalArguments: {}
        description: add a new storage domain to the data center
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/activate|rel=activate
  description: activate the specified storage domain in the data center
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: activate the specified storage domain in the data center
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/deactivate|rel=deactivate
  description: deactivate the specified storage domain in the data center
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: deactivate the specified storage domain in the data center
- name: /datacenters/{datacenter:id}/clusters|rel=get
  description: get the list of clusters in the data center
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}|rel=get
  description: get the details of the specified cluster in the data center
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}|rel=delete
  description: delete specified cluster from the data center
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}|rel=update
  description: update specified cluster in the data center
  request:
    body:
      parameterType: Cluster
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {cluster.name: 'xs:string', cluster.description: 'xs:string', cluster.cpu.id: 'xs:string', cluster.version.major: 'xs:int', cluster.version.minor: 'xs:int',
        cluster.memory_policy.overcommit.percent: 'xs:double', cluster.memory_policy.transparent_hugepages.enabled: 'xs:boolean', cluster.scheduling_policy.policy--DEPRECATED: 'xs:string',
        cluster.scheduling_policy.thresholds.low--DEPRECATED: 'xs:int', cluster.scheduling_policy.thresholds.high--DEPRECATED: 'xs:int', cluster.scheduling_policy.thresholds.duration--DEPRECATED: 'xs:int',
        cluster.scheduling_policy.id: 'xs:string', cluster.scheduling_policy.properties.property--COLLECTION: {property.name: 'xs:string', property.value: 'xs:string'},
        cluster.error_handling.on_error: 'xs:string', cluster.virt_service: 'xs:boolean', cluster.gluster_service: 'xs:boolean', cluster.threads_as_cores: 'xs:boolean', cluster.tunnel_migration: 'xs:boolean', cluster.trusted_service: 'xs:boolean', cluster.ha_reservation: 'xs:boolean', cluster.ballooning_enabled: 'xs:boolean',
        cluster.cpu.architecture: 'xs:string', cluster.display.proxy: 'xs:string', cluster.ksm.enabled: 'xs:boolean'}
        description: update specified cluster in the data center
- name: /datacenters/{datacenter:id}/clusters|rel=add
  description: add a new cluster to the data center
  request:
    body:
      parameterType: Cluster
      signatures:
      - mandatoryArguments: {cluster.name: 'xs:string', cluster.version.major: 'xs:int', cluster.version.minor: 'xs:int', cluster.cpu.id: 'xs:string'}
        optionalArguments: {cluster.description: 'xs:string', cluster.memory_policy.overcommit.percent: 'xs:double', cluster.memory_policy.transparent_hugepages.enabled: 'xs:boolean',
        cluster.scheduling_policy.policy--DEPRECATED: 'xs:string', cluster.scheduling_policy.thresholds.low--DEPRECATED: 'xs:int', cluster.scheduling_policy.thresholds.high--DEPRECATED: 'xs:int',
        cluster.scheduling_policy.thresholds.duration--DEPRECATED: 'xs:int', cluster.scheduling_policy.id: 'xs:string',
        cluster.scheduling_policy.properties.property--COLLECTION: {property.name: 'xs:string', property.value: 'xs:string'}, cluster.error_handling.on_error: 'xs:string',
        cluster.virt_service: 'xs:boolean', cluster.gluster_service: 'xs:boolean', cluster.threads_as_cores: 'xs:boolean',
        cluster.tunnel_migration: 'xs:boolean', cluster.ballooning_enabled: 'xs:boolean', cluster.cpu.architecture: 'xs:string', cluster.display.proxy: 'xs:string', cluster.ksm.enabled: 'xs:boolean',
        cluster.management_network.id|name: 'xs:string'}
        description: add a new cluster to the data center
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/networks|rel=get
  description: get the list of networks for a cluster in a data center
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/networks/{network:id}|rel=get
  description: get the details of the specified network in a cluster in the specified data center
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/networks/{network:id}|rel=delete
  description: delete the specified network in a cluster in the specified data center
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/networks/{network:id}|rel=update
  description: update the specified network in a cluster in the specified data center
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {network.display: 'xs:boolean', network.usages.usage--COLLECTION: {usage: 'xs:string'}}
        description: update the specified network in a cluster in the specified data center. Display is provided here for backwards compatibility.
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/networks|rel=add
  description: add a new network to a cluster in the specified data center.
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {network.id|name: 'xs:string'}
        optionalArguments: {network.usages.usage--COLLECTION: {usage: 'xs:string'}}
        description: add a new network to a cluster in the specified data center.
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/permissions|rel=get
  description: get the list of permissions on the cluster in the specified data center.
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission on the cluster in the specified data center.
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on the cluster in the specified data center.
- name: /datacenters/{datacenter:id}/clusters/{cluster:id}/permissions|rel=add
  description: add a new permission on the cluster in the specified data center.
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the cluster in the specified data center.
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the cluster in the specified data center.
- name: /domains|rel=get
  description: get a list of domains in the system
- name: /domains/{domain:id}|rel=get
  description: get the details of the specified domain in the system
- name: /domains/{domain:id}/groups|rel=get
  description: get the list of groups in the specified domain
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /domains/{domain:id}/groups/{group:id}|rel=get
  description: get the details of the specified group in the domain
- name: /domains/{domain:id}/users|rel=get
  description: get the list of users in the domain
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /domains/{domain:id}/users/{user:id}|rel=get
  description: get the details of the specified user in the domain
- name: /events|rel=get
  description: get the list of events in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
      from: {context: matrix, type: 'xs:string', value: event_id, required: false}
- name: /events/undelete|rel=undelete
  description: undoes the delete operation performed on the events
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: undoes the delete operation performed on the events
- name: /events/{event:id}|rel=get
  description: get the details of the specified event in the system
- name: /groups|rel=get
  description: get the list of groups in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /events/{event:id}|rel=delete
  description: delete the specified event from the system
- name: /events|rel=add
  description: add a new event to the system
  request:
    body:
      parameterType: Event
      signatures:
      - mandatoryArguments: {event.description: 'xs:string', event.severity: 'xs:string', event.origin: 'xs:string', event.custom_id: 'xs:int'}
        optionalArguments:  {event.flood_rate: 'xs:int', event.host.id: 'xs:string',event.host.external_status.state: 'xs:string',event.user.id: 'xs:string',
                           event.vm.id: 'xs:string',event.storage_domain.id: 'xs:string',event.storage_domain.external_status.state: 'xs:string',
                           event.template.id: 'xs:string',event.cluster.id: 'xs:string',event.data_center.id: 'xs:string'}
        description: add a new event to the system
- name: /groups/{group:id}|rel=get
  description: get the details of the specified group in the system
- name: /groups/{group:id}|rel=delete
  description: delete the specified group in the system
- name: /groups|rel=add
  description: add a new group to the system
  request:
    body:
      parameterType: Group
      signatures:
      - mandatoryArguments: {group.name: 'xs:string'}
        optionalArguments: {group.namespace: 'xs:string', group.principal: 'xs:string'}
        description: add a new group to the system
- name: /groups/{group:id}/permissions|rel=get
  description: get list of permissions for the group in the system
- name: /groups/{group:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission for the group in the system
- name: /groups/{group:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission from the group in the system
- name: /groups/{group:id}/permissions|rel=add
  description: add a new permission to the group in the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.data_center.id: xs:string
        description: add a new permission on the data center to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.cluster.id: xs:string
        description: add a new permission on the cluster to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.host.id: xs:string
        description: add a new permission on the host to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.storage_domain.id: xs:string
        description: add a new permission on the storage domain to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.vm.id: xs:string
        description: add a new permission on the vm to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.vmpool.id: xs:string
        description: add a new permission on the vm pool to the group in the system
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.template.id: xs:string
        description: add a new permission on the template to the group in the system
- name: /groups/{group:id}/roles|rel=get
  description: get the list of roles assigned to the specified group
- name: /groups/{group:id}/roles/{role:id}|rel=get
  description: get the details of the specified role assigned to a group
  request:
- name: /groups/{group:id}/roles/{role:id}/permits|rel=get
  description: get the permits for the specified role in a group
- name: /groups/{group:id}/roles/{role:id}/permits/{permit:id}|rel=get
  description: get details of the specified permit for a role in a group
- name: /groups/{group:id}/roles/{role:id}/permits/{permit:id}|rel=delete
  description: delete the specified permit for a role in a group
- name: /groups/{group:id}/roles/{role:id}/permits|rel=add
  description: add a new permit for a role in a group
  request:
    body:
      parameterType: Permit
      signatures:
      - mandatoryArguments: {permit.id|name: 'xs:string'}
        optionalArguments: {}
- name: /groups/{group:id}/tags|rel=get
  description: get the list of tags attached to a given group
- name: /groups/{group:id}/tags/{tag:id}|rel=get
  description: get details of the specified tag attached to a given group
- name: /groups/{group:id}/tags/{tag:id}|rel=delete
  description: delete the specified tag attached to a given group
- name: /groups/{group:id}/tags|rel=add
  description: add a new tag to a given group
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.id|name: 'xs:string'}
        optionalArguments: {}
- name: /hosts|rel=get
  description: get the list of hosts in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /hosts/{host:id}|rel=get
  description: get the details of the specified host in the system
  request:
    urlparams:
      force: # This is deprecated, use the "refresh" action instead
        context: matrix
        type: 'xs:boolean'
        value: true|false
        required: false
        deprecated: true
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /hosts/{host:id}|rel=delete
  description: delete the specified host in the system
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: delete the specified host in the system
- name: /hosts/{host:id}|rel=update
  description: update the specified host in the system
  request:
    body:
      parameterType: Host
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {host.name: 'xs:string', host.comment: 'xs:string', host.address: 'xs:string', host.root_password--DEPRECATED: 'xs:string',
          host.display.address: 'xs:string', host.cluster.id|name: 'xs:string', host.port: 'xs:int',
          host.spm.priority: 'xs:int',
          host.power_management.type: 'xs:string', host.power_management.enabled: 'xs:boolean', host.power_management.address: 'xs:string',
          host.power_management.username: 'xs:string', host.power_management.password: 'xs:string', host.power_management.automatic_pm_enabled: 'xs:boolean',
          host.power_management.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'},
          host.power_management.pm_proxy--COLLECTION: {propietary : 'xs:string'}, host.power_management.agents.agent--COLLECTION:{type: 'xs:string',
          address: 'xs:string', username: 'xs:string', password: 'xs:string', options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'},
          encrypt_options: 'xs:boolean'},
          host.power_management.kdump_detection: 'xs:boolean', host.external_host_provider.id: 'xs:string'}
        description: update the specified host in the system. This is deprecated and is provided only for backwards compatibility
      - mandatoryArguments: {}
        optionalArguments: {host.name: 'xs:string', host.comment: 'xs:string', host.address: 'xs:string',
          host.ssh.port: 'xs:int', host.ssh.user.user_name: 'xs:string', host.ssh.fingerprint: 'xs:string', host.display.address: 'xs:string',
          host.cluster.id|name: 'xs:string', host.port: 'xs:int',
          host.spm.priority: 'xs:int',
          host.power_management.type: 'xs:string',
          host.power_management.automatic_pm_enabled: 'xs:boolean',
          host.power_management.enabled: 'xs:boolean', host.power_management.address: 'xs:string', host.power_management.username: 'xs:string',
          host.power_management.password: 'xs:string', host.power_management.options.option--COLLECTION: {option.name: 'xs:string',
          option.value: 'xs:string'},  host.power_management.pm_proxy--COLLECTION: {propietary : 'xs:string'},
          host.power_management.agents.agent--COLLECTION:{type: 'xs:string', address: 'xs:string', username: 'xs:string', password: 'xs:string',
          options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}, encrypt_options: 'xs:boolean'},
          host.power_management.kdump_detection: 'xs:boolean'}
        description: update the specified host in the system
- name: /hosts|rel=add
  description: add a new host to the system
  request:
    body:
      parameterType: Host
      signatures:
      - mandatoryArguments: {host.name: 'xs:string', host.address: 'xs:string', host.root_password--DEPRECATED: 'xs:string', host.cluster.id|name: 'xs:string'}
        optionalArguments: {host.comment: 'xs:string', host.port: 'xs:int',
          host.display.address: 'xs:string',
          host.spm.priority: 'xs:int',
          host.power_management.type: 'xs:string',
          host.power_management.enabled: 'xs:boolean', host.power_management.address: 'xs:string', host.power_management.username: 'xs:string', host.power_management.automatic_pm_enabled: 'xs:boolean',
          host.power_management.password: 'xs:string', host.power_management.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'},
          host.power_management.pm_proxy--COLLECTION: {propietary : 'xs:string'}, host.power_management.agents.agent--COLLECTION:{type: 'xs:string',
          address: 'xs:string', username: 'xs:string', password: 'xs:string', options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}, encrypt_options: 'xs:boolean'}, host.reboot_after_installation: 'xs:boolean', host.override_iptables: 'xs:boolean',
          host.power_management.kdump_detection: 'xs:boolean', host.protocol: 'xs:int'}
        description: add a new host to the system providing the host root password. This has been deprecated and provided for backwards compatibility
      - mandatoryArguments: {host.name: 'xs:string', host.address: 'xs:string', host.cluster.id|name: 'xs:string'}
        optionalArguments: {host.comment: 'xs:string', host.ssh.port: 'xs:int', host.ssh.fingerprint: 'xs:string', host.ssh.authentication_method: 'xs:string',
          host.ssh.user.user_name: 'xs:string', host.ssh.user.password: 'xs:string', host.port: 'xs:int',
          host.display.address: 'xs:string',
          host.spm.priority: 'xs:int',
          host.power_management.type: 'xs:string', host.power_management.automatic_pm_enabled: 'xs:boolean',
          host.power_management.enabled: 'xs:boolean', host.power_management.address: 'xs:string', host.power_management.username: 'xs:string',
          host.power_management.password: 'xs:string', host.power_management.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'},
          host.power_management.pm_proxy--COLLECTION: {propietary : 'xs:string'}, host.power_management.agents.agent--COLLECTION:{type: 'xs:string', address: 'xs:string',
          username: 'xs:string', password: 'xs:string', options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}, encrypt_options: 'xs:boolean'}, host.reboot_after_installation: 'xs:boolean', host.override_iptables: 'xs:boolean',
          host.power_management.kdump_detection: 'xs:boolean', host.protocol: 'xs:int'}
        description: add a new host to the system providing the ssh password or fingerprint
- name: /hosts/{host:id}/activate|rel=activate
  description: activate the specified host in the system
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: activate the specified host in the system
- name: /hosts/{host:id}/forceselectspm|rel=forceselectspm
  description: force the specified to be selected as storage pool manager
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: force the specified to be selected as storage pool manager
- name: /hosts/{host:id}/approve|rel=approve
  description: approve specified host to be added to the engine
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.cluster.id|name: xs:string
          host.root_password--DEPRECATED: xs:string
        description: approve specified host to be added to the engine by using root password (deprecated verb). this occurs when the host registers itself with the engine
      - mandatoryArguments: {}
        optionalArguments:
          action.cluster.id|name: xs:string
          host.ssh.authentication_method: xs:string
          host.ssh.user.user_name: xs:string
          host.ssh.user.password: xs:string
        description: approve specified host to be added to the engine by using ssh authentication. this occurs when the host registers itself with the engine
- name: /hosts/{host:id}/commitnetconfig|rel=commitnetconfig
  description: commit the changes made to network configuration of the host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: commit the changes made to network configuration of the host
- name: /hosts/{host:id}/deactivate|rel=deactivate
  description: deactivate the specified host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.reason: xs:string
        description: deactivate the specified host
- name: /hosts/{host:id}/fence|rel=fence
  description: perform fencing operation (start/stop/status) on the host.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.fence_type: 'xs:string'}
        description: perform fencing operation (start/stop/status) on the host.
- name: /hosts/{host:id}/install|rel=install
  description: install vdsm and other packages required to get the host ready to be used in the engine
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.root_password: xs:string
          action.image: xs:string
          action.host.override_iptables: xs:boolean
        deprecated: true
        description: install vdsm and other packages required to get the host ready to be used in the engine providing the root password. This has been deprecated
      - mandatoryArguments: {}
        optionalArguments:
          action.ssh.port: xs:int
          action.ssh.fingerprint: xs:string
          action.ssh.authentication_method: xs:string
          action.ssh.user.user_name: xs:string
          action.ssh.user.password: xs:string
          action.image: xs:string
          action.host.override_iptables: xs:boolean
        description: install vdsm and other packages required to get the host ready to be used in the engine providing the ssh password
- name: /hosts/{host:id}/upgrade|rel=upgrade
  description: upgrade vdsm and other packages of the specified host in the system
  request:
    body:
      parameterType: Action
      signatures:
      - optionalArguments:
          action.image: xs:string
- name: /hosts/{host:id}/enrollcertificate|rel=enrollcertificate
  description: enroll certificate for the specified host in the system
  request:
    body:
      parameterType: Action
- name: /hosts/{host:id}/iscsidiscover|rel=iscsidiscover
  description: initiate the command to discover the iscsi targets and map the targets to the storage server connections
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.iscsi.address: 'xs:string'}
        description: initiate the command to discover the iscsi targets and map the targets to the storage server connections
- name: /hosts/{host:id}/iscsilogin|rel=iscsilogin
  description: login to the specified iscsi target at the specified address
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.iscsi.address: 'xs:string', action.iscsi.target: 'xs:string'}
        description: login to the specified iscsi target at the specified address
- name: /hosts/{host:id}/unregisteredstoragedomainsdiscover|rel=unregisteredstoragedomainsdiscover
  description: Discover the block Storage Domains which are candidates to be imported to the setup. For FCP no arguments are needed.
  request:
    body:
      parameterType: Action
      signatures:
      - optionalArguments: {action.iscsi.address: 'xs:string', action.iscsi_target: 'xs:string'}
        description: Discover the block Storage Domains which are candidates to be imported to the setup. For FCP no arguments are needed.
- name: /hosts/{host:id}/refresh|rel=refresh
  description: refresh the capabilities of the host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: refresh the capabilities of the host
- name: /hosts/{host:id}/katelloerrata|rel=get
  description: get the list of errata available for the host
- name: /hosts/{host:id}/katelloerrata/{katelloerratum:id}|rel=get
  description: get the details of the specific erratum available for the host
- name: /hosts/{host:id}/nics|rel=get
  description: get the list of network interfaces for the host
- name: /hosts/{host:id}/nics/{nic:id}|rel=get
  description: get the details of the specified network interface for the host
- name: /hosts/{host:id}/nics/{nic:id}|rel=delete
  description: delete the specified network interface for the host
- name: /hosts/{host:id}/nics/{nic:id}|rel=update
  description: update the specified network interface for the host
  request:
    body:
      parameterType: HostNIC
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          hostnic.bonding.slaves.host_nic--COLLECTION: {host_nic.id|name: 'xs:string'}
          hostnic.network.id|name: xs:string
          hostnic.name: xs:string
          hostnic.bonding.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string',
            type: 'xs:string'}
          hostnic.ip.gateway: xs:string
          hostnic.boot_protocol: xs:string
          hostnic.mac: xs:string
          hostnic.ip.address: xs:string
          hostnic.ip.netmask: xs:string
        description: update the specified network interface for the host
- name: /hosts/{host:id}/nics|rel=add
  description: add a new network interface for the host
  request:
    body:
      parameterType: HostNIC
      signatures:
      - mandatoryArguments: {hostnic.network.id|name: 'xs:string', hostnic.name: 'xs:string', hostnic.bonding.slaves.host_nic--COLLECTION: {host_nic.id|name: 'xs:string'}}
        optionalArguments:
          hostnic.bonding.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string',
            type: 'xs:string'}
        description: add a new network interface for the host
- name: /hosts/{host:id}/nics/setupnetworks|rel=setupnetworks
  description: initiate the command to setup networks for the network interface card of the specified host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.host_nics.host_nic--COLLECTION:
            host_nic.network.id|name: xs:string
            host_nic.name: xs:string
            host_nic.base_interface: xs:string
            host_nic.ip.gateway: xs:string
            host_nic.boot_protocol: xs:string
            host_nic.mac: xs:string
            host_nic.ip.address: xs:string
            host_nic.ip.netmask: xs:string
            host_nic.bonding.options.option--COLLECTION:
              option.name: xs:string
              option.value: xs:string
              option.type: xs:string
            bonding.slaves.host_nic--COLLECTION:
              host_nic.name|id: xs:string
            host_nic.override_configuration: xs:boolean
            host_nic.properties.property--COLLECTION:
              property.name: xs:string
              property.value: xs:string
          action.checkConnectivity: xs:boolean
          action.connectivityTimeout: xs:int
          action.force: xs:boolean
        deprecated: true
        description: initiate the command to setup networks for the network interface card of the specified host
- name: /hosts/{host:id}/nics/{nic:id}/attach|rel=attach
  description: attach the network interface card to the specified host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.network.id|name: 'xs:string'}
        description: attach the network interface card to the specified host
- name: /hosts/{host:id}/nics/{nic:id}/detach|rel=detach
  description: detach the network interface card from the specified host
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: detach the network interface card from the specified host
- name: /hosts/{host:id}/nics/{nic:id}/statistics|rel=get
  description: get the statistics for the network interface card attached to the specified host
- name: /hosts/{host:id}/nics/{nic:id}/statistics/{statistic:id}|rel=get
  description: get the details of the specified statistics for the network interface card attached to the specified host
- name: /hosts/{host:id}/nics/{nic:id}/labels|rel=get
  description: get the labels of an interface
- name: /hosts/{host:id}/nics/{nic:id}/labels|rel=add
  description: add a new label to the interface
  request:
    body:
      parameterType: Label
      signatures:
      - mandatoryArguments: {label.id: 'xs:string'}
        description: add a new label to the interface
- name: /hosts/{host:id}/nics/{nic:id}/labels/{label:id}|rel=get
  description: get a specific label of an interface
- name: /hosts/{host:id}/nics/{nic:id}/labels/{label:id}|rel=delete
  description: delete the specified label of an interface
- name: /hosts/{host:id}/setupnetworks|rel=setupnetworks
  description: initiate the command to setup networks for the specified host
  request:
    body:
      parameterType: Action
      signatures:
      - optionalArguments:
          action.modified_network_attachments.network_attachment--COLLECTION:
            network_attachment.id: xs:string
            network_attachment.network.name|id: xs:string
            network_attachment.host_nic.name|id: xs:string
            network_attachment.ip_address_assignments.ip_address_assignment--COLLECTION:
              ip_address_assignment.assignment_method: xs:string
              ip_address_assignment.ip.address: xs:string
              ip_address_assignment.ip.netmask: xs:string
              ip_address_assignment.ip.gateawy: xs:string
            network_attachment.properties.property--COLLECTION:
              property.name: xs:string
              property.value: xs:string
          action.removed_network_attachments.network_attachment--COLLECTION:
            network_attachment.id: xs:string
          action.modified_bonds.host_nic--COLLECTION:
            host_nic.name|id: xs:string
            host_nic.bonding.options.option--COLLECTION:
              option.name: xs:string
              option.value: xs:string
              option.type: xs:string
            bonding.slaves.host_nic--COLLECTION:
              host_nic.name|id: xs:string
          action.removed_bonds.host_nic--COLLECTION:
            host_nic.name|id: xs:string
          action.synchronized_network_attachments.network_attachment--COLLECTION:
            network_attachment.id: xs:string
          action.modified_labels.label--COLLECTION:
            label.host_nic.name|id: xs:string
            label.id: xs:string
          action.removed_labels.label--COLLECTION:
            label.id: xs:string
          action.check_connectivity: xs:boolean
          action.connectivity_timeout: xs:int
- name: /hosts/{host:id}/nics/{nic:id}/networkattachments|rel=get
  description: get the list of network attachments of the network interface
- name: /hosts/{host:id}/nics/{nic:id}/networkattachments/{networkattachment:id}|rel=get
  description: get the details of the specified network attachment of the network interface
- name: /hosts/{host:id}/nics/{nic:id}/networkattachments/{networkattachment:id}|rel=delete
  description: delete the specified network attachment from the network interface
- name: /hosts/{host:id}/nics/{nic:id}/networkattachments/{networkattachment:id}|rel=update
  description: update the specified network attachment on the network interface
  request:
    body:
      parameterType: NetworkAttachment
      signatures:
      - optionalArguments:
          network_attachment.ip_address_assignments.ip_address_assignment--COLLECTION:
            ip_address_assignment.assignment_method: xs:string
            ip_address_assignment.ip.address: xs:string
            ip_address_assignment.ip.netmask: xs:string
            ip_address_assignment.ip.gateawy: xs:string
          network_attachment.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
    urlparams:
      override_configuration:
        context: matrix
        type: xs:boolean
        value: true|false
        required: false
- name: /hosts/{host:id}/nics/{nic:id}/networkattachments|rel=add
  description: add a new network attachment to the network interface
  request:
    body:
      parameterType: NetworkAttachment
      signatures:
      - mandatoryArguments:
          network_attachment.network.name|id: xs:string
        optionalArguments:
          network_attachment.ip_address_assignments.ip_address_assignment--COLLECTION:
            ip_address_assignment.assignment_method: xs:string
            ip_address_assignment.ip.address: xs:string
            ip_address_assignment.ip.netmask: xs:string
            ip_address_assignment.ip.gateawy: xs:string
          network_attachment.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
- name: /hosts/{host:id}/networkattachments|rel=get
  description: get the list of network attachments of the host
- name: /hosts/{host:id}/networkattachments/{networkattachment:id}|rel=get
  description: get the details of the specified network attachment of the host
- name: /hosts/{host:id}/networkattachments/{networkattachment:id}|rel=delete
  description: delete the specified network attachment from the host
- name: /hosts/{host:id}/networkattachments/{networkattachment:id}|rel=update
  description: update the specified network attachment on the host
  request:
    body:
      parameterType: NetworkAttachment
      signatures:
      - optionalArguments:
          network_attachment.host_nic.id|name: xs:string
          network_attachment.ip_address_assignments.ip_address_assignment--COLLECTION:
            ip_address_assignment.assignment_method: xs:string
            ip_address_assignment.ip.address: xs:string
            ip_address_assignment.ip.netmask: xs:string
            ip_address_assignment.ip.gateawy: xs:string
          network_attachment.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
    urlparams:
      override_configuration:
        context: matrix
        type: xs:boolean
        value: true|false
        required: false
- name: /hosts/{host:id}/networkattachments|rel=add
  description: add a new network attachment to the host
  request:
    body:
      parameterType: NetworkAttachment
      signatures:
      - mandatoryArguments:
          network_attachment.network.name|id: xs:string
        optionalArguments:
          network_attachment.host_nic.id|name: xs:string
          network_attachment.ip_address_assignments.ip_address_assignment--COLLECTION:
            ip_address_assignment.assignment_method: xs:string
            ip_address_assignment.ip.address: xs:string
            ip_address_assignment.ip.netmask: xs:string
            ip_address_assignment.ip.gateawy: xs:string
          network_attachment.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
- name: /hosts/{host:id}/unmanagednetworks|rel=get
  description: get a list of unmanaged networks
- name: /hosts/{host:id}/unmanagednetworks/{unmanagednetwork:id}|rel=get
  description: get the details of the specified unmanaged network
- name: /hosts/{host:id}/unmanagednetworks/{unmanagednetwork:id}|rel=delete
  description: delete the specified unmanaged network
- name: /hosts/{host:id}/permissions|rel=get
  description: get the list of permissions for the host
- name: /hosts/{host:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission for the host
- name: /hosts/{host:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission for the host
- name: /hosts/{host:id}/permissions|rel=add
  description: add a new permission for the host
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission for the host
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.group.id: xs:string
        description: add a new group level permission for the host
- name: /hosts/{host:id}/statistics|rel=get
  description: get the statistics for the host
- name: /hosts/{host:id}/statistics/{statistic:id}|rel=get
  description: get the details of the specified statistics for the host
- name: /hosts/{host:id}/storage|rel=get
  description: get the list of all logical units and volume groups for the host
- name: /hosts/{host:id}/storage/{storag:id}|rel=get
  description: get the details of the specified logical unit or volume group for the host
- name: /hosts/{host:id}/tags|rel=get
  description: get the list of all tags added to the host
- name: /hosts/{host:id}/tags/{tag:id}|rel=get
  description: get the details of the specified tag added to the host
- name: /hosts/{host:id}/tags/{tag:id}|rel=delete
  description: delete the specified tag added to the host
- name: /hosts/{host:id}/tags|rel=add
  description: add a new tag to the host
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.id|name: 'xs:string'}
- name: /hosts/{host:id}/fenceagents|rel=get
  description: get all fencing agents defined for this host
- name: /hosts/{host:id}/fenceagents|rel=add
  description: add a new fencing-agent to the host
  request:
    body:
      parameterType: Agent
      signatures:
      - mandatoryArguments: {agent.address: 'xs:string', agent.order: 'xs:int', agent.type: 'xs:string', agent.username: 'xs:string', agent.password: 'xs:string'}
        optionalArguments: {agent.port: 'xs:int', agent.options--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}, encrypt_options: 'xs:boolean'}
- name: /hosts/{host:id}/fenceagents/{fenceagent:id}|rel=get
  description: get the fencing agent with the specified ID.
- name: /hosts/{host:id}/fenceagents/{fenceagent:id}|rel=update
  description: update a fencing-agent
  request:
    body:
      parameterType: Agent
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {agent.address: 'xs:string', agent.order: 'xs:int', agent.type: 'xs:string', agent.username: 'xs:string', agent.password: 'xs:string', agent.port: 'xs:int', agent.options--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}, encrypt_options: 'xs:boolean'}
- name: /hosts/{host:id}/fenceagents/{fenceagent:id}|rel=delete
  description: delete the specified fencing agent
- name: /hosts/{host:id}/devices|rel=get
  description: get all host devices
- name: /hosts/{host:id}/devices/{device:id}|rel=get
  description: get the specified host device
- name: /hosts/{host:id}/storageconnectionextensions|rel=get
  description: get all host's storage connection extensions.
- name: /hosts/{host:id}/storageconnectionextensions|rel=add
  description: add a storage connection extensions to the host.
  request:
    body:
      parameterType: StorageConnectionExtension
      signatures:
      - mandatoryArguments: {storageconnectionextension.target: 'xs:string', storageconnectionextension.username: 'xs:string', storageconnectionextension.password: 'xs:string'}
        optionalArguments: {}
- name: /hosts/{host:id}/storageconnectionextensions|{storageconnectionextension:id}|rel=get
  description: get the specified host's storage connection extensions.
- name: /hosts/{host:id}/storageconnectionextensions|{storageconnectionextension:id}|rel=delete
  description: delete the specified host's storage connection extension.
- name: /hosts/{host:id}/storageconnectionextensions|{storageconnectionextension:id}|rel=update
  description: update the specified host's storage connection extension.
  request:
    body:
      parameterType: StorageConnectionExtension
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {storageconnectionextension.target: 'xs:string', storageconnectionextension.username: 'xs:string', storageconnectionextension.password: 'xs:string'}
- name: /networks|rel=get
  description: get the list of all networks in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /networks/{network:id}|rel=get
  description: get the details of the specified network in the system
- name: /networks/{network:id}|rel=delete
  description: delete the specified network in the system
- name: /networks/{network:id}|rel=update
  description: update the specified network in the system
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {network.name: 'xs:string', network.description: 'xs:string', network.comment: 'xs:string', network.vlan.id: 'xs:string',
          network.ip.address: 'xs:string', network.ip.gateway: 'xs:string', network.ip.netmask: 'xs:string',
          network.display: 'xs:boolean', network.stp: 'xs:boolean', network.mtu: 'xs:int'}
        description: update the specified network in the system
- name: /networks|rel=add
  description: add a new network to the system
  request:
    body:
      parameterType: Network
      signatures:
      - mandatoryArguments: {
            network.data_center.id|name: 'xs:string',
            network.name: 'xs:string'
        }
        optionalArguments: {
            network.description: 'xs:string',
            network.comment: 'xs:string',
            network.vlan.id: 'xs:string',
            network.ip.address: 'xs:string',
            network.ip.gateway: 'xs:string',
            network.ip.netmask: 'xs:string',
            network.stp: 'xs:boolean',
            network.mtu: 'xs:int',
            network.profile_required: 'xs:boolean',
            network.usages.usage--COLLECTION: {usage: 'xs:string'}
        }
        description: add a new network to the system
- name: /networks/{network:id}/permissions|rel=get
  description: get the list of all permissions on a network in the system
- name: /networks/{network:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission on a network in the system
- name: /networks/{network:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on a network in the system
- name: /networks/{network:id}/permissions|rel=add
  description: add a new permission on a network in the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on a network in the system
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on a network in the system
- name: /networks/{network:id}/vnicprofiles|rel=get
  description: get the list of all virtual network interface card profiles for the network
- name: /networks/{network:id}/vnicprofiles/{vnicprofile:id}|rel=get
  description: get the details of the specified virtual network interface card profile for the network
- name: /networks/{network:id}/vnicprofiles/{vnicprofile:id}|rel=delete
  description: delete the specified virtual network interface card profile for the network
- name: /networks/{network:id}/vnicprofiles|rel=add
  description: add a new virtual network interface card profile for the network
  request:
    body:
      parameterType: VnicProfile
      signatures:
      - mandatoryArguments: {vnicprofile.name: 'xs:string'}
        optionalArguments: {vnicprofile.description: 'xs:string', vnicprofile.port_mirroring: 'xs:boolean',
        vnicprofile.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}}
        description: add a new virtual network interface card profile for the network
- name: /networks/{network:id}/labels|rel=get
  description: get the labels of a network
- name: /networks/{network:id}/labels|rel=add
  description: add a new label to the network
  request:
    body:
      parameterType: Label
      signatures:
      - mandatoryArguments: {label.id: 'xs:string'}
        description: add a new label to the network
- name: /networks/{network:id}/labels/{label:id}|rel=get
  description: get a specific label of a network
- name: /networks/{network:id}/labels/{label:id}|rel=delete
  description: delete the specified label of a network
- name: /vnicprofiles|rel=get
  description: get the list of all virtual network interface card profiles in the system
- name: /vnicprofiles/{vnicprofile:id}|rel=get
  description: get the details of the specified virtual network interface card profile in the system
- name: /vnicprofiles/{vnicprofile:id}|rel=delete
  description: delete the specified virtual network interface card profile in the system
- name: /vnicprofiles/{vnicprofile:id}|rel=update
  description: update the specified virtual network interface card profile in the system
  request:
    body:
      parameterType: VnicProfile
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {vnicprofile.name: 'xs:string', vnicprofile.description: 'xs:string', vnicprofile.port_mirroring: 'xs:boolean',
        vnicprofile.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}}
        description: update the specified virtual network interface card profile in the system
- name: /vnicprofiles|rel=add
  description: add a new virtual network interface card profile to the system
  request:
    body:
      parameterType: VnicProfile
      signatures:
      - mandatoryArguments: {vnicprofile.network.id: 'xs:string', vnicprofile.name: 'xs:string'}
        optionalArguments: {vnicprofile.description: 'xs:string', vnicprofile.port_mirroring: 'xs:boolean',
        vnicprofile.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}}
        description: add a new virtual network interface card profile to the system
- name: /vnicprofiles/{vnicprofile:id}/permissions|rel=get
  description: get the list of all permissions on the virtual network interface card profile in the system
- name: /vnicprofiles/{vnicprofile:id}/permissions/{permission:id}|rel=get
  description: get details of the specified permission on the virtual network interface card profile in the system
- name: /vnicprofiles/{vnicprofile:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission for the virtual network interface card profile
- name: /vnicprofiles/{vnicprofile:id}/permissions|rel=add
  description: add a new permission on the virtual network interface card profile in the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the virtual network interface card profile in the system
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the virtual network interface card profile in the system
- name: /roles|rel=get
  description: get the list of all roles in the system
- name: /roles/{role:id}|rel=get
  description: get the details of the specified role in the system
- name: /roles/{role:id}|rel=delete
  description: get the details of the specified role in the system
- name: /roles|rel=add
  description: add a new role to the system
  request:
    body:
      parameterType: Role
      signatures:
      - mandatoryArguments: {role.name: 'xs:string', role.permits.permit--COLLECTION: {permit.id: 'xs:string'}}
        optionalArguments: {role.description: 'xs:string', role.administrative: 'xs:boolean'}
        description: add a new role to the system
- name: /roles/{role:id}|rel=update
  description: update the specified role in the system
  request:
    body:
      parameterType: Role
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {role.permits.permit--COLLECTION: {permit.id: 'xs:string'}, role.description: 'xs:string'}
        description: update the specified role in the system
- name: /roles/{role:id}/permits|rel=get
  description: get the list of all permits for the specified role in the system
- name: /roles/{role:id}/permits/{permit:id}|rel=get
  description: get the details of the specified permit for the role in the system
- name: /roles/{role:id}/permits/{permit:id}|rel=delete
  description: delete the specified permit for the role in the system
- name: /roles/{role:id}/permits|rel=add
  description: add a new permit for the role in the system
  request:
    body:
      parameterType: Permit
      signatures:
      - mandatoryArguments: {permit.id|name: 'xs:string'}
        optionalArguments: {}
- name: /icons|rel=get
  description: get the list of all icons in the system
- name: /icons/{icon:id}|rel=get
  description: get the detailed of the specified icon in the system
- name: /bookmarks|rel=get
  description: get the list of bookmarks in the system
- name: /bookmarks/{bookmark:id}|rel=get
  description: get the details of the specified bookmark in the system
- name: /bookmarks/{tag:id}|rel=delete
  description: delete the specified bookmark from the system
- name: /bookmarks/{tag:id}|rel=update
  description: update the specified bookmark in the system
  request:
    body:
      parameterType: Bookmark
      signatures:
      - mandatoryArguments: {bookmark.name: 'xs:string', bookmark.value: 'xs:string'}
        description: update the name, value of the specified bookmark in the system
- name: /bookmarks|rel=add
  description: add a new bookmark to the system
  request:
    body:
      parameterType: Bookmark
      signatures:
      - mandatoryArguments: {bookmark.name: 'xs:string', bookmark.value: 'xs:string'}
- name: /tags|rel=get
  description: get the list of tags in the system
- name: /tags/{tag:id}|rel=get
  description: get the details of the specified tag in the system
- name: /tags/{tag:id}|rel=delete
  description: delete the specified tag in the system
- name: /tags/{tag:id}|rel=update
  description: update the specified tag in the system
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {tag.name: 'xs:string', tag.description: 'xs:string', tag.parent.tag.id|name: 'xs:string'}
        description: update the name, description or parent tag of the specified tag in the system
- name: /tags|rel=add
  description: add a new tag to the system
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.name: 'xs:string'}
        optionalArguments: {tag.description: 'xs:string', tag.parent.tag.id|name: 'xs:string'}
- name: /templates|rel=get
  description: get the list of all templates in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /templates/{template:id}|rel=get
  description: get the details of the specified template in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
      All-Content: {value: true|false, required: false}
- name: /templates/{template:id}|rel=delete
  description: delete the specified template in the system
- name: /templates/{template:id}|rel=update
  description: update the specified template in the system
  request:
    body:
      parameterType: Template
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          template.name: 'xs:string'
          template.memory: xs:long
          template.io.threads: xs:int
          template.cpu.topology.cores: xs:int
          template.high_availability.enabled: 'xs:boolean'
          template.os.cmdline: xs:string
          template.origin: xs:string
          template.high_availability.priority: 'xs:int'
          template.timezone--DEPRECATED: xs:string
          template.time_zone.name: xs:string
          template.domain.name: xs:string
          template.type: xs:string
          template.stateless: 'xs:boolean'
          template.delete_protected: xs:boolean
          template.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
          vm.rng_device.rate.bytes: xs:int
          vm.rng_device.rate.period: xs:int
          vm.rng_device.source: xs:string
          template.console.enabled: xs:boolean
          template.placement_policy.affinity: xs:string
          template.description: xs:string
          template.comment: xs:string
          template.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
          template.os.type: xs:string
          template.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          template.cpu.topology.sockets: xs:int
          template.cpu_shares: xs:int
          template.cpu.architecture: xs:string
          template.os.kernel: xs:string
          template.display.type: xs:string
          template.display.monitors: xs:int
          vm.display.single_qxl_pci: xs:boolean
          template.display.allow_override: xs:boolean
          template.display.smartcard_enabled: xs:boolean
          vm.display.file_transfer_enabled: xs:boolean
          vm.display.copy_paste_enabled: xs:boolean
          template.display.keyboard_layout: xs:string
          template.display.disconnect_action: xs:string
          template.os.initRd: xs:string
          template.usb.enabled: xs:boolean
          template.usb.type: xs:string
          template.tunnel_migration: xs:boolean
          template.migration_downtime: xs:int
          template.virtio_scsi.enabled: xs:boolean
          template.soundcard_enabled: xs:boolean
          template.custom_emulated_machine: xs:string
          template.custom_cpu_model: xs:string
          template.version.version_name: xs:string
          template.serial_number.policy: xs:string
          template.serial_number.value: xs:string
          template.bios.boot_menu.enabled: xs:boolean
          template.start_paused: xs:boolean
          template.cpu_profile.id: xs:string
          template.migration.auto_converge: xs:string
          template.migration.compressed: xs:string
          template.small_icon.id: xs:string
          template.large_icon.id: xs:string
          template.large_icon.media_type: xs:string
          template.large_icon.data: xs:string
        description: update the specified template in the system
- name: /templates|rel=add
  description: add a new template to the system
  request:
    body:
      parameterType: Template
      signatures:
      - mandatoryArguments: {template.vm.id|name: 'xs:string', template.name: 'xs:string'}
        optionalArguments:
          template.memory: xs:long
          template.io.threads: xs:int
          template.cpu.topology.cores: xs:int
          template.high_availability.enabled: 'xs:boolean'
          template.os.cmdline: xs:string
          template.origin: xs:string
          template.high_availability.priority: 'xs:int'
          template.timezone--DEPRECATED: xs:string
          template.time_zone.name: xs:string
          template.storage_domain.id: 'xs:string'
          template.domain.name: xs:string
          template.type: xs:string
          template.stateless: 'xs:boolean'
          template.delete_protected: xs:boolean
          template.sso.methods.method--COLLECTION: {method.id: 'xs:string'}
          vm.rng_device.rate.bytes: xs:int
          vm.rng_device.rate.period: xs:int
          vm.rng_device.source: xs:string
          template.console.enabled: xs:boolean
          template.placement_policy.affinity: xs:string
          template.description: xs:string
          template.comment: xs:string
          template.custom_properties.custom_property--COLLECTION: {custom_property.name: 'xs:string', custom_property.value: 'xs:string'}
          template.os.type: xs:string
          template.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          template.cpu.topology.sockets: xs:int
          template.cpu_shares: xs:int
          template.cpu.architecture: xs:string
          template.os.kernel: xs:string
          template.display.type: xs:string
          template.display.monitors: xs:int
          vm.display.single_qxl_pci: xs:boolean
          template.display.allow_override: xs:boolean
          template.display.smartcard_enabled: xs:boolean
          template.display.file_transfer_enabled: xs:boolean
          template.display.copy_paste_enabled: xs:boolean
          template.display.keyboard_layout: xs:string
          template.display.disconnect_action: xs:string
          template.os.initRd: xs:string
          template.usb.enabled: xs:boolean
          template.usb.type: xs:string
          template.tunnel_migration: xs:boolean
          template.migration_downtime: xs:int
          template.virtio_scsi.enabled: xs:boolean
          template.soundcard_enabled: xs:boolean
          template.custom_emulated_machine: xs:string
          template.custom_cpu_model: xs:string
          template.vm.disks.disk--COLLECTION: {disk.id: 'xs:string', disk.alias: 'xs:string', disk.description: 'xs:string', storage_domains.storage_domain--COLLECTION: {storage_domain.id: 'xs:string'}}
          template.permissions.clone: xs:boolean
          template.version.version_name: xs:string
          template.version.base_template.id: xs:string
          template.cpu.cpu_tune.vcpu_pin--COLLECTION: {vcpu_pin.vcpu: 'xs:int', vcpu_pin.cpu_set: 'xs:string'}
          template.serial_number.policy: xs:string
          template.serial_number.value: xs:string
          template.bios.boot_menu.enabled: xs:boolean
          template.cluster.id: xs:string
          template.cluster.name: xs:string
          template.start_paused: xs:boolean
          template.cpu_profile.id: xs:string
          template.migration.auto_converge: xs:string
          template.migration.compressed: xs:string
          template.small_icon.id: xs:string
          template.large_icon.id: xs:string
          template.large_icon.media_type: xs:string
          template.large_icon.data: xs:string
        description: add a new template to the system
- name: /templates/{template:id}/export|rel=export
  description: export the specified template to the export domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.storage_domain.id|name: 'xs:string'}
        optionalArguments:
          action.exclusive: xs:boolean
        description: export the specified template to the export domain
- name: /templates/{template:id}/cdroms|rel=get
  description: get the list of cdroms attached to the specified template
- name: /templates/{template:id}/cdroms/{cdrom:id}|rel=get
  description: get the details of the specified cdrom attached to the template
- name: /templates/{template:id}/watchdogs|rel=get
  description: get all the watchdogs for the template identified by the given id
- name: /templates/{template:id}/watchdogs/{watchdog:id}|rel=get
  description: get the watchdog identified by the id for a given template
- name: /templates/{template:id}/watchdogs/{watchdog:id}|rel=delete
  description: delete the watchdog for the template identified by the given id
- name: /templates/{template:id}/watchdogs/{watchdog:id}|rel=update
  description: update the watchdog for the template identified by the given id
  request:
    body:
      parameterType: WatchDog
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {watchdog.action: 'xs:string', watchdog.model: 'xs:string'}
        description: update the watchdog for the template identified by the given id with a new action and model as specified in the request data
    urlparams:
- name: /templates/{template:id}/watchdogs|rel=add
  description: add a watchdog to the template identified by the given id
  request:
    body:
      parameterType: WatchDog
      signatures:
      - mandatoryArguments: {watchdog.action: 'xs:string', watchdog.model: 'xs:string'}
        description: add a watchdog to the template identified by the given id
- name: /templates/{template:id}/disks|rel=get
  description: get the list of disks attached to the template
- name: /templates/{template:id}/disks/{disk:id}|rel=get
  description: get the details of the specified disk attached to the template
- name: /templates/{template:id}/disks/{disk:id}|rel=delete
  description: delete the specified disk attached to the template
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.storage_domain.id: xs:string
          action.force: xs:boolean
- name: /templates/{template:id}/disks/{disk:id}/copy|rel=copy
  description: copy the specified disk attached to the template to a specific storage domain
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
        description: copy the specified disk attached to the template to a specific storage domain
    headers:
      Filter: {value: true|false, required: false}
- name:  /templates/{template:id}/disks/{disk:id}/export|rel=export
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
    headers:
      Filter: {value: true|false, required: false}
- name: /templates/{template:id}/nics|rel=get
  description: get the list of network interface cards attached to the template
- name: /templates/{template:id}/nics|rel=add
  description: add a new network interface card to the template
  request:
    body:
      parameterType: NIC
      signatures:
      - mandatoryArguments: {nic.name: 'xs:string'}
        optionalArguments: {nic.vnic_profile.id: 'xs:string', nic.linked: 'xs:boolean', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.plugged: 'xs:boolean'}
        description: add a new network interface card to the template using a virtual network interface card profile
      - mandatoryArguments: {nic.name: 'xs:string'}
        optionalArguments: {nic.network.id|name: 'xs:string', nic.linked: 'xs:boolean', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.port_mirroring.networks.network--COLLECTION: {network.id: 'xs:string'}}
        deprecated: true
        description: add a new network interface card to the template using a network with optional port mirroring options. This has been deprecated
- name: /templates/{template:id}/nics/{nic:id}|rel=get
  description: get the details of the specified network interface card attached to the template
- name: /templates/{template:id}/nics/{nic:id}|rel=delete
  description: delete the specified network interface card attached to the template
- name: /templates/{template:id}/nics/{nic:id}|rel=update
  description: update the specified network interface card attached to the template
  request:
    body:
      parameterType: NIC
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {nic.vnic_profile.id: 'xs:string', nic.linked: 'xs:boolean', nic.name: 'xs:string', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.plugged: 'xs:boolean'}
      - mandatoryArguments: {}
        optionalArguments: {nic.network.id|name: 'xs:string', nic.linked: 'xs:boolean', nic.name: 'xs:string', nic.mac.address: 'xs:string', nic.interface: 'xs:string', nic.port_mirroring.networks.network--COLLECTION: {network.id: 'xs:string'}}
        deprecated: true
- name: /templates/{template:id}/permissions|rel=get
  description: get the list of all permissions for the specified template
- name: /templates/{template:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission on the template
- name: /templates/{template:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on the template
- name: /templates/{template:id}/permissions|rel=add
  description: add a new permission on the template
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the template
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new role permission on the template
- name: /templates/{template:id}/graphicsconsoles|rel=get
  description: Get graphics consoles of a template.
- name: /templates/{template:id}/graphicsconsoles|rel=add
  description: add a graphics console to a template
  request:
    body:
      parameterType: GraphicsConsole
      signatures:
      - mandatoryArguments:
          graphics_console.protocol: xs:string
- name: /templates/{template:id}/graphicsconsoles/{graphicsconsole:id}|rel=delete
  description: delete the graphics console for a template identified by the given id
- name: /templates/{template:id}/tags|rel=get
  description: get the list of tags added to the template
- name: /templates/{template:id}/tags/{tag:id}|rel=get
  description: get the details of the tag added to the template
- name: /templates/{template:id}/tags/{tag:id}|rel=delete
  description: delete a tag added to the template
- name: /templates/{template:id}/tags|rel=add
  description: add a new tag to the template
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.id|name: 'xs:string'}
        description: add a new tag to the virtual machine
- name: /users|rel=get
  description: get the list of all users registered in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /users/{user:id}|rel=get
  description: get the details of the specified user registered in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /users|rel=add
  description: add a new user to the system
  request:
    body:
      parameterType: User
      signatures:
      - mandatoryArguments: {user.user_name: 'xs:string', user.domain.id|name: 'xs:string'}
        optionalArguments: {user.namespace: 'xs:string', user.principal: 'xs:string'}
        description: add a new user to the specified domain with the specified user name
- name: /users/{user:id}|rel=delete
  description: delete the from the domain
- name: /users/{user:id}/permissions|rel=get
  description: get the list of all permissions for the user
- name: /users/{user:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission for the user
- name: /users/{user:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission for the user
- name: /users/{user:id}/permissions|rel=add
  description: add a new permission for the user
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.data_center.id: xs:string
        description: add a new role permission for the user on the data center
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.cluster.id: xs:string
        description: add a new role permission for the user on the cluster
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.host.id: xs:string
        description: add a new role permission for the user on the host
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.storage_domain.id: xs:string
        description: add a new role permission for the user on the storage domain
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.vm.id: xs:string
        description: add a new role permission for the user on the vm
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.vmpool.id: xs:string
        description: add a new role permission for the user on the vm pool
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.template.id: xs:string
        description: add a new role permission for the user on the template
- name: /users/{user:id}/roles|rel=get
  description: get the list of roles assigned to the user
- name: /users/{user:id}/roles/{role:id}|rel=get
  description: get the details of the specified role assigned to the user
- name: /users/{user:id}/roles/{role:id}/permits|rel=get
  description: get the list of permits for the role assigned to the user
- name: /users/{user:id}/roles/{role:id}/permits/{permit:id}|rel=get
  description: get the details of the specified permit for the role assigned to the user
- name: /users/{user:id}/roles/{role:id}/permits/{permit:id}|rel=delete
  description: delete the specified permit for the role assigned to the user
- name: /users/{user:id}/roles/{role:id}/permits|rel=add
  description: add a new permit for the role assigned to the user
  request:
    body:
      parameterType: Permit
      signatures:
      - mandatoryArguments: {permit.id|name: 'xs:string'}
        optionalArguments: {}
        description: add a new permit for the role assigned to the user
- name: /users/{user:id}/sshpublickeys|rel=get
  description: get the list of SSH public keys registered by the user
- name: /users/{user:id}/sshpublickeys/{sshpublickey:id}|rel=get
  description: get the details of the specified SSH public key registered by the user
- name: /users/{user:id}/sshpublickeys/{sshpublickey:id}|rel=delete
  description: delete the specified SSH public key registered by the use
- name: /users/{user:id}/sshpublickeys|rel=add
  description: register a new SSH public key for the user
  request:
    body:
      parameterType: SSHPublicKey
      signatures:
      - mandatoryArguments:
          ssh_public_key.id|name: xs:string
- name: /users/{user:id}/tags|rel=get
  description: get the list of tags attached to the user
- name: /users/{user:id}/tags/{tag:id}|rel=get
  description: get the details of the specified tag attached to the user
- name: /users/{user:id}/tags/{tag:id}|rel=delete
  description: delete the specified tag attached to the user
- name: /users/{user:id}/tags|rel=add
  description: add a new tag to the user
  request:
    body:
      parameterType: Tag
      signatures:
      - mandatoryArguments: {tag.id|name: 'xs:string'}
        description: add a new tag to the user
- name: /vmpools|rel=get
  description: get the list of all virtual machine pools in the system
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /vmpools/{vmpool:id}|rel=get
  description: get the details of the specified virtual machine pool in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /vmpools/{vmpool:id}|rel=delete
  description: delete the specified virtual machine pool in the system
- name: /vmpools/{vmpool:id}|rel=update
  description: update the specified virtual machine pool in the system
  request:
    body:
      parameterType: VmPool
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {vmpool.cluster.id|name: 'xs:string', vmpool.template.id|name: 'xs:string',
          vmpool.name: 'xs:string', vmpool.comment: 'xs:string', vmpool.size: 'xs:int', vmpool.max_user_vms: 'xs:int', vmpool.display.proxy: 'xs:string',
          vmpool.description: 'xs:string'}
        description: update the specified virtual machine pool in the system
- name: /vmpools/{vmpool:id}/allocatevm|rel=allocatevm
  description: attach the user to a vm from the vmpool and run the vm
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
- name: /vmpools|rel=add
  description: add anew vm pool to the system
  request:
    body:
      parameterType: VmPool
      signatures:
      - mandatoryArguments: {vmpool.cluster.id|name: 'xs:string', vmpool.template.id|name: 'xs:string',
          vmpool.name: 'xs:string'}
        optionalArguments: {vmpool.comment: 'xs:string', vmpool.size: 'xs:int', vmpool.max_user_vms: 'xs:int', vmpool.display.proxy: 'xs:string',
          vmpool.description: 'xs:string', vmpool.soundcard_enabled: 'xs:boolean', vmpool.type: 'xs:string'}
        description: add a new vm pool to the system
- name: /vmpools/{vmpool:id}/permissions|rel=get
  description: get the list of permissions for the specified vm pool
- name: /vmpools/{vmpool:id}/permissions/{permission:id}|rel=get
  description: get the details of the specified permission on the vm pool
- name: /vmpools/{vmpool:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission on the vm pool
- name: /vmpools/{vmpool:id}/permissions|rel=add
  description: add a new permission on the vm pool
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id|name: xs:string
          permission.role.id: xs:string
        description: add a new user level permission on the vm pool
      - mandatoryArguments:
          permission.role.id|name: xs:string
          permission.group.id: xs:string
        description: add a new group level permission on the vm pool
- name: /clusters/{cluster:id}/glustervolumes|rel=get
  description: get the list of gluster volumes attached to the cluster
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: 'search query', required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes|rel=add
  description: add a new gluster volume to the cluster
  request:
    body:
      parameterType: GlusterVolume
      signatures:
      - mandatoryArguments:
          gluster_volume.name: 'xs:string'
          gluster_volume.volume_type: 'xs:string'
          gluster_volume.bricks.brick--COLLECTION: {brick.server_id: 'xs:string', brick.brick_dir: 'xs:string'}
        optionalArguments:
          gluster_volume.transport_types--COLLECTION: {transport_type: 'xs:string'}
          gluster_volume.replica_count: 'xs:unsignedShort'
          gluster_volume.stripe_count: 'xs:unsignedShort'
          gluster_volume.options.option--COLLECTION: {option.name: 'xs:string', option.value: 'xs:string'}
        description: add a new gluster volume to the cluster with bricks
    urlparams:
      force: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/start|rel=start
  description: start the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.force: xs:boolean
        description: start the gluster volume attached to the cluster with an optional argument to force the operation
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/stop|rel=stop
  description: stop the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.force: xs:boolean
        description: stop the gluster volume attached to the cluster with an optional argument to force the operation
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/rebalance|rel=rebalance
  description: invoke the rebalance command on the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          action.fix_layout: xs:boolean
          action.force: xs:boolean
        description: invoke the rebalance command on the gluster volume attached to the cluster with optional arguments to fix the lay and force the operation
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/stoprebalance|rel=stoprebalance
  description: invoke the stop rebalance command on the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: invoke the stop rebalance command on the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/setoption|rel=setoption
  description: set an option for the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.option.name: xs:string
          action.option.value: xs:string
        optionalArguments: {}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/resetoption|rel=resetoption
  description: reset an option for the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.option.name: 'xs:string', action.force: 'xs:boolean'}
        description: reset an option for the gluster volume attached to the cluster with mandatory option to force the operation
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/resetalloptions|rel=resetalloptions
  description: resets all options for the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: resets all options for the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/startprofile|rel=startprofile
  description: start profile on the gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: start profiling on the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/stopprofile|rel=stopprofile
  description: stop the profiling of gluster volume attached to the cluster
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
        description: stop profiling on the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/profilestatistics|rel=get
  description: get the profiling statistics once profiling is turned on for a volume
  request:
    urlparams:
      nfsStatistics: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks|rel=get
  description: get the list of all bricks in the gluster volume attached to the cluster
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks|rel=add
  description: add a new brick to the gluster volume attached to the cluster
  request:
    body:
      parameterType: Bricks
      signatures:
      - mandatoryArguments:
          brick--COLLECTION: {brick.server_id: 'xs:string', brick.brick_dir: 'xs:string'}
        optionalArguments: {replica_count: 'xs:unsignedShort', stripe_count: 'xs:unsignedShort'}
        description: add a new brick to the gluster volume attached to the cluster
    urlparams:
      force: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/{brick:id}|rel=get
  description: get the details of the specified brick in the gluster volume attached to the cluster
  request:
    headers:
      All-Content: {value: true|false, required: false}
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks|rel=delete
  description: delete the bricks in the gluster volume attached to the cluster
  request:
    body:
      parameterType: GlusterBricks
      signatures:
      - mandatoryArguments:
          bricks--COLLECTION: {brick.id: 'xs:string'}
        optionalArguments: {replica_count: 'xs:unsignedShort'}
        description: delete bricks in the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/migrate|rel=migrate
  description: migrate the data from the brick to others and mark for deletion
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.bricks--COLLECTION: {brick.name: 'xs:string'}
        description: migrate the data from the brick to others and mark for deletion
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/stopmigrate|rel=stopmigrate
  description: stops the bricks migration task started on on volume
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.bricks--COLLECTION: {brick.name: 'xs:string'}
        description: stops the bricks migration task started on on volume
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/activate|rel=activate
  description: activates the bricks post migration of data for reuse
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.bricks--COLLECTION: {brick.name: 'xs:string'}
        description: activates the bricks post migration of data for reuse
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/{brick:id}/replace|rel=replace #deprecated, replaced by 'migrate/delete'
  description: This is deprecated.Use migrate and delete instead.
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.brick.server_id: 'xs:string', action.brick.brick_dir: 'xs:string'}
        optionalArguments:
          action.force: xs:boolean
        description: replace the specified brick with a new brick directory in the gluster volume attached to the cluster
        deprecated: true
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/{brick:id}/statistics|rel=get
  description: get the statistics for the specified brick in the gluster volume attached to the cluster
- name: /clusters/{cluster:id}/glustervolumes/{glustervolume:id}/bricks/{brick:id}/statistics/{statistic:id}|rel=get
  description: get the details of the specified statistics for the brick in the gluster volume attached to the cluster
- name: /storagedomains/{storagedomain:id}/disks|rel=get
  description: get the list of all disks in the storage domain
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: query, required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/disks/{disk:id}|rel=get
  description: get the details of the specified disk in the storage domain
- name: /storagedomains/{storagedomain:id}/disks/{disk:id}|rel=delete
  description: delete the specified disk in the storage domain
- name: /storagedomains/{storagedomain:id}/disks|rel=add
  description: add a new disk to the storage domain
  request:
    body:
      parameterType: Disk
      signatures:
      - mandatoryArguments: {provisioned_size: 'xs:int', disk.interface: 'xs:string', disk.format: 'xs:string'}
        optionalArguments:
          disk.alias: xs:string
          disk.name: xs:string
          disk.size: xs:int #deprecated, replaced by 'provisioned_size'
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.disk_profile.id: xs:string
          disk.openstack_volume_type.name: xs:string
        description: add a new disk to the storage domain with the specified size allocating space from the storage domain
        #the signature below is for direct-LUN disk, which doesn't require size, but requires the lun id, the lun type, and the lun connection-details.
      - mandatoryArguments: {disk.interface: 'xs:string', disk.format: 'xs:string', disk.lun_storage.type: 'xs:string',
          disk.lun_storage.logical_unit--COLLECTION: {logical_unit.id: 'xs:string', logical_unit.address: 'xs:string', logical_unit.port: 'xs:int', logical_unit.target: 'xs:string'}}
        optionalArguments:
          disk.alias: xs:string
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.sgio: xs:string
        description: add a new lun disk to the storage domain
    urlparams:
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/disks|rel=get
  description: get the list of all disks in the storage domain in the data center
  request:
    urlparams:
      search: {context: query, type: 'xs:string', value: query, required: false}
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /storagedomains/{storagedomain:id}/disks/{disk:id}/export|rel=export
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/disks/{disk:id}|rel=get
  description: get the details of the specified disk in the storage domain in the data center
  request:
    urlparams:
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/disks/{disk:id}/export|rel=export
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {storagedomain.id|name: 'xs:string'}
    headers:
      Filter: {value: true|false, required: false}
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/disks/{disk:id}|rel=delete
  description: delete the specified disk from the storage domain in the data center
- name: /datacenters/{datacenter:id}/storagedomains/{storagedomain:id}/disks|rel=add
  description: add a new disk to the storage domain in the data center
  request:
    body:
      parameterType: Disk
      signatures:
      - mandatoryArguments: {provisioned_size: 'xs:int', disk.interface: 'xs:string', disk.format: 'xs:string'}
        optionalArguments:
          disk.alias: xs:string
          disk.name: xs:string
          disk.size: xs:int #deprecated, replaced by 'provisioned_size'
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.disk_profile.id: xs:string
          disk.openstack_volume_type.name: xs:string
        description: add a new disk with the specified size to the storage domain in the data center, allocating space from the storage domain
        #the signature below is for direct-LUN disk, which doesn't require size, but requires the lun id, the lun type, and the lun connection-details.
      - mandatoryArguments: {disk.interface: 'xs:string', disk.format: 'xs:string', disk.lun_storage.type: 'xs:string',
          disk.lun_storage.logical_unit--COLLECTION: {logical_unit.id: 'xs:string', logical_unit.address: 'xs:string', logical_unit.port: 'xs:int', logical_unit.target: 'xs:string'}}
        optionalArguments:
          disk.alias: xs:string
          disk.sparse: xs:boolean
          disk.description: xs:string
          disk.bootable: xs:boolean
          disk.shareable: xs:boolean
          disk.propagate_errors: xs:boolean
          disk.wipe_after_delete: xs:boolean
          disk.quota.id: xs:string
          disk.sgio: xs:string
        description: add a new lun disk to the storage domain in the data center
    urlparams:
      unregistered: {context: matrix, type: 'xs:boolean', value: true|false, required: false}

- name: /jobs|rel=get
  description: get the list of all external jobs in the system

- name: /jobs/{job:id}|rel=get
  description: get the details of the specified external job in the system

- name: /jobs|rel=add
  description: add a new external job to the system
  request:
    body:
      parameterType: Job
      signatures:
      - mandatoryArguments: {job.description: 'xs:string'}
        optionalArguments: {job.auto_cleared: 'xs:boolean'}
        description: add a new external job to the system

- name: /jobs/{job:id}/end|rel=end
  description: end the specified external job in the system
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.status.state: 'xs:string'}
        optionalArguments:
          action.force: xs:boolean
        description: end the specified external job in the system with an optional argument to force the operation

- name: /jobs/{job:id}/clear|rel=clear
  description: clear the specified external job in the system
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: clear the specified external job in the system

- name: /jobs/{job:id}/steps|rel=get
  description: get the list of all steps for the external job in the system

- name: /jobs/{job:id}/steps/{step:id}|rel=get
  description: get the details of the specified step in the external job

- name: /jobs/{job:id}/steps|rel=add
  description: add a new step to the external job
  request:
    body:
      parameterType: Step
      signatures:
      - mandatoryArguments: {step.type: 'xs:string' , step.description: 'xs:string'}
        optionalArguments: {step.job.id: 'xs:string', step.parent_step.id: 'xs:string'}
        description: add a new step to the external job

- name: /jobs/{job:id}/steps/{step:id}/end|rel=end
  description: invoke the command to end the specified step of an external job
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.succeeded: 'xs:boolean'}
        optionalArguments:
          action.force: xs:boolean
          action.status.state: xs:string
        description: invoke the command to end the specified step of an external job with an optional agrument to force the operation

- name: /jobs/{job:id}/steps/{step:id}/statistics|rel=get
  description: get the detailed step status for monitoring

- name: /jobs/{job:id}/steps/{step:id}/statistics/{statistic:id}|rel=get
  description: get the detail statistic for a given step

- name: /storageconnections|rel=get
  description: get the list of all storage connections in the system

- name: /storageconnections/{storageconnection:id}|rel=get
  description: get the details of the specified storage connection in the system

- name: /storageconnections/{storageconnection:id}|rel=delete
  description: delete the specified storage connection in the system
  request:
    body:
      required: false
      parameterType: Host
      signatures:
      - mandatoryArguments: {}
        optionalArguments:  {action.host.id|name: 'xs:string'}

- name: /storageconnections/{storageconnection:id}|rel=update
  description: update the specified storage connection in the system
  request:
    body:
      parameterType: StorageConnection
      signatures:
      - description: update the specified iSCSI storage connection in the system
        optionalArguments:
          storage_connection.password: xs:string
          storage_connection.port: xs:int
          storage_connection.target: xs:string
          storage_connection.username: xs:string
      - description: update the specified nfs storage connection in the system
        optionalArguments:
          storage_connection.address: xs:string
          storage_connection.nfs_retrans: xs:string
          storage_connection.nfs_timeo: xs:string
          storage_connection.nfs_version: xs:string
          storage_connection.path: xs:string
      - description: update the specified vfs storage connection in the system
        optionalArguments:
          storage_connection.address: xs:string
          storage_connection.mount_options: xs:string
          storage_connection.path: xs:string
          storage_connection.vfs_type: xs:string
      - description: update the specified local storage connection in the system
        optionalArguments:
          storage_connection.path: xs:string

- name: /storageconnections|rel=add
  description: add a new storage connection to the system
  request:
    body:
      parameterType: StorageConnection
      signatures:
      - description: add a iSCSI storage connection to the system
        mandatoryArguments:
          storage_connection.address: xs:string
          storage_connection.port: xs:int
          storage_connection.target: xs:string
          storage_connection.type: xs:string
        optionalArguments:
          storage_connection.password: xs:string
          storage_connection.username: xs:string
      - description: add a nfs storage connection to the system
        mandatoryArguments:
          storage_connection.address: xs:string
          storage_connection.path: xs:string
          storage_connection.type: xs:string
        optionalArguments:
          storage_connection.nfs_retrans: xs:string
          storage_connection.nfs_timeo: xs:string
          storage_connection.nfs_version: xs:string
      - description: add a vfs storage connection to the system
        mandatoryArguments:
          storage_connection.path: xs:string
          storage_connection.type: xs:string
          storage_connection.vfs_type: xs:string
        optionalArguments:
          storage_connection.address: xs:string
          storage_connection.mount_options: xs:string
      - description: add a local storage connection to the system
        mandatoryArguments:
          storage_connection.path: xs:string
          storage_connection.type: xs:string

- name: /clusters/{cluster:id}/glusterhooks|rel=get
- name: /clusters/{cluster:id}/glusterhooks/{glusterhook:id}|rel=get
- name: /clusters/{cluster:id}/glusterhooks/{glusterhook:id}|rel=delete
- name: /clusters/{cluster:id}/glusterhooks/{glusterhook:id}/enable|rel=enable
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
- name: /clusters/{cluster:id}/glusterhooks/{glusterhook:id}/disable|rel=disable
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
- name: /clusters/{cluster:id}/glusterhooks/{glusterhook:id}/resolve|rel=resolve
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {action.resolution_type: 'xs:string'}
        optionalArguments:
          action.host.id|name: xs:string

- name: /permissions|rel=get
  description: get the list of permissions on the system
- name: /permissions/{permission:id}|rel=get
  description: get the details of the permission on the system
- name: /permissions/{permission:id}|rel=delete
  description: delete the permission on the system
- name: /permissions|rel=add
  description: add a new permission on the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the system
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the system

- name: /instancetypes|rel=get
  description: get the list of instance types on the system
- name: /instancetypes/{instancetype:id}|rel=get
  description: get the details of the instance type on the system
- name: /instancetypes/{instancetype:id}|rel=delete
  description: delete the instance type from the system
- name: /instancetypes|rel=add
  description: add a new instance type to the system
  request:
    body:
      parameterType: InstanceType
      signatures:
      - mandatoryArguments: {instance_type.name: 'xs:string'}
        optionalArguments:
          instance_type.memory: xs:long
          instance_type.io.threads: xs:int
          instance_type.cpu.topology.cores: xs:int
          instance_type.high_availability.enabled: xs:boolean
          instance_type.origin: xs:string
          instance_type.high_availability.priority: xs:int
          instance_type.console.enabled: xs:boolean
          instance_type.description: xs:string
          instance_type.os.boot--COLLECTION: {boot.dev: 'xs:string'}
          instance_type.cpu.topology.sockets: xs:int
          instance_type.cpu_shares: xs:int
          instance_type.cpu.architecture: xs:string
          instance_type.display.type: xs:string
          instance_type.display.monitors: xs:int
          instance_typeay.single_qxl_pci: xs:boolean
          instance_type.display.smartcard_enabled: xs:boolean
          instance_type.usb.enabled: xs:boolean
          instance_type.usb.type: xs:string
          instance_type.migration_downtime: xs:int
          instance_type.virtio_scsi.enabled: xs:boolean
          instance_type.soundcard_enabled: xs:boolean
          instance_type.custom_emulated_machine: xs:string
          instance_type.custom_cpu_model: xs:string
        description: add a new instance type to the system
- name: /instancetypes/{instancetype:id}/graphicsconsoles|rel=get
  description: Get graphics consoles of an instance type.
- name: /instancetypes/{instancetype:id}/graphicsconsoles|rel=add
  description: add a graphics console to an instance type
  request:
    body:
      parameterType: GraphicsConsole
      signatures:
      - mandatoryArguments:
          graphics_console.protocol: xs:string
- name: /instancetypes/{instancetype:id}/graphicsconsoles/{graphicsconsole:id}|rel=delete
  description: delete the graphics console for an instance type identified by the given id

- name: /clusters/{cluster:id}/affinitygroups|rel=get
  description: get the list of affinity groups in the cluster
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}|rel=get
  description: get the details of the specified affinity group in the cluster
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}|rel=delete
  description: delete the specified affinity groups in the cluster
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}|rel=update
  description: update the specified affinity group in the cluster
  request:
    body:
      parameterType: affinitygroup
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {affinitygroup.name: 'xs:string', affinitygroup.positive: 'xs:boolean', affinitygroup.enforcing: 'xs:boolean'}
- name: /clusters/{cluster:id}/affinitygroups|rel=add
  description: add a new affinity group to the cluster
  request:
    body:
      parameterType: affinitygroup
      signatures:
      - mandatoryArguments: {affinitygroup.name: 'xs:string', affinitygroup.positive: 'xs:boolean', affinitygroup.enforcing: 'xs:boolean'}
        optionalArguments: {}
        description: add a new affinity group to the cluster
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}/vms|rel=get
  description: get the list of vms per affinity group
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}/vms/{vm:id}|rel=delete
  description: remove the specified vm from the affinity groups
- name: /clusters/{cluster:id}/affinitygroups/{affinitygroup:id}/vms|rel=add
  description: add a vm to the specified affinity group
  request:
    body:
      parameterType: VM
      signatures:
      - mandatoryArguments: {vm.id|name: 'xs:string'}
        optionalArguments: {}
        description: add a vm to affinity group
- name: /hosts/{host:id}/numanodes|rel=get
  description: get the list of NUMA nodes for the host
- name: /hosts/{host:id}/numanodes/{numanode:id}|rel=get
  description: get the details of the specified NUMA node for the host
- name: /hosts/{host:id}/numanodes/{numanode:id}/statistics|rel=get
  description: get the statistics for the specified NUMA node of the host
- name: /hosts/{host:id}/numanodes/{numanode:id}/statistics/{statistic:id}|rel=get
  description: get the details of the specified statistics for the specified NUMA node of the host
- name: /vms/{vm:id}/numanodes|rel=get
  description: get the list of virtual NUMA nodes for the vm
- name: /vms/{vm:id}/numanodes/{numanode:id}|rel=get
  description: get the details of the specified virtual NUMA node for the vm
- name: /vms/{vm:id}/numanodes/{numanode:id}|rel=delete
  description: delete the specified virtual NUMA node for the vm
- name: /vms/{vm:id}/numanodes/{numanode:id}|rel=update
  description: update the specified virtual NUMA node for the vm
  request:
    body:
      parameterType: VirtualNumaNode
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          vm_numa_node.index: xs:int
          vm_numa_node.memory: xs:string
          vm_numa_node.cpu.cores.core--COLLECTION: {core.index: 'xs:int'}
          vm_numa_node.numa_node_pins.numa_node_pin--COLLECTION: {numa_node_pin.index: 'xs:int'}
        description: update the specified virtual NUMA node for the vm
- name: /vms/{vm:id}/numanodes|rel=add
  description: add a new virtual NUMA node for the vm
  request:
    body:
      parameterType: VirtualNumaNode
      signatures:
      - mandatoryArguments: {vm_numa_node.index: 'xs:int', vm_numa_node.memory: 'xs:string', vm_numa_node.cpu.cores.core--COLLECTION: {core.index: 'xs:int'}}
        optionalArguments:
          vm_numa_node.numa_node_pins.numa_node_pin--COLLECTION: {numa_node_pin.index: 'xs:int'}
        description: add a new virtual NUMA node for the vm
- name: /schedulingpolicyunits|rel=get
  description: get a list of scheduling policy units in the system
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicyunits/{schedulingpolicyunit:id}|rel=get
  description: get the details of the specified scheduling policy unit in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicyunits/{schedulingpolicyunit:id}|rel=delete
  description: delete the specified disabled and external scheduling policy unit in the system
- name: /schedulingpolicies/{schedulingpolicy:id}|rel=update
  description: update the specified user defined scheduling policy in the system
  request:
    body:
      parameterType: SchedulingPolicy
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          schedulingpolicy.name: xs:string
          schedulingpolicy.description: xs:string
          schedulingpolicy.properties.property--COLLECTION: {property.name: 'xs:string', property.value: 'xs:string'}
        description: update the specified user defined scheduling policy in the system
- name: /schedulingpolicies|rel=get
  description: get a list of scheduling policies in the system
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}|rel=get
  description: get the details of the specified scheduling policy in the system
  request:
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}|rel=delete
  description: delete the specified user defined scheduling policy in the system
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: delete the specified user defined scheduling policy in the system
- name: /schedulingpolicies|rel=add
  description: add a new scheduling policy to the system
  request:
    body:
      parameterType: SchedulingPolicy
      signatures:
      - mandatoryArguments: {schedulingpolicy.name: 'xs:string'}
        optionalArguments:
          schedulingpolicy.description: xs:string
          schedulingpolicy.properties.property--COLLECTION: {property.name: 'xs:string', property.value: 'xs:string'}
        description: add a new scheduling policy to the system
- name: /schedulingpolicies/{schedulingpolicy:id}/filters|rel=get
  description: get a list of specified scheduling policy filters
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/filters/{filter:id}|rel=get
  description: get a specified scheduling policy filter
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/filters/{filter:id}|rel=delete
  description: delete a filter from specified user defined scheduling policy
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: delete the specified scheduling policy in the system
- name: /schedulingpolicies/{schedulingpolicy:id}/filters|rel=add
  description: add a filter to a specified user defined scheduling policy
  request:
    body:
      parameterType: Filter
      signatures:
      - mandatoryArguments: {filter.scheduling_policy_unit.id: 'xs:string'}
        optionalArguments:
          filter.scheduling_policy_unit.position: 'xs:int'
        description: add a new scheduling policy to the system
- name: /schedulingpolicies/{schedulingpolicy:id}/weights|rel=get
  description: get a list of specified scheduling policy weights
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/weights/{weight:id}|rel=get
  description: get a specified scheduling policy weight
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/weights/{weight:id}|rel=delete
  description: delete a weight from specified user defined scheduling policy
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: delete a weight from specified user defined scheduling policy
- name: /schedulingpolicies/{schedulingpolicy:id}/weights|rel=add
  description: add a weight to a specified user defined scheduling policy
  request:
    body:
      parameterType: Weight
      signatures:
      - mandatoryArguments: {weight.scheduling_policy_unit.id: 'xs:string'}
        optionalArguments:
          weight.scheduling_policy_unit.factor: 'xs:int'
        description: add a weight to a specified user defined scheduling policy
- name: /schedulingpolicies/{schedulingpolicy:id}/balances|rel=get
  description: get a list of specified scheduling policy balance modules
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/balances/{balance:id}|rel=get
  description: get a specified scheduling policy balance module
  request:
    urlparams:
      case_sensitive: {context: matrix, type: 'xs:boolean', value: true|false, required: false}
    headers:
      Filter: {value: true|false, required: false}
- name: /schedulingpolicies/{schedulingpolicy:id}/balances/{balance:id}|rel=delete
  description: delete a balance module from specified user defined scheduling policy
  request:
    body:
      required: false
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        description: delete a balance module from specified user defined scheduling policy
- name: /schedulingpolicies/{schedulingpolicy:id}/balances|rel=add
  description: add a balance module to a specified user defined scheduling policy
  request:
    body:
      parameterType: Balance
      signatures:
      - mandatoryArguments: {balance.scheduling_policy_unit.id: 'xs:string'}
        description: add a balance module to a specified user defined scheduling policy
- name: /datacenters/{datacenter:id}/iscsibonds|rel=get
  description: get all iSCSI Bonds for the specified datacenter
- name: /datacenters/{datacenter:id}/iscsibonds|rel=add
  description: add a new iSCSI Bond to the specified datacenter
  request:
    body:
      parameterType: IscsiBond
      signatures:
      - mandatoryArguments: {iscsibond.name: 'xs:string'}
        optionalArguments: {}
        description: add a new iSCSI Bond to the datacenter
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}|rel=update
  description: update the specified iSCSI Bond
  request:
    body:
     parameterType: IscsiBond
     signatures:
     - mandatoryArguments: {}
       optionalArguments: {}
       description: update the specified iSCSI Bond
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}|rel=delete
  description: remove the specified iSCSI Bond from the datacenter
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/networks|rel=delete
  description: remove the specified network from the iSCSI Bond
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/networks|rel=get
  description: gets the specified iSCSI Bond with the networks
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/networks|rel=add
  description: specify list of networks contained in the iSCSI Bond
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/storagedomains|rel=delete
  description: remove the specified storagedomain from the iSCSI Bond
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/storagedomains|rel=get
  description: gets the specified iSCSI Bond with the storagedomains
- name: /datacenters/{datacenter:id}/iscsibonds/{iscsibond:id}/storagedomains|rel=add
  description: specify list of the storagedomains contained in the iSCSI Bond
- name: /diskprofiles|rel=get
  description: get the list of all disk profiles in the system
- name: /diskprofiles/{diskprofile:id}|rel=get
  description: get the details of the specified disk profile in the system
- name: /diskprofiles/{diskprofile:id}|rel=delete
  description: delete the specified disk profile in the system
- name: /diskprofiles/{diskprofile:id}|rel=update
  description: update the specified disk profile in the system
  request:
    body:
      parameterType: DiskProfile
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {diskprofile.name: 'xs:string',
                           diskprofile.description: 'xs:string',
                           diskprofile.qos.id: 'xs:string'}
        description: update the specified disk profile in the system
- name: /diskprofiles|rel=add
  description: add a new disk profile to the system
  request:
    body:
      parameterType: DiskProfile
      signatures:
      - mandatoryArguments: {diskprofile.storagedomain.id: 'xs:string', diskprofile.name: 'xs:string'}
        optionalArguments: {diskprofile.description: 'xs:string',
                           diskprofile.qos.id: 'xs:string'}
        description: add a new disk profile to the system
- name: /diskprofiles/{diskprofile:id}/permissions|rel=get
  description: get the list of all permissions on the disk profile in the system
- name: /diskprofiles/{diskprofile:id}/permissions/{permission:id}|rel=get
  description: get details of the specified permission on the disk profile in the system
- name: /diskprofiles/{diskprofile:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission for the disk profile
- name: /diskprofiles/{diskprofile:id}/permissions|rel=add
  description: add a new permission on the disk profile in the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the disk profile in the system
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the disk profile in the system
- name: /storagedomains/{storagedomain:id}/diskprofiles|rel=get
  description: get the list of all disk profiles for the storage domain
- name: /storagedomains/{storagedomain:id}/diskprofiles/{diskprofile:id}|rel=get
  description: get the details of the specified disk profile for the storage domain
- name: /storagedomains/{storagedomain:id}/diskprofiles/{diskprofile:id}|rel=delete
  description: delete the specified disk profile for the storage domain
- name: /storagedomains/{storagedomain:id}/diskprofiles|rel=add
  description: add a new disk profile for the storage domain
  request:
    body:
      parameterType: DiskProfile
      signatures:
      - mandatoryArguments: {diskprofile.name: 'xs:string'}
        optionalArguments: {diskprofile.description: 'xs:string',
                           diskprofile.qos.id: 'xs:string'}
        description: add a new disk profile for the storage domain
- name: /cpuprofiles|rel=get
  description: get the list of all cpu profiles in the system
- name: /cpuprofiles/{cpuprofile:id}|rel=get
  description: get the details of the specified cpu profile in the system
- name: /cpuprofiles/{cpuprofile:id}|rel=delete
  description: delete the specified cpu profile in the system
- name: /cpuprofiles/{cpuprofile:id}|rel=update
  description: update the specified cpu profile in the system
  request:
    body:
      parameterType: CpuProfile
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {cpuprofile.name: 'xs:string',
                           cpuprofile.description: 'xs:string',
                           cpuprofile.qos.id: 'xs:string'}
        description: update the specified cpu profile in the system
- name: /cpuprofiles|rel=add
  description: add a new cpu profile to the system
  request:
    body:
      parameterType: CpuProfile
      signatures:
      - mandatoryArguments: {cpuprofile.cluster.id: 'xs:string', cpuprofile.name: 'xs:string'}
        optionalArguments: {cpuprofile.description: 'xs:string',
                           cpuprofile.qos.id: 'xs:string'}
        description: add a new cpu profile to the system
- name: /cpuprofiles/{cpuprofile:id}/permissions|rel=get
  description: get the list of all permissions on the cpu profile in the system
- name: /cpuprofiles/{cpuprofile:id}/permissions/{permission:id}|rel=get
  description: get details of the specified permission on the cpu profile in the system
- name: /cpuprofiles/{cpuprofile:id}/permissions/{permission:id}|rel=delete
  description: delete the specified permission for the cpu profile
- name: /cpuprofiles/{cpuprofile:id}/permissions|rel=add
  description: add a new permission on the cpu profile in the system
  request:
    body:
      parameterType: Permission
      signatures:
      - mandatoryArguments:
          permission.user.id: xs:string
          permission.role.id|name: xs:string
        description: add a new user level permission on the cpu profile in the system
      - mandatoryArguments:
          permission.group.id: xs:string
          permission.role.id|name: xs:string
        description: add a new group level permission on the cpu profile in the system
- name: /clusters/{cluster:id}/cpuprofiles|rel=get
  description: get the list of all cpu profiles for the cluster
- name: /clusters/{cluster:id}/cpuprofiles/{cpuprofile:id}|rel=get
  description: get the details of the specified cpu profile for the cluster
- name: /clusters/{cluster:id}/cpuprofiles/{cpuprofile:id}|rel=delete
  description: delete the specified cpu profile for the cluster
- name: /clusters/{cluster:id}/cpuprofiles|rel=add
  description: add a new cpu profile for the cluster
  request:
    body:
      parameterType: CpuProfile
      signatures:
      - mandatoryArguments: {cpuprofile.name: 'xs:string'}
        optionalArguments: {cpuprofile.description: 'xs:string',
                           cpuprofile.qos.id: 'xs:string'}
        description: add a new cpu profile for the cluster

- name: /operatingsystems|rel=get
  description: get the list of all Operating Systems
- name: /operatingsystems/{operatingsystem:id}|rel=get
  description: get the details of the specified Operating System

- name: /externalhostproviders|rel=get
  description: get the list of all external host providers in the system
- name: /externalhostproviders/{externalhostprovider:id}|rel=get
  description: get the details of the specified external host provider in the system
- name: /externalhostproviders/{externalhostprovider:id}|rel=delete
  description: delete the specified external host provider in the system
- name: /externalhostproviders/{externalhostprovider:id}|rel=update
  description: update the specified external host provider in the system
  request:
    body:
      parameterType: ExternalHostProvider
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          external_host_provider.name: xs:string
          external_host_provider.description: xs:string
          external_host_provider.requires_authentication: xs:boolean
          external_host_provider.username: xs:string
          external_host_provider.password: xs:string
        description: update the specified external host provider in the system
- name: /externalhostproviders|rel=add
  description: add a new external host provider to the system
  request:
    body:
      parameterType: ExternalHostProvider
      signatures:
      - mandatoryArguments:
          external_host_provider.name: xs:string
        optionalArguments:
          external_host_provider.description: xs:string
          external_host_provider.url: xs:string
          external_host_provider.requires_authentication: xs:boolean
          external_host_provider.username: xs:string
          external_host_provider.password: xs:string
        description: add a new external host provider to the system
- name: /externalhostproviders/{externalhostprovider:id}/testconnectivity|rel=testconnectivity
  description: test the connectivity to the external external host provider
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
- name: /externalhostproviders/{externalhostprovider:id}/importcertificates|rel=importcertificates
  description: import the SSL certificates of the external host provider
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          certificates.certificate--COLLECTION:
            content: xs:string
- name: /externalhostproviders/{externalhostprovider:id}/certificates|rel=get
  description: get the list of certificates of the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/certificates/{certificate:id}|rel=get
  description: get the details of the specified certificate of the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/hosts|rel=get
  description: get the list of hosts from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/hosts/{host:id}|rel=get
  description: get the details of the specified host from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/discoveredhosts|rel=get
  description: get the list of discovered hosts from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/discoveredhosts/{discoveredhost:id}|rel=get
  description: get the details of the specified discovered host from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/hostgroups|rel=get
  description: get the list of host groups from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/hostgroups/{hostgroup:id}|rel=get
  description: get the details of the specified host group from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/computeresources|rel=get
  description: get the list of compute resources from the external host provider
- name: /externalhostproviders/{externalhostprovider:id}/computeresources/{computeresource:id}|rel=get
  description: get the details of the specified compute resource from the external host provider

- name: /openstackimageproviders|rel=get
  description: get the list of all OpenStack image providers in the system
- name: /openstackimageproviders/{openstackimageprovider:id}|rel=get
  description: get the details of the specified OpenStack image provider in the system
- name: /openstackimageproviders/{openstackimageprovider:id}|rel=delete
  description: delete the specified OpenStack image provider in the system
- name: /openstackimageproviders/{openstackimageprovider:id}|rel=update
  description: update the specified OpenStack image provider in the system
  request:
    body:
      parameterType: OpenStackImageProvider
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          openstack_image_provider.name: xs:string
          openstack_image_provider.description: xs:string
          openstack_image_provider.requires_authentication: xs:boolean
          openstack_image_provider.username: xs:string
          openstack_image_provider.password: xs:string
          openstack_image_provider.authentication_url: xs:string
          openstack_image_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_image_provider.tenant_name: xs:string
        description: update the specified OpenStack image provider in the system
- name: /openstackimageproviders|rel=add
  description: add a new OpenStack image provider to the system
  request:
    body:
      parameterType: OpenStackImageProvider
      signatures:
      - mandatoryArguments:
          openstack_image_provider.name: xs:string
        optionalArguments:
          openstack_image_provider.description: xs:string
          openstack_image_provider.url: xs:string
          openstack_image_provider.requires_authentication: xs:boolean
          openstack_image_provider.username: xs:string
          openstack_image_provider.password: xs:string
          openstack_image_provider.authentication_url: xs:string
          openstack_image_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_image_provider.tenant_name: xs:string
        description: add a new OpenStack image provider to the system
- name: /openstackimageproviders/{openstackimageprovider:id}/images|rel=get
  description: get the list of images from the OpenStack image provider
- name: /openstackimageproviders/{openstackimageprovider:id}/images/{image:id}|rel=get
  description: get the details of the specified image from the OpenStack image provider
- name: /openstackimageproviders/{openstackimageprovider:id}/certificates|rel=get
  description: get the list of certificates of the OpenStack image provider
- name: /openstackimageproviders/{openstackimageprovider:id}/certificates/{certificate:id}|rel=get
  description: get the details of the specified certificate of the OpenStack image provider
- name: /openstackimageproviders/{openstackimageprovider:id}/testconnectivity|rel=testconnectivity
  description: test the connectivity to the external OpenStack imageprovider
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments: {}
        optionalArguments: {}
- name: /openstackimageproviders/{openstackimageprovider:id}/importcertificates|rel=importcertificates
  description: import the SSL certificates of the OpenStack image provider
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          certificates.certificate--COLLECTION:
            content: xs:string
- name: /openstackimageproviders/{openstackimageprovider:id}/images/{image:id}/import|rel=import
  description: imports the OpenStack image
  request:
    body:
      parameterType: Action
      signatures:
      - mandatoryArguments:
          action.storagedomain.id|name: xs:string
        optionalArguments:
          action.import_as_template: xs:boolean
          action.cluster.id|name: xs:string
          action.disk.alias|name: xs:string
          action.template.name: xs:string

- name: /openstackvolumeproviders|rel=get
  description: get the list of all OpenStack volume providers in the system
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}|rel=get
  description: get the details of the specified OpenStack volume provider in the system
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}|rel=delete
  description: delete the specified OpenStack volume provider in the system
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}|rel=update
  description: update the specified OpenStack volume provider in the system
  request:
    body:
      parameterType: OpenStackVolumeProvider
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          openstack_volume_provider.name: xs:string
          openstack_volume_provider.description: xs:string
          openstack_volume_provider.data_center.id|name: xs:string,
          openstack_volume_provider.requires_authentication: xs:boolean
          openstack_volume_provider.username: xs:string
          openstack_volume_provider.password: xs:string
          openstack_volume_provider.authentication_url: xs:string
          openstack_volume_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_volume_provider.tenant_name: xs:string
        description: update the specified OpenStack volume provider in the system
- name: /openstackvolumeproviders|rel=add
  description: add a new OpenStack volume provider to the system
  request:
    body:
      parameterType: OpenStackVolumeProvider
      signatures:
      - mandatoryArguments:
          openstack_volume_provider.name: xs:string
        optionalArguments:
          openstack_volume_provider.description: xs:string
          openstack_volume_provider.url: xs:string
          openstack_volume_provider.data_center.id|name: xs:string
          openstack_volume_provider.requires_authentication: xs:boolean
          openstack_volume_provider.username: xs:string
          openstack_volume_provider.password: xs:string
          openstack_volume_provider.authentication_url: xs:string
          openstack_volume_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_volume_provider.tenant_name: xs:string
        description: add a new OpenStack volume provider to the system
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/volumetypes|rel=get
  description: get the list of volume types of the OpenStack volume provider
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/volumetypes/{volumetype:id}|rel=get
  description: get the details of the specified volume type of the OpenStack volume provider
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/authenticationkeys|rel=get
  description: get the list of authentication keys of the OpenStack volume provider
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/authenticationkeys/{authenticationkey:id}|rel=get
  description: get the details of the specified authentication key of the OpenStack volume provider
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/authenticationkeys|rel=add
  description: add a new authentication key to the OpenStack volume provider
  request:
    body:
      parameterType: OpenstackVolumeAuthenticationKey
      signatures:
      - mandatoryArguments:
          openstack_volume_authentication_key.uuid: xs:string
          openstack_volume_authentication_key.value: xs:string
          openstack_volume_authentication_key.usage_type: xs:string
        optionalArguments:
          openstack_volume_authentication_key.description: xs:string
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/authenticationkeys/{authenticationkey:id}|rel=update
  description: update the specified authentication key
  request:
    body:
      parameterType: OpenstackVolumeAuthenticationKey
      signatures:
      - optionalArguments:
          openstack_volume_authentication_key.value: xs:string
          openstack_volume_authentication_key.usage_type: xs:string
          openstack_volume_authentication_key.description: xs:string
- name: /openstackvolumeproviders/{openstackvolumeprovider:id}/authenticationkeys|rel=delete
  description: delete the specified authentication key

- name: /openstacknetworkproviders|rel=get
  description: get the list of all OpenStack network providers in the system
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}|rel=get
  description: get the details of the specified OpenStack network provider in the system
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}|rel=delete
  description: delete the specified OpenStack network provider in the system
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}|rel=update
  description: update the specified OpenStack network provider in the system
  request:
    body:
      parameterType: OpenStackNetworkProvider
      signatures:
      - mandatoryArguments: {}
        optionalArguments:
          openstack_network_provider.name: xs:string
          openstack_network_provider.description: xs:string
          openstack_network_provider.requires_authentication: xs:boolean
          openstack_network_provider.username: xs:string
          openstack_network_provider.password: xs:string
          openstack_network_provider.authentication_url: xs:string
          openstack_network_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_network_provider.tenant_name: xs:string
        description: update the specified OpenStack network provider in the system
- name: /openstacknetworkproviders|rel=add
  description: add a new OpenStack network provider to the system
  request:
    body:
      parameterType: OpenStackNetworkProvider
      signatures:
      - mandatoryArguments:
          openstack_network_provider.name: xs:string
        optionalArguments:
          openstack_network_provider.description: xs:string
          openstack_network_provider.url: xs:string
          openstack_network_provider.requires_authentication: xs:boolean
          openstack_network_provider.username: xs:string
          openstack_network_provider.password: xs:string
          openstack_network_provider.authentication_url: xs:string
          openstack_network_provider.properties.property--COLLECTION:
            property.name: xs:string
            property.value: xs:string
          openstack_network_provider.tenant_name: xs:string
        description: add a new OpenStack network provider to the system
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}/networks|rel=get
  description: get the list of networks from the OpenStack network provider
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}/networks/{network:id}|rel=get
  description: get the details of the specified network from the OpenStack network provider
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}/networks/{network:id}/subnets|rel=get
  description: get the list of sub-networks from the OpenStack network provider
- name: /openstacknetworkproviders/{openstacknetworkprovider:id}/networks/{network:id}/subnets/{subnet:id}|rel=get
  description: get the details of the specified sub-network from the OpenStack network provider
- name: /katelloerrata|rel=get
  description: get the list of errata available for the system
- name: /katelloerrata/{katelloerratum:id}|rel=get
  description: get the details of the specific erratum available for the system
- name: /datacenters/{datacenter:id}/quotas|rel=get
  description: get a list of Quotas for specified Data Center
- name: /datacenters/{datacenter:id}/quotas/{quota:id}|rel=get
  description: get the details of the specified Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}|rel=delete
  description: delete the specified quota in the system
- name: /datacenters/{datacenter:id}/quotas|rel=add
  request:
    body:
      parameterType: Quota
      signatures:
      - mandatoryArguments:
          quota.name: xs:string
        optionalArguments:
          quota.description: xs:string
          quota.cluster_soft_limit_pct: xs:int
          quota.cluster_hard_limit_pct: xs:int
          quota.storage_soft_limit_pct: xs:int
          quota.storage_hard_limit_pct: xs:int
        description: add a new Quota to a Data Center
- name: /datacenters/{datacenter:id}/quotas/{quota:id}|rel=update
  request:
    body:
      parameterType: Quota
      signatures:
      - optionalArguments:
          quota.name: xs:string
          quota.description: xs:string
          quota.cluster_soft_limit_pct: xs:int
          quota.cluster_hard_limit_pct: xs:int
          quota.storage_soft_limit_pct: xs:int
          quota.storage_hard_limit_pct: xs:int
        description: update the specified Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/storagequotalimits|rel=get
  description: get a list of storage limits of a Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/storagequotalimits/{storagequotalimit:id}|rel=get
  description: get a specified storage limit of a Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/storagequotalimits/{storagequotalimit:id}|rel=delete
  description: delete a storage limit from a Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/storagequotalimits|rel=add
  request:
    body:
      parameterType: StorageQuotaLimit
      signatures:
      - optionalArguments:
          storage_domain.id: xs:string
          limit: xs:long
        description: add a storage limit to a specified Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/clusterquotalimits/{clusterquotalimit:id}|rel=get
  description: get a specified cluster limit of a Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/clusterquotalimits/{clusterquotalimit:id}|rel=delete
  description: delete a cluster limit from a Quota
- name: /datacenters/{datacenter:id}/quotas/{quota:id}/clusterquotalimits|rel=add
  request:
    body:
      parameterType: ClusterQuotaLimit
      signatures:
      - optionalArguments:
          cluster_domain.id: xs:string
          limit: xs:long
        description: add a cluster limit to a specified Quota
