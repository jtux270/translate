# 
msgid ""
msgstr ""
"Project-Id-Version: Neutron Library Release Notes\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-18 09:26+0000\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"Language: ru\n"
"X-Generator: Zanata 4.3.3\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"

#: ../../<reno.sphinxext origin/stable/ocata>:147
msgid "1.0.0"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:5
msgid "1.1.0"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:207
msgid "1.10.0"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:159
msgid "1.11.0"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:73
msgid "1.12.0"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:5
msgid "1.13.0"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:233
msgid "1.14.0"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:169
msgid "1.15.0"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:139
msgid "1.16.0"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:89
msgid "1.17.0"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:5
msgid "1.18.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:394
msgid "1.19.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:351
msgid "1.2.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:330
msgid "1.20.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:254
msgid "1.21.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:215
msgid "1.22.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:157
msgid "1.23.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:133
msgid "1.24.0"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:5
msgid "1.25.0"
msgstr ""

#: ../../<reno.sphinxext stable/train>:166
msgid "1.26.0"
msgstr ""

#: ../../<reno.sphinxext stable/train>:126
msgid "1.27.0"
msgstr ""

#: ../../<reno.sphinxext stable/train>:59
msgid "1.28.0"
msgstr ""

#: ../../<reno.sphinxext stable/train>:23
msgid "1.29.0"
msgstr ""

#: ../../<reno.sphinxext stable/train>:5
msgid "1.29.1"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:302
msgid "1.3.0"
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:84
msgid "1.30.0"
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:52
msgid "1.31.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:265
msgid "1.4.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:202
msgid "1.5.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:183
msgid "1.6.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:168
msgid "1.7.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:91
msgid "1.8.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:20
msgid "1.9.0"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:5
msgid "1.9.1"
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:26
msgid "2.0.0"
msgstr ""

#: ../../<reno.sphinxext branch>:129 current
msgid "2.11.0"
msgstr ""

#: ../../<reno.sphinxext branch>:99 current
msgid "2.12.0"
msgstr ""

#: ../../<reno.sphinxext branch>:70 current
msgid "2.13.0"
msgstr ""

#: ../../<reno.sphinxext branch>:5 current
msgid "2.13.0-13"
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:5
msgid "2.2.0"
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:99
msgid "2.4.0"
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:49
msgid "2.5.0"
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:5
msgid "2.6.0"
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:68
msgid "2.7.0"
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:46
msgid "2.8.0"
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:22
msgid "2.9.0"
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:5
msgid "2.9.1"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:29
msgid ""
"A VIF type for Agilio OVS (``VIF_TYPE_AGILIO_OVS``) has been added to "
"portbindings. This links the external Neutron plugin to the external OS-VIF "
"plugin in Nova."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:192
msgid ""
"A bulk of the ``neutron.api.v2.attributes`` functionality is now available "
"in ``neutron_lib.api.attributes``. A new ``AttributeInfo`` class is "
"available in that acts as a wrapper for an API resource's attribute dict and "
"allows consumers to perform operations with the underlying attribute dict. "
"The ``populate_project_info`` function is now available. The global "
"attribute map ``RESOURCES`` is now available and will take the place of "
"neutron's global ``RESOURCE_ATTRIBUTE_MAP``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:361
msgid ""
"A class called ``FilterObj`` is introduced. This is the base class from "
"which the custom filter class should inherit. This release also implements "
"two filter class: ``NotIn`` and ``NotEqual``. The class "
"``StringMatchingFilterObj`` is now a subclass of ``FilterObj``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:80
msgid ""
"A converter ``convert_ip_to_canonical_format`` has been added to neutron-lib "
"which allows IPv6 addresses to be stored and displayed in canonical format."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:246
msgid ""
"A new API validation type ``type:availability_zone_hint_list`` has been "
"added and validates a list of availability zone hints."
msgstr ""

#: ../../<reno.sphinxext stable/train>:36
msgid ""
"A new API validation type ``type:ethertype`` has been added and validates "
"ethertypes either as a valid two byte octet or as 'IPv4' and 'IPv6' based on "
"the sg_filter_ethertypes configuration setting."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:87
msgid ""
"A new ``PORT_BINDING`` resource definition has been added to ``neutron_lib."
"callbacks.resources``, to enable the multiple port binding service plugin to "
"notify the core plugin and other subscribers when create, update and delete "
"operations are performed on a port binding."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:302
msgid ""
"A new ``dict_populate_defaults`` flag can be used in API definition for a "
"dictionary attribute, which will results in default values for the keys to "
"be filled in. This can also be used on values of a dictionary attribute if "
"they are dictionaries as well."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:360
msgid ""
"A new ``neutron_lib.exceptions`` package is now available where the existing "
"definitions from the ``exceptions`` module are now in ``neutron_lib."
"exceptions.__init__`` and subsequent per-component exceptions can be created "
"in their own exceptions sub-module."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:100
msgid ""
"A new ``neutron_lib.validators`` package is now available where the existing "
"definitions from the ``validators`` module are now in ``neutron_lib."
"validators.__init__`` and subsequent per-component validators can be created "
"in their own validators sub-module."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:178
msgid ""
"A new ``type:service_plugin_type`` validator has been added that allows a "
"service plugin to be validated at runtime by checking the ``neutron_lib."
"plugins.directory``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:91
msgid ""
"A new abstract method ``ha_state_change`` has been added to "
"``L3AgentExtension``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:216
msgid ""
"A new converter ``convert_to_string`` into ``neutron_lib.api.converters``. "
"This method can convert an argument which is not None into string value."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:215
msgid ""
"A new converter is added to facilitate converting IPv6 CIDRs to canonical "
"format. This way IPv6 CIDRs can be specified in multiple formats but would "
"be handled in their canonical format."
msgstr ""

#: ../../<reno.sphinxext stable/train>:68
msgid ""
"A new exception named ``NetworkAddressScopeAffinityError`` has been added in "
"neutron_lib/exceptions/address_scope.py. This is to be raised by consumers "
"when network / address scope affinity constraints are violated on subnet "
"creation and subnet pool updates."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:111
msgid ""
"A new fixture for testing placement API calls has been added as "
"``neutron_lib.fixtures.PlacementAPIClientFixture``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:274
msgid ""
"A new fixture for testing with neutron-lib API definitions has been added as "
"``neutron_lib.fixtures.APIDefinitionFixture``. This fixture can be used "
"anytime extension plugins are being tested that modify resource attribute "
"maps and ensures the single global API definition attribute map is copied "
"and restored."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:325
msgid ""
"A new fixture named ``DBQueryHooksFixture`` is provided for testing purposes "
"allowing consumers to patch-out the model_query filter hooks."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:283
msgid ""
"A new flag can be used in API definition: ``default_overrides_none``. When "
"enabled, the default value for the attribute will be used, including if the "
"attribute was explicitly defined as ``null``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:229
msgid ""
"A new function named ``validate_route_cidr`` was introduced which is used to "
"validate if ``destination`` of ``routes`` and ``destination`` of "
"``host_routes`` is a network address of a destination subnet or an IP "
"address of a destination."
msgstr ""

#: ../../<reno.sphinxext stable/train>:135
msgid ""
"A new method ``retrieve_valid_sort_keys`` was added to ``neutron_lib.api."
"attributes``. This method can help retrieve valid sort keys from a given "
"resource attribute map."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:235
msgid ""
"A new validator ``validate_any_key_specs_or_none`` has been added for the "
"corresponding validation type ``type:list_of_any_key_specs_or_none``. This "
"validator can be used to check that a list of dicts match at least 1 key "
"spec allowing consumers the ability to define multiple formats for their "
"validated data."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:378
msgid ""
"A new validator for type ``type:list_of_subnets_or_none`` to validate data "
"is a list of subnet dicts or ``None`` is added too."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:82
msgid ""
"A new vnic type ``vdpa`` has been added to allow requesting port that "
"utilize a vhost-vdpa offload. vhost-vdpa is simpler to vhost-user or kernel "
"vhost offload but utilizes the newly added vdpa bus introduced in the Linux "
"5.7 kernel. vdpa interface can be implemented in software or hardware, when "
"implemented in hardware they provide equivalent performance to sr-iov or "
"hardware offloaded ovs while have two main advantages over both sriov and "
"hardware offloaded ovs. Unlike the alternatives vhost-vdpa enable live "
"migration of instance transparently and provides a standard virtio-net "
"interface to the guest avoiding the need to install vendor specific drivers  "
"in the guest."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:60
msgid ""
"A test fixture is provided for isolating the global callback manager in "
"``neutron_lib.callbacks.registry``. For more details see the comments in "
"``neutron_lib.fixture.CallbackRegistryFixture``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:319
msgid ""
"API definition and reference documentation for the port data plane status "
"extension."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:370
msgid "API definition for the ``networking-bgpvpn`` extension."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:46
msgid ""
"API definition for the logging extension for ``security_group`` resource."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:74
msgid ""
"API extension ``filter-validation`` relies on the ``is_filter`` keyword in "
"the ``RESOURCE_ATTRIBUTE_MAP`` to judge if an attribute can be used as "
"filter. Neutron plugins which want to support filter validation needs to set "
"``is_filter`` to ``True`` for each attribute in their resource attribute map."
""
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:66
msgid ""
"API extension ``sort-key-validation`` relies on the ``is_sort_key`` keyword "
"in the ``RESOURCE_ATTRIBUTE_MAP`` to judge if an attribute can be used as "
"sort key. Neutron plugins which want to support sort key validation needs to "
"set ``is_sort_key`` to ``True`` for each attribute in their resource "
"attribute map."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:387
msgid ""
"API reference and definition for networking-midonet's ``fip64`` extension."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:399
msgid ""
"API reference and definition for networking-midonet's ``logging-resource`` "
"extension."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:403
msgid ""
"API reference and definition for networking-midonet's ``router-interface-"
"fip`` extension."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:225
msgid ""
"API reference for ``extended port bindings`` extension for ``port`` resource."
""
msgstr ""

#: ../../<reno.sphinxext stable/pike>:311
msgid "API reference for the ``networking-bgpvpn`` extension."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:124
msgid ""
"API reference for the logging extension for ``security_group`` resource."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:175
msgid "API reference for the trunk extension."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:236
msgid "Add API definition for the new ``network-segment-range`` extension."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:108
msgid ""
"Add API extension ``dns-integration-domain-keywords``. This extension "
"indicates if the server supports usage of keywords like ``project_id``, "
"``project_name``, ``user_id`` and ``user_name`` in the network's DNS domain "
"name."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:19
msgid ""
"Add API extension ``filter-validation``. This extension indicates if the "
"server supports validation on filter parameters of the list requests."
msgstr ""

#: ../../<reno.sphinxext branch>:31 current
msgid ""
"Add API extension ``port-resource-request-groups``. This extension indicates "
"that Neutron supports requesting multiple groups of resources and traits "
"from the same RP subtree in ``resource_request``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:14
msgid ""
"Add API extension ``sort-key-validation``. This extension indicates if the "
"server supports validation on sorting."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:209
msgid ""
"Add API extensions to advertise the support of standard attributes with "
"BGPVPN resources: ``standard-attr-bgpvpn``, ``standard-attr-bgpvpn-network-"
"association``, ``standard-attr-bgpvpn-router-association`` and ``standard-"
"attr-bgpvpn-port-association``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:96
msgid ""
"Add ``ETHERTYPE_RARP`` constant which represents RARP protocol to support "
"live-migration."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:14
msgid ""
"Add ``NetworkSegmentRangeOverlaps`` exception to prevent overlapping network "
"segment ranges on creation."
msgstr ""

#: ../../<reno.sphinxext stable/train>:261
msgid ""
"Add ``NoAuthClient`` for placement.client to enable fullstack testing of "
"placement reporting service plugin."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:263
msgid ""
"Add ``can_port_be_bound_to_virtual_bridge`` function in ``neutron_lib."
"plugins.utils``. This function checks if a port, depending on the VNIC type, "
"can be bound to a virtual bridge."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:178
msgid ""
"Add ``empty-string-filtering`` API extension. This extension indicates if "
"the server supports filtering attributes with empty value."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:270
msgid ""
"Add ``fip-port-details`` API extension. This extension add ``port_details`` "
"attribute to the Floating IP resource."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:98
msgid ""
"Add ``floatingip-pools`` API extension. This extension provides API endpoint "
"for listing floatingip pools."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:14
msgid ""
"Add ``ip-substring-filtering`` API extension. This extension provides the "
"ability to filter ports with an IP address substring."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:23
msgid ""
"Add ``list_allocations``, ``update_allocation`` and "
"``update_qos_minbw_allocation`` methods."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:248
msgid "Add ``smart-nic`` VNIC type for Smart NIC ports."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:28
msgid ""
"Add ``source_ip_prefix`` and ``destination_ip_prefix`` to Neutron metering "
"label rules."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:74
msgid ""
"Add ``supported_extensions`` method to ``MechanismDriver``. This method "
"provides an standard API to implement, per mechanism driver, a way to filter "
"the supported extensions. By default, this method will return the same set "
"of extensions passed."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:197
msgid ""
"Add a ``convert_uppercase_ip`` converter, convenient to easily accept for "
"instance ``Ipv4``, ``IPv4`` and ``ipv4`` independently of the case of the "
"first two letters."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:205
msgid ""
"Add a ``uuid_list_non_empty`` validator, that will validate that the value "
"is a non-empty list of UUIDs"
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:93
msgid ""
"Add a new field ``description`` in floating ip portforwardings that can be "
"used to help users to manage/find easily theirs rules."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:252
msgid ""
"Add a new keyword ``is_filter`` to attribute maps. This keyword indicates "
"that the attribute can be used for filtering result on list requests."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:257
msgid ""
"Add a new keyword ``is_sort_key`` to attribute maps. This keyword indicates "
"that the attribute can be used as a sort key for sorting list result."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:132
msgid ""
"Add a shim extension ``availability_zone_filter`` to indicate if "
"``availability_zone`` resource supports filter parameters."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:162
msgid ""
"Add a shim extension ``standard-attr-segment`` to indicate if segment "
"resource contains standard attributes."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:58
msgid ""
"Add an API extension ``address-groups`` that enables users to aggregate IP "
"address blocks into an address group object which can be later referenced "
"when creating other resources."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:64
msgid ""
"Add an API extension ``security-groups-normalized-cidr`` that adds new, read-"
"only attribute ``normalized_cidr`` to the security group rules."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:14
msgid ""
"Add an API extension ``security-groups-remote-address-group`` that adds the "
"new field ``remote_address_group_id`` in security group rules. This allows "
"users to easily manage SG rules for aggregated IP address blocks."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:148
msgid ""
"Add an API extension ``uplink-status-propagation`` to indicate if the server "
"support propagating uplink status. This extension adds an attribute "
"``propagate_uplink_status`` to port. This attribute can be implemented for "
"VF port. If it is set to ``True``, the VF link state can follow that of PF. "
"The default is ``False`` which is the current behavior."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:55
msgid ""
"Add constants for RBAC sharing actions: ``ACCESS_SHARED``, "
"``ACCESS_EXTERNAL``, and a new action ``ACCESS_READONLY``."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:61
msgid ""
"Add field ``qos_port_network_policy_id`` to the ``port`` definition. This "
"read only parameter contains the QoS policy of the network where the port is "
"plugged."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:69
msgid ""
"Add keyword ``is_sort_key`` to agents. Make the agent's attribute can be "
"used as a sort key for sorting list result."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:269
msgid ""
"Add method ``get_values`` in ``neutron_lib.db.model_query``. This method "
"allow callers to fetch specific column from a database model. Add keyword "
"parameter ``field`` to method ``query_with_hooks``. The default value of "
"this parameter is None. Callers can set this parameter to query specific "
"column."
msgstr ""

#: ../../<reno.sphinxext stable/train>:248
msgid "Add new ``PORT_FORWARDING_FLOATINGIP_KEY`` constant."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:77
msgid ""
"Add new constant ``BROADCAST_MAC`` which has value ``FF:FF:FF:FF:FF:FF`` and "
"represents broadcast MAC address."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:410
msgid ""
"Add new extension `qos-gateway-ip` which extends the `router_gw_info` with "
"new attribute `qos_policy_id`."
msgstr ""

#: ../../<reno.sphinxext branch>:138 current
msgid ""
"Add new fields ``internal_port_range`` and ``external_port_range`` to allow "
"users to create port forwardings using port ranges instead of creating the "
"ports rules one by one."
msgstr ""

#: ../../<reno.sphinxext branch>:18 current
msgid ""
"Add possibility to define ``extraroutes`` with ``bfd_monitor``. The "
"extension makes it possible to define an ``extraroute`` with or without the "
"extra field ``bfd_monitor_id``. (``Note`` that this API extension was merged "
"as experimental to enable parallel development of multiple backends. At the "
"moment this API does not have a reference implementation and should not be "
"considered final. A later release note will mark when the reference "
"implementation gets merged and the feauture is ready to be consumed.)"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:101
msgid ""
"Add the ``neutron_lib.plugins.constants.NETWORK_SEGMENT_RANGE`` constant so "
"that it can be used elsewhere related to the ``network_segment_range`` "
"service plugin."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:14
msgid ""
"Add the ``neutron_lib.plugins.constants.PLACEMENT_REPORT`` constant so that "
"it can be used elsewhere related to the ``placement_report`` service plugin."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:193
msgid ""
"Add the definitions for the ``sfc`` and ``flowclassifier`` API extensions of "
"the networking-sfc project."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:501
msgid ""
"Add two fields ``columns`` and ``value`` to exception "
"``NeutronDbObjectDuplicateEntry``. These two fields are populated from the "
"corresponding db exception."
msgstr ""

#: ../../<reno.sphinxext branch>:37 current
msgid "Added API definition for QoS minimum packet rate rule."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:31
msgid ""
"Added API definition for ``rbac-address-group`` extension, which allows "
"sharing address groups between tenants via the network RBAC mechanism."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:14
msgid ""
"Added API definition for ``rbac-address-scope`` extension, which allows "
"sharing address scope between tenants via the network RBAC mechanism."
msgstr ""

#: ../../<reno.sphinxext branch>:79 current
msgid ""
"Added API definition for ``rbac-bgpvpn`` extension, which allows sharing "
"bgpvpn objects between tenants via the RBAC mechanism. With shared bgpvpn "
"the end-user will be able to manage router and network associations."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:19
msgid ""
"Added API definition for ``rbac-subnetpool`` extension, which allows sharing "
"subnetpool between tenants via the network RBAC mechanism."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:36
msgid ""
"Added VNIC types ``accelerator-direct`` and ``accelerator-direct-physical``. "
"Represents a port that supports any kind of hardware acceleration and is "
"provided by Cyborg (https://wiki.openstack.org/wiki/Cyborg). `RFE: 1909100 "
"<https://bugs.launchpad.net/neutron/+bug/1909100>`_."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:298
msgid ""
"Added ``PlacementAPIVersionIncorrect`` exception class which can be raised "
"when requested placement API version is incorect and doesn't support "
"requested API feature."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:294
msgid ""
"Added ``get_resource_provider`` function to the Placement API client, which "
"allows to retrieve an specific Resource Provider by its UUID."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:290
msgid ""
"Added ``list_resource_providers`` function to the Placement API client, "
"which allows to retrieve a list of Resource Providers filtering by UUID or "
"parent UUID. It requires at least version ``1.3`` of placement API for "
"listing resource providers that are members of any of the list of aggregates "
"provided. It requires at least version ``1.14`` of placement API for listing "
"nested resource providers."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:391
msgid ""
"Added hacking check ``N536``. This hacking check is added to the incubating "
"checks."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:68
msgid "Added the converter ``convert_string_to_case_insensitive``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:72
msgid "Added the converter ``convert_to_protocol``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:76
msgid "Added the validator ``validate_port_range_or_none``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:75
msgid "Added two new parameters in ``portbindings.port.vif_details``:"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:54
msgid "Added validator ``range_or_none``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:110
msgid "Added validator validate_ip_or_subnet_or_none"
msgstr ""

#: ../../<reno.sphinxext branch>:108 current
msgid ""
"Adding new API extension for QoS service plugin to allow CURD actions for "
"packet rate limit (packet per second) rule."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:238
msgid ""
"Address pair API definition exceptions are available in ``neutron_lib."
"exceptions.allowedaddresspairs``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:19
msgid ""
"Adds API definition for ``rbac-security-groups`` extension, which allows "
"sharing security groups between tenants via the network RBAC mechanism."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:370
msgid ""
"Adds ``neutron-vpnaas`` API definitions to neutron-lib, including "
"``vpnaas``, ``vpn-endpoint-groups`` and ``vpn-flavors``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:346
msgid "Adds ``subnet_onboard`` API definition to neutron-lib."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:32
msgid ""
"Adds ``subnetpool-prefix-ops`` API definition to neutron-lib. This extension "
"introduces API's that provide explicit support for removing prefixes from a "
"subnet pool and adding subnets to a subnet pool."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:103
msgid ""
"Adds api extension ``port-mac-address-regenerate``. Also adds converter "
"``convert_to_mac_if_none`` used by api extenstion ``port-mac-address-"
"regenerate``. When passing ``'null'`` (``None``) as the ``mac_address`` on "
"port update the converter will generate a new mac address that will be "
"assigned to the port. `RFE:  #1768690 <https://bugs.launchpad.net/neutron/"
"+bug/1768690>`_."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:54
msgid ""
"Adds api-extension ``segments-peer-subnet-host-routes``. Adds host routes to "
"subnets on a routed network (segments). `RFE: 1766380 <https://bugs."
"launchpad.net/neutron/+bug/1766380>`_."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:28
msgid ""
"Adds definition of ``interconnection`` API extension for neutron-"
"interconnection project."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:64
msgid "Adds neutron-fwaas API definitions to neutron-lib."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:24
msgid ""
"Adds new L3 exception ``RouterNotFoundInRouterFactory`` in ``neutron_lib."
"exceptions.l3``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:224
msgid ""
"Adds new traffic control exceptions ``TcLibQdiscNeededArguments`` and "
"``TcLibQdiscTypeError`` in ``neutron-lib.exceptions.qos``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:374
msgid "Adds new validator ``validate_list_of_regex_or_none``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:82
msgid ""
"Adds the IP-in-IP protocol under the name ``ipip`` to the list of protocols "
"supported in security group rules."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:70
msgid "Adds traffic control related constants:"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:139
msgid ""
"All methods defined in ``APIExtensionDescriptor`` are now class methods. "
"This allows consumers to call them without a reference to an actual "
"extension object instance."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:201
msgid ""
"And add a ``convert_prefix_forced_case`` converter, to allow forcing the "
"case of a string prefix"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:85
msgid ""
"Any plugin which forks worker processes from neutron-server will have its "
"proctitle set to \"neutron-server\" plus a classname in ps output. Any tool "
"used for monitoring/maintenance that watches the process table should be "
"modified to only look for the string ``neutron-server``. On the plus side, "
"it will now be possible to distinguish which process belongs to which "
"plugin, based on the new naming. Note that the original process string is "
"still in the proctitle, so as long as the scripting is not looking for a "
"perfect string match, it should continue to work."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:95
msgid ""
"Base class for upgrade checks used in checks in ``neutron-status upgrade "
"check`` tool is now available in ``neutron_lib.utils.upgrade_checks`` and "
"can be reused by other projects."
msgstr ""

#: ../../<reno.sphinxext branch>:58 current stable/pike>:81 stable/pike>:292
#: stable/queens>:145 stable/queens>:192 stable/rocky>:219 stable/rocky>:416
#: stable/stein>:185 stable/stein>:284 stable/stein>:370 stable/stein>:481
#: stable/train>:46 stable/train>:102 stable/victoria>:127
msgid "Bug Fixes"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:201
msgid ""
"Bug `1720046 <https://bugs.launchpad.net/neutron/+bug/1720046>`_ is fixed by "
"reverting the logic of ``neutron_lib.utils.net.get_random_mac`` to its "
"original behavior from commit `If2539f94b5479f0d6afa64c973082cbe8c5309ac "
"<https://review.openstack.org/#/c/400408/>`_."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:149
msgid ""
"Bug `1738371 <https://bugs.launchpad.net/neutron/+bug/1738371>`_ is fixed by "
"comparing min port and max port in port range specification as integers "
"instead of strings, during port range validation."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:374
msgid ""
"Bug `1796854 <https://bugs.launchpad.net/neutron/+bug/1796854>`_ is fixed by "
"validating if advsvc context is used."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:507
msgid ""
"Bump ``PlacementAPIClient's`` max supported microversion to ``1.20``, as "
"from that microversion placement API returns json body for POST /"
"resource_providers."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:20
msgid ""
"Bump ``PlacementAPIClient's`` max supported microversion to ``1.28``, as "
"from that version ``allocations`` API handles generations in a general way."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:73
msgid ""
"Bump the microversion used by ``PlacementAPIClient`` from ``1.20`` to ``1."
"23`` in order to have access to the ``code`` attribute of JSON error "
"responses (`Placement API changelog <https://docs.openstack.org/placement/"
"latest/placement-api-microversion-history.html#include-code-attribute-in-"
"json-error-responses>`_). Both ``1.20`` and ``1.23`` were released in the "
"``Rocky`` version of Placement therefore we expect no upgrade impact."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:386
msgid ""
"Change API to enforce policy rules for subnet entities with specified "
"segment_ids, to fix a broken implementation of that policy enforcement. Bug: "
"`1784259 <https://bugs.launchpad.net/neutron/+bug/1784259>`_"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:242
msgid ""
"Change create_inventory in placement client to "
"update_resource_provider_inventories and update_inventory to "
"update_resource_provider_inventory"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:424
msgid "Change the POST call to /resource_providers/{uuid}/inventories to PUT."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:420
msgid ""
"Change the method name create_inventory in clients/placement.py to "
"update_resource_provider_inventories as that represents what is on the "
"placement side."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:428
msgid ""
"Change the method name update_inventory in clients/placement.py to "
"update_resource_provider_inventory as that represents that the method "
"updates the inventory of a resource_provider."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:128
msgid ""
"Constants from ``neutron.common.constants`` are now available in neutron-lib."
" Note that consumers using ``ROUTER_STATUS_ACTIVE`` or "
"``ROUTER_STATUS_ERROR`` should now just use ``ACTIVE`` and ``ERROR`` from "
"``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:402
msgid ""
"Consumers using the global ``context_manager`` from ``neutron.db.api`` "
"should now use the ``get_context_manager()`` function in the ``neutron_lib."
"db.api`` module or the global ``CONTEXT_READER`` and ``CONTEXT_WRITER`` if "
"needed."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:70
msgid ""
"Contexts may now have transaction constraints set on them to be enforced by "
"the revision plugin in Neutron for generalized compare-and-swap updates. "
"Calling ``set_transaction_constraint`` on the context before performing a "
"resource mutation will setup the constraint. This is also exposed to users "
"via the HTTP API with ``if-match`` headers and the API layer sets the "
"constraint on the context."
msgstr ""

#: ../../<reno.sphinxext branch>:22 current
msgid ""
"Definition for API extension: ``multiple-external-gateways``. This API "
"definition was merged as experimental to enable parallel development of "
"multiple backends. At the moment this API does not have a reference "
"implementation and should not be considered final. A later release note will "
"mark when the reference implementation gets merged and the feauture is ready "
"to be consumed."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:116 stable/victoria>:35
msgid "Deprecation Notes"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:294
msgid ""
"Directly updating some L3-related port IP addresses does not have any effect "
"on the L3 agent side. As a consequence, these L3-related ports should not "
"allow changing of their IP address. A new shim extension has been added "
"called ``l3-port-ip-change-not-allowed`` to prevent such IP address change. "
"For more information please see bug `1796824 <https://bugs.launchpad.net/"
"neutron/+bug/1796824>`_."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:250
msgid ""
"Exceptions for the ``availability_zone`` are now available in ``neutron_lib."
"exceptions.availability_zone``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:314
msgid ""
"Exceptions for the ``metering`` extension are available in ``neutron_lib."
"exceptions.metering``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:99
msgid ""
"Exceptions for the ``multi-provider`` extension can be found in "
"``neutron_lib.exceptions.multiprovidernet``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:34
msgid ""
"Exceptions from ``neutron.common.exceptions`` are now available in the "
"``neutron_lib.exceptions`` package whereupon exceptions are now in their "
"respective module (e.g. L3 exceptions are in ``neutron_lib.exceptions.l3``, "
"etc.)."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:282
msgid ""
"Exceptions related to the ``extraroute`` extension are now available in "
"``neutron_lib.exceptions.extraroute``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:182
msgid ""
"Exceptions related to the ``flavor`` API have been added to ``neutron_lib."
"exceptions.flavors`` except for ``InvalidFlavorServiceType`` which is now a "
"generic ``InvalidServiceType`` in ``neutron_lib.exceptions``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:302
msgid ""
"Exceptions related to the ``l3-ha`` extension are available in ``neutron_lib."
"api.exceptions.l3_ext_ha_mode``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:176
msgid ""
"Extend the ML2 type driver abstract methods ``reserve_provider_segment`` and "
"``allocate_tenant_segment`` with ``filters`` that is used as search criteria "
"for the segment allocation support when network-segment-range extension is "
"loaded."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:274
msgid ""
"External network related exceptions are now available in ``neutron_lib."
"exceptions.external_net``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:249
msgid ""
"FWaaS has renamed the ``public`` attribute to ``shared`` to be in-sync with "
"Openstack nomenclature based on the functionality the ``shared`` attribute "
"provides."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:196
msgid ""
"Fixes BGPVPN Interconnection API to not allow the definition of an empty "
"string Route Target (allowing it was simply wrong and unintentional)."
msgstr ""

#: ../../<reno.sphinxext stable/train>:50
msgid ""
"Fixes an issue in the ``l3-conntrack-helper`` API definition. The validation "
"for the ``helper`` field passed a string validation method instead of the "
"maximum length of the string. This caused a TypeError when running under "
"python3."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:223
msgid ""
"For Infiniband support, Ironic needs to send the ``client-id`` DHCP option "
"as a number in order for IP address assignment to work. This is now "
"supported in Neutron, and can be specified as option number 61 as defined in "
"RFC 4776.  For more information see bug `1770932 <https://bugs.launchpad.net/"
"neutron/+bug/1770932>`_"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:171
msgid "For more examples, see: https://review.openstack.org/#/c/386845/"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:35
msgid "For more examples, see: https://review.openstack.org/#/c/388157/"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:107
msgid ""
"For technical reasons the ``floatingip-autodelete-internal`` extension no "
"longer requires the ``router`` extension."
msgstr ""

#: ../../<reno.sphinxext branch>:47 current
msgid ""
"If you leave a long time window between upgrading Placement and Neutron "
"Server, then it is recommended to upgrade Placement first (as was always the "
"logical order since Neutron is a client of Placement). If the window between "
"upgrading Neutron and Placement is short - that is no changes in (segments "
"of routed networks and QoS) resources backed by Placement during this window "
"you can ignore this note."
msgstr ""

#: ../../<reno.sphinxext branch>:117 current
msgid ""
"Improved ``port`` API with a MAC address conversion method that sanitizes "
"the value. The output format will be EUI-48, represented with colons and in "
"lower case, for example, 01:23:45:67:89:ab."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:485
msgid ""
"Increase the DB retry interval and max retry times for the "
"``retry_db_errors`` decorator in ``neutron_lib.db.api`` to 0.5 seconds and "
"20 times, respectively. For those actions which have a higher chance for "
"DBDeadlock, users should have a higher success rate due to the larger random "
"range and retry times. For more information see bug `1777968 <https://bugs."
"launchpad.net/neutron/+bug/1777968>`_"
msgstr ""

#: ../../<reno.sphinxext stable/train>:175
msgid ""
"Introduce the ML2 type driver abstract methods "
"``initialize_network_segment_range_support`` and "
"``update_network_segment_range_allocations`` for the network segment range "
"support when the extension is loaded."
msgstr ""

#: ../../<reno.sphinxext stable/train>:145
msgid ""
"Introduced ``expose-l3-conntrack-helper`` API extension for exposing "
"``conntrack_helpers`` field in ``Router`` API response. This extension "
"requires the ``router`` and ``conntrack_helper`` service plugins."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:24
msgid ""
"Introduced ``expose-port-forwarding-in-fip`` API extension for exposing "
"``port_forwardings`` field in ``FloatingIP`` API response. This extension "
"requires the ``router`` and ``port_forwarding`` service plugins."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:415
msgid ""
"Introduced ``neutron_lib.utils.net.random_mac_generator(basemac)``. It "
"allows you to get a mac address string Python generator from the same kind "
"of basemac that ``neutron_lib.utils.net.get_random_mac(basemac)`` expects. "
"If there are a lot of macs to get, this will speed the process up "
"significantly over generating single macs and testing for collisions."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:39
msgid ""
"Introduced neutron_lib.fixture, and added fixture for plugin directory "
"``PluginDirectoryFixture``. An example below:"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:160
msgid ""
"Introduced neutron_lib.plugins.directory to get references for loaded "
"plugins in a neutron server process. For example:"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:14
msgid ""
"Introduced neutron_lib.plugins.directory.is_loaded(). This can be used in "
"lieu of len(plugins()) or bool(plugins()) or plugins() alone."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:275
msgid ""
"Introduced priority to callback subscription. An integer value can be "
"associated with each callback so that callbacks can be executed in specified "
"order for same resources and events. Every callback will have priority value "
"by default. To execute callbacks in specified order, priorities should be "
"defined explicitly, lower priority value would be executed first."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:384
msgid "Known Issues"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:255
msgid ""
"Library consumers may need to adopt their code to new requirements of "
"``N537`` hacking check, removing translation markers from all logging "
"messages. If for some reason it doesn't fit the project, consumers can "
"disable the new hacking check using ``ignore`` statement in ``flake8`` "
"section of their ``tox.ini`` file, or by other means."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:365
msgid ""
"Make ``segment_id`` of subnet resource writable. Enables the possibility to "
"migrate a non-routed network to a routed network."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:282
msgid ""
"Many of the constants from ``neutron.plugins.common.constants`` are now "
"available in ``neutron_lib.plugins.constants`` and ``neutron_lib.constants``."
""
msgstr ""

#: ../../<reno.sphinxext stable/stein>:166
msgid ""
"Maximum rpc timeout is now configurable by ``rpc_response_max_timeout`` from "
"Neutron config instead of being calculated as ``10 * rpc_response_timeout`` "
"value."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:374
msgid ""
"Migrate user facing exceptions into neutron-lib along with the API "
"definitions."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:122
msgid ""
"Module ``neutron_lib.db`` is now removed from db profiling projects so "
"database calls done from this module will not be tracked in osprofiler "
"results. All db calls which are tracked by osprofiler are comming from "
"Neutron and this avoids having each call logged twice in osprofiler report."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:31
msgid ""
"Moving the leftover DVR related constants from ``neutron.common.constants``. "
"The constants ``L3_AGENT_MODE_DVR_NO_EXTERNAL`` and ``DVR_SNAT_BOUND`` are "
"now available in ``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:378
msgid ""
"Neutron API should not allow user to set zero for floating IP port "
"forwarding internal or external port number. Directly modify the floating-ip-"
"port-forwarding extension to change external_port and internal_port minimum "
"value to 1. Then API and port forwarding object will make consistent for "
"these attributes."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:19
msgid ""
"Neutron agent extension abstract classes are moved from ``neutron.agent`` to "
"``neutron_lib.agent``"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:342
msgid ""
"Neutron's ``router_availability_zone`` extension API definition is now "
"available in ``neutron_lib.api.definitions.router_availability_zone``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:56
msgid ""
"Neutron's callback API found in ``neutron.callbacks.*`` is now exposed in "
"``neutron_lib.callbacks.*``. In addition, a set of event payload objects are "
"now available for use in transporting event payload data in a standardized "
"way."
msgstr ""

#: ../../<reno.sphinxext stable/train>:40
msgid "New API definition: ``extraroute-atomic``."
msgstr ""

#: ../../<reno.sphinxext stable/wallaby>:60
msgid ""
"New API definition: ``port-device-profile``. The new field added to "
"``ports`` API, ``device_profile``, represents a Cyborg device profile and is "
"a named set of user requirements for one or more accelerators."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:81
msgid ""
"New API definition: ``port-numa-affinity-policy``. The new field added to "
"``ports`` API, ``numa_affinity_policy``, represents the NUMA affinity policy "
"requested by this port during the virtual machine scheduling. Values: None, "
"\"required\", \"preferred\", \"legacy\"."
msgstr ""

#: ../../<reno.sphinxext branch>:10 branch>:75 branch>:104 branch>:134 current
#: origin/stable/ocata>:10 origin/stable/ocata>:152 stable/pike>:10
#: stable/pike>:25 stable/pike>:96 stable/pike>:173 stable/pike>:188
#: stable/pike>:207 stable/pike>:270 stable/pike>:307 stable/pike>:356
#: stable/queens>:10 stable/queens>:78 stable/queens>:164 stable/queens>:212
#: stable/rocky>:10 stable/rocky>:94 stable/rocky>:144 stable/rocky>:174
#: stable/rocky>:248 stable/stein>:10 stable/stein>:138 stable/stein>:162
#: stable/stein>:220 stable/stein>:259 stable/stein>:345 stable/stein>:399
#: stable/train>:10 stable/train>:28 stable/train>:64 stable/train>:131
#: stable/train>:171 stable/ussuri>:10 stable/ussuri>:31 stable/ussuri>:57
#: stable/ussuri>:89 stable/victoria>:10 stable/victoria>:54
#: stable/victoria>:104 stable/wallaby>:27 stable/wallaby>:51
#: stable/wallaby>:73
msgid "New Features"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:456
msgid ""
"New MechanismDriver API class property: "
"``resource_provider_uuid5_namespace``.  Mechanism drivers wanting to support "
"resource provider information reporting to Placement (eg. reporting resource "
"providers to guarantee some minimum bandwidth allocated on them later) must "
"set this class property to a UUID object unique to that mechanism driver. It "
"will be used as a UUID v5 namespace in generating UUIDs for resource "
"providers. The default implementation sets it to ``None``, meaning that the "
"mechanism driver does not support resource provider information reporting to "
"Placement. Unaffected drivers need not be changed."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:469
msgid ""
"New MechanismDriver API method: ``responsible_for_ports_allocation``. "
"Mechanism drivers wanting to support resource allocations for ports in "
"Placement (eg. wanting to guarantee some minimum bandwidth allocated on the "
"resource provider in the port's ``binding:profile.allocation``) must "
"implement this method. The default implementation reports not being "
"responsible for any resource providers, therefore unaffected drivers need "
"not be changed."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:220
msgid ""
"New ``N537`` hacking check is introduced that enforces no logging message "
"translations, in any logging level. The check is enabled by default. Also, "
"the ``N533`` hacking check is now removed because it is covered by ``N537``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:183
msgid ""
"New ``PORT_BINDING``, ``ACTIVATE`` and ``DEACTIVATE`` definitions have been "
"added to ``neutron_lib.agent.topics``, to enable plug-ins to notify agents "
"when a port binding has been activated or de-activated."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:428
msgid ""
"New constants module for Placement: ``neutron_lib.placement.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:146
msgid ""
"New exception classes: ``UnknownResourceProvider`` and "
"``AmbiguousResponsibilityForResourceProvider``."
msgstr ""

#: ../../<reno.sphinxext branch>:14 current
msgid ""
"New extension ``bfd-monitor`` to allow creation of bfd_monitor instances, "
"and managing them. The API definition defines also ``bfd_session_status`` "
"and ``bfd_monitor_associations`` actions to make possible checking the "
"session status of the bfd_monitor and its asscociated routes, and listing "
"the routes associated with the bfd_monitor. (``Note`` that this API "
"extension was merged as experimental to enable parallel development of "
"multiple backends. At the moment this API does not have a reference "
"implementation and should not be considered final. A later release note will "
"mark when the reference implementation gets merged and the feauture is ready "
"to be consumed.)"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:452
msgid ""
"New extension ``qos-bw-minimum-ingress`` for extending "
"``qos_minimum_bandwidth_rule`` with ingress direction for placement based "
"enforcement."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:423
msgid ""
"New methods available in Placement client: ``update_resource_provider`` and "
"``ensure_resource_provider``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:112
msgid ""
"New module ``neutron_lib.policy`` was added. It contains constants: "
"``RULE_ADMIN_OR_OWNER``, ``RULE_ADMIN_ONLY``, ``RULE_ANY``, ``RULE_ADVSVC``, "
"``RULE_ADMIN_OR_NET_OWNER``, ``RULE_ADMIN_OR_NET_OWNER_OR_ADVSVC`` and "
"``RULE_ADMIN_OR_PARENT_OWNER``. It contains also helper functions "
"``policy_and`` and ``policy_or``. Those constants and functions can be used "
"in policy modules in Neutron related projects."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:142
msgid "New shim API extension: ``floatingip-autodelete-internal``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:141
msgid ""
"OpenStack dev hacking check ``H904`` is now enabled in ``tox.ini`` via the "
"``enable-extensions`` configuration property. Neutron-lib adopters should "
"also enable this hacking check in their ``tox.ini``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:137 origin/stable/ocata>:181
#: stable/pike>:158 stable/pike>:341 stable/rocky>:62 stable/rocky>:128
#: stable/rocky>:158 stable/rocky>:434 stable/stein>:91 stable/stein>:195
#: stable/stein>:316 stable/stein>:497 stable/train>:114 stable/train>:153
#: stable/train>:244 stable/ussuri>:69 stable/ussuri>:105 stable/wallaby>:10
msgid "Other Notes"
msgstr ""

#: ../../<reno.sphinxext stable/train>:118
msgid ""
"Parent resource mapping was added to ``EXT_PARENT_RESOURCE_MAPPING`` in "
"``neutron_lib.services.constants`` for the ``l3-conntrack-helper`` extension."
""
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:392
msgid ""
"Placement API has method to update the inventory for a given "
"resource_provider."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:388
msgid ""
"Placement API has no POST method for creating resource provider inventories "
"but instead has PUT to update the inventories of a resource provider."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:238 stable/stein>:335
msgid "Prelude"
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:185
msgid ""
"Provide API definition framework for Neutron Stadium APIs to be consolidated "
"into neutron-lib. For more details see review https://review.openstack.org/#/"
"c/353131/."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:45
msgid ""
"Python 2.7 support has been dropped. The minimum version of Python now "
"supported by neutron-lib is Python 3.6."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:73
msgid ""
"Qdisc ID: for ``ingress`` type, because this one is specific only for "
"ingress traffic."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:75
msgid "Qdisc parents: for ``root`` and ``ingress`` types."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:72
msgid ""
"Qdisc types: ``htb``, ``tbf`` and ``ingress``, used in Neutron ``tc_lib``"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:364
msgid ""
"Rehome the validation for checking if an extension is supported by the "
"plugin. The method ``is_extension_supported`` will now be part of "
"``neutron_lib.api.extensions``."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:109
msgid ""
"Removes the definition of ``interconnection`` API extension for neutron-"
"interconnection project. Neutron-interconnection project was removed from "
"Neutron stadium due to lack of activity for long time so there is no need to "
"keep the API definition in the official Neutron's API definitions."
msgstr ""

#: ../../<reno.sphinxext stable/train>:32
msgid ""
"Router API is modified through a regime API extension to neutron-lib that "
"enforces the admin state of a router be DOWN (admin_state_up=False) prior to "
"modifying the distributed attribute of the router."
msgstr ""

#: ../../<reno.sphinxext stable/train>:157
msgid ""
"Since `commit <https://github.com/sqlalchemy/sqlalchemy/commit/"
"6446e0dfd3e3bb60754bad81c4d52345733d94e3>`_, an AssociationProxy proxy "
"instance is an AssociationProxyInstance derivative object. In order to "
"import versions SQLAlchemy>=1.3.x, we need to handle both implementations."
msgstr ""

#: ../../<reno.sphinxext stable/train>:106
msgid ""
"Static route validator should verify that routed CIDR isn't a loopback. "
"Loopback addresses should not be routable. Bug: `1834012 <https://bugs."
"launchpad.net/neutron/+bug/1834012>`_"
msgstr ""

#: ../../<reno.sphinxext branch>:62 current
msgid ""
"Switched to using placement microversion 1.37 therefore we can fix the "
"resource provider tree corrupted by bug https://launchpad.net/bugs/1921150."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:94
msgid ""
"The API definition and associated constants have been rehomed from ``neutron."
"extensions.portbindings`` to ``neutron_lib.api.definitions.portbindings``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:258
msgid ""
"The API definition for neutron extension ``default-subnetpools`` is now "
"available in ``neutron_lib.api.definitions.default_subnetpools``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:322
msgid ""
"The API definition for neutron's ``network_availability_zone`` extension is "
"now available in ``neutron_lib.api.definitions.network_availability_zone``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:338
msgid ""
"The API definition for neutron's ``qos`` extension is now available in "
"``neutron_lib.api.definitions.qos``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:262
msgid ""
"The API definition for the ``dvr`` extension is now available in "
"``neutron_lib.api.defintions.dvr``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:294
msgid ""
"The API definition for the ``ext-gw-mode`` extension is now available in "
"``neutron_lib.api.definitions.l3_ext_gw_mode``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:278
msgid ""
"The API definition for the ``extraroute`` extension is now available in "
"``neutron_lib.api.defintions.extraroute``."
msgstr ""

#: ../../<reno.sphinxext branch>:123 current
msgid ""
"The API definitions of ``neutron-dynamic-routing``, ``bgp``, "
"``bgp_4byte_asn`` and ``bgp_dragent_scheduler``, are now available in "
"``neutron_lib.api.definitions``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:112
msgid ""
"The API defintion for the ``port-security-groups-filtering`` extension is "
"now available in ``neutron_lib.api.definitions."
"security_groups_port_filtering``."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:98
msgid ""
"The API defintion for the ``stateful-security-group`` extension is now "
"available in ``neutron_lib.api.definitions.stateful_security_group``."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:88
msgid ""
"The API extension ``uplink-status-propagation`` has changed the default "
"value of ``propagate_uplink_status`` from False to True. Now, when this "
"extension is enabled, the VF link state will be set, by default, to "
"\"auto\", following the PF link state. This change will affect only new "
"ports; existing ports will keep their current value."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:131
msgid ""
"The DHCP port numbers for IPv4 were defined incorrectly in ``neutron_lib."
"constants``, they are now correct - ``68`` (client) and ``67`` (server)."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:156
msgid ""
"The ExtensionDescriptor class moved from neutron.api.extensions to "
"neutron_lib.api.extensions."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:331
msgid ""
"The ML2 ``MechanismDriver`` class from ``neutron.plugins.ml2.driver_api`` is "
"now available in ``neutron_lib.plugins.ml2.api``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:98
msgid ""
"The Neutron ``Provider network`` extension API definition has been added as "
"``neutron_lib.api.definitions.provider_net``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:320
msgid ""
"The Placement client previously swallowed a few exceptions (but logged a "
"warning when doing this). In order to let the user of the client choose to "
"handle or ignore the error condition the client no longer does this. Also to "
"avoid losing error information we catch and re-throw HTTP 4xx exceptions "
"with better messages."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:211
msgid ""
"The ``ACTION_STATUS`` is added to API definitions for neutron extension has "
"specific ``action_status``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:315
msgid ""
"The ``APIExtensionDescriptor`` was added to ``neutron_lib.api.extensions`` "
"and can be used with extensions that have an API definition in neutron-lib "
"to minimize the boilplate code needed in the extension definition class. For "
"more details, see the dev-ref."
msgstr ""

#: ../../<reno.sphinxext stable/train>:198
msgid ""
"The ``AuthenticIPNetwork`` and ``AuthenticEUI`` classes are now available in "
"``neutron_lib.utils.net``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:313
msgid ""
"The ``CONTEXT_READER`` and ``CONTEXT_WRITER`` global database contexts are "
"available in ``neutron_lib.db.api`` for convenient access as decorators."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:122
msgid ""
"The ``CORE`` and ``L3`` service type name constants have been removed from "
"``neutron_lib.constants``. These constants are duplicates of those in "
"``neutron_lib.plugin.constants`` and consumers should use the latter."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:317
msgid ""
"The ``DBRetryErrorsFixture`` and ``DBAPIContextManagerFixture`` test "
"fixtures are now available in ``neutron_lib.fixture`` allowing consumers to "
"patch out retry error values and the gobal context manager."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:112
msgid ""
"The ``DNS Integration`` extension API definition has been added as "
"``neutron_lib.api.definitions.dns``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:140
msgid ""
"The ``DriverBase`` class from ``neutron.services.qos.drivers.base`` is now "
"available in the ``neutron_lib.services.qos.base`` module."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:318
msgid ""
"The ``ExtensionDriver`` class in ``neutron_lib.plugins.ml2.api`` now "
"contains the ``extension_aliases`` property to match neutron's "
"implementation."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:14
msgid ""
"The ``FAULT_MAP`` dictionary from ``neutron.api.v2.base`` has been rehomed "
"to ``neutron_lib.api.faults`` with the same name."
msgstr ""

#: ../../<reno.sphinxext stable/train>:226
msgid ""
"The ``InvalidSubnetServiceType`` and ``InvalidInputSubnetServiceType`` "
"exceptions are now available in ``neutron_lib.exceptions``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:438
msgid ""
"The ``LABEL`` variable, which was uselessly duplicating ``ALIAS``, has been "
"removed from API definition modules."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:39
msgid ""
"The ``NetworkVlanRangeError`` and ``PhysicalNetworkNameError`` exception "
"classes are now available in ``neutron_lib.exceptions``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:286
msgid ""
"The ``NeutronWorker`` class from the ``neutron.worker`` module is now "
"available as ``BaseWorker`` in ``neutron_lib.worker``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:234
msgid ""
"The ``OpenFixture`` class is now available in ``neutron_lib.fixtures``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:186
msgid ""
"The ``PROVISIONAL_IPV6_PD_PREFIX`` constant is now available in "
"``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:513
msgid ""
"The ``PlacementAPIClient`` class is moved from ``neutron_lib.clients."
"placement`` to ``neutron_lib.placement.client`` in order to consolidate all "
"Placement related logic under sub-package ``neutron_lib.placement``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:46
msgid ""
"The ``RPCFixture`` is now available in ``neutron_lib.fixtures`` for setting "
"up RPC based unit tests."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:59
msgid "The ``SHARED`` constant is now available in ``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:151
msgid ""
"The ``SUBPORTS``, ``TRUNK`` and ``TRUNK_PLUGIN`` constants are now available "
"in ``neutron_lib.callbacks.resources`` for defining Trunk related callback "
"resources."
msgstr ""

#: ../../<reno.sphinxext stable/train>:84
msgid ""
"The ``SqlFixture`` and ``StaticSqlFixture`` are now available in "
"``neutron_lib.fixtures``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:333
msgid ""
"The ``TenantIdProjectIdFilterConflict`` exception is now available in "
"``neutron_lib.exceptions``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:33
msgid ""
"The ``VNIC_VIRTIO_FORWARDER`` VNIC type has been added to portbindings. This "
"VNIC type is intended to request a low-latency virtio port inside the "
"instance, likely backed by hardware acceleration. Currently the Agilio OVS "
"external plugin provides support for this, with support from other vendors "
"following soon."
msgstr ""

#: ../../<reno.sphinxext stable/train>:182
msgid ""
"The ``WarningsFixture`` is now available in ``neutron_lib.fixture`` and its "
"constructor accepts additional module's to use with filterwarnings."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:170
msgid ""
"The ``agent-resources-synced`` extension introduces a new agent attribute "
"named ``resources_synced`` that tracks the success of the resource view "
"synchronization to Placement."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:230
msgid ""
"The ``allowed-address-pairs`` API definition is now available in "
"``neutron_lib.api.definitions.allowedaddresspairs``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:242
msgid ""
"The ``availability_zone`` extension's API definition is now available in "
"``neutron_lib.api.definitions.availability_zone``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:104
msgid ""
"The ``bgpvpn-routes-control`` API extension is introduced to enrich the base "
"``bgpvpn`` extension.  It allows to control BGPVPN connectivity at the "
"granularity of a port and the advertisement into a BGPVPN of routes "
"corresponding to destination reachable via a given port (static routes, "
"BGPVPN route leaking)."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:168
msgid ""
"The ``bgpvpn-vni`` API extension adds the ``vni`` optional attribute to "
"``bgpvpn`` objects to control the VXLAN VNI when VXLAN encapsulation is used."
""
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:27
msgid "The ``context`` module has been made public. For example:"
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:82
msgid ""
"The ``convert_list_to`` and ``default`` parameters of external_fixed_ips "
"have been removed from l3 and l3_ext_gw_mode API definitions."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:353
msgid ""
"The ``create_network``, ``create_subnet`` and ``create_port`` functions from "
"``neutron.plugins.common.utils`` are now available in ``neutron_lib.plugins."
"utils``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:532
msgid ""
"The ``create_resource_provider`` and ``associate_aggregates`` methods of "
"``PlacementAPIClient`` now return the parsed body of the respective "
"responses. Since these methods returned ``None`` previously this is unlikely "
"to break anything. On the other hand callers of these methods now have a "
"chance to simplify their code."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:345
msgid ""
"The ``dhcp_agent_scheduler`` extension's API defintion is now available in "
"``neutron_lib.api.definitions.dhcpagentscheduler`` and the corresponding "
"exceptions in ``neutron_lib.exceptions.dhcpagentscheduler``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:120
msgid ""
"The ``dns-domain-ports`` extension API definition has been added as "
"``neutron_lib.api.definitions.dns_domain_ports``."
msgstr ""

#: ../../<reno.sphinxext branch>:113 current
msgid ""
"The ``ecmp_routes`` extension API definition has been added as ``neutron_lib."
"api.definitions.ecmp``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:270
msgid ""
"The ``external-net`` API extension's API definition is now available in "
"``neutron_lib.api.definitions.external_net``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:231
msgid ""
"The ``extra_dhcp_opt`` API extension definition from ``neutron.extensions`` "
"has been rehomed to ``neutron_lib.api.definitions`` with the same name."
msgstr ""

#: ../../<reno.sphinxext stable/train>:14
msgid ""
"The ``extraroute-atomic`` api-def's ACTION_MAP is changed so we add the new "
"member actions (``add_extraroutes`` and ``remove_extraroutes``) while we "
"also keep the ``router`` extension's member actions "
"(``add_router_interface`` and ``remove_router_interface``)."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:174
msgid ""
"The ``flavors`` API definition is now available in ``neutron_lib.api."
"definitions.flavors``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:86
msgid ""
"The ``floating_ip`` and ``router`` API definitions from ``neutron.extensions."
"l3`` have been rehomed to ``neutron_lib.api.definitions`` as the module "
"``l3``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:288
msgid ""
"The ``gateway`` , ``allocation_pools`` and ``cidr`` attributes of a Subnet "
"with IPv6 addresses are now converted to IPv6 canonical format to address. "
"`bug 1531103 <https://bugs.launchpad.net/neutron/+bug/1531103>`_"
msgstr ""

#: ../../<reno.sphinxext stable/queens>:153
msgid ""
"The ``get_extended_resources`` method of the ``APIExtensionDescriptor`` was "
"updated to also include the underlying API definition's "
"``SUB_RESOURCE_ATTRIBUTE_MAP`` in the returned dict. As a result, the "
"``update_attributes_map`` method now also includes the sub-resources if no "
"``extension_attrs_map`` is passed to it."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:50
msgid ""
"The ``get_port_binding_by_status_and_host`` function is now available in "
"``neutron_lib.plugins.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:194
msgid ""
"The ``get_random_EUI`` and ``get_random_ip_network`` functions are now "
"available in ``neutron_lib.tests.tools``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:90
msgid ""
"The ``get_random_mac`` utility function from ``neutron.common.utils`` is now "
"in ``neutron_lib.utils.net`` with the same name, ``get_random_mac``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:278
msgid ""
"The ``get_updatable_fields`` function from ``neutron.objects.base`` is now "
"available in ``neutron_lib.object.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:131
msgid ""
"The ``get_vlan_transparent`` function from the ``vlan-transparent`` "
"extension is available in ``neutron_lib.api.definitions.vlantransparent``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:286
msgid ""
"The ``ip_allocation`` extension's API definition is now available in "
"``neutron_lib.api.definitions.ip_allocation``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:290
msgid ""
"The ``l2_adjacency`` extension's API definition is now available in "
"``neutron_lib.api.definitions.l2_adjacency``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:140
msgid ""
"The ``l3-conntrack-helper`` API definition for ``Router`` is introduced, "
"which allows conntrack helper target rules to be set for a ``Router``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:306
msgid ""
"The ``l3-flavors`` extension's API definition is now available in "
"``neutron_lib.api.definitions.l3_flavors``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:298
msgid ""
"The ``l3-ha`` extension's API definition is now available in ``neutron_lib."
"api.definitions.l3_ext_ha_mode``."
msgstr ""

#: ../../<reno.sphinxext branch>:85 current
msgid ""
"The ``l3-ndp-proxy`` and ``l3-ext-ndp-proxy`` API definitions are "
"introduced, which allow a router to support proxy NDP for IPv6 addresses of "
"internal ports."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:148
msgid ""
"The ``load_class_by_alias_or_classname`` function from ``neutron.common."
"utils`` is now available in ``neutron_lib.utils.runtime``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:329
msgid ""
"The ``make_weak_ref`` and ``resolve_ref`` functions from neutron are now "
"available in ``neutron_lib.utils.helpers``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:310
msgid ""
"The ``metering`` extension's API is now available in ``neutron_lib.api."
"definitions.metering``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:186
msgid ""
"The ``model_query`` function is now available in ``neutron_lib.db.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:95
msgid ""
"The ``multi-provider`` extension's API definition is available in "
"``neutron_lib.api.defintions.multiprovidernet``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:50
msgid ""
"The ``net-mtu`` extension API definition has been added as ``neutron_lib.api."
"definitions.network_mtu``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:326
msgid ""
"The ``network-ip-availability`` extension's API definition is now available "
"in ``neutron_lib.api.definitions.network_ip_availability``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:227
msgid ""
"The ``network``, ``port``, ``subnet`` and ``subnetpool`` API definitions are "
"now available in ``neutron_lib.api.definitions``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:30
msgid ""
"The ``neutron.common.rpc`` module is now available as ``neutron_lib.rpc`` "
"and automatically exposes all exception modules from ``neutron_lib."
"exceptions`` for RPC usage."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:239
msgid ""
"The ``neutron.common.utils`` function ``is_port_trusted`` is now available "
"in ``neutron_lib.utils.net``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:357
msgid ""
"The ``neutron.db._resource_extend`` is now available as ``neutron_lib.db."
"resource_extend`` along with a new ``DBResourceExtendFixture`` that allows "
"tests to modify the map of registered resource functions."
msgstr ""

#: ../../<reno.sphinxext stable/train>:190
msgid ""
"The ``neutron.objects.common_types`` module is now available in "
"``neutron_lib.objects.common_types``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:210
msgid ""
"The ``neutron.objects.extensions.standardattributes`` module is now "
"available as ``neutron_lib.objects.extensions.standardattributes``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:202
msgid ""
"The ``neutron.objects.logapi.events_types`` module is now available as "
"``neutron_lib.objects.logapi.events_types``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:337
msgid ""
"The ``neutron.objects.utils`` module is now available in ``neutron_lib."
"objects.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:349
msgid ""
"The ``neutron.plugins.common.utils.get_deployment_physnet_mtu`` function is "
"now available in ``neutron_lib.plugins.utils`` with the same name."
msgstr ""

#: ../../<reno.sphinxext stable/train>:206
msgid ""
"The ``neutron.services.logapi.common.constants`` module is now available as "
"``neutron_lib.services.logapi.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:38
msgid ""
"The ``neutron.tests.fake_notifier`` is now available as ``neutron_lib.tests."
"unit.fake_notifier``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:199
msgid ""
"The ``neutron_lib.api.definitions.network_segment_range."
"NETWORK_SEGMENT_RANGE_TYPE_LIST`` constant was moved to ``neutron_lib."
"constants`` and renamed to ``NETWORK_SEGMENT_RANGE_TYPES`` so that it can be "
"used elsewhere."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:278
msgid ""
"The ``neutron_lib.api.extensions.APIExtensionDescriptor`` class now defines "
"update_attributes_map that uses the API definitions attribute map if none is "
"given. This is the default behavior in most all extensions today and thus is "
"collapsed into the base class for convenience."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:323
msgid ""
"The ``neutron_lib.api.extensions.ExtensionDescriptor`` class's "
"``get_plugin_interface`` method now formally only supports ``neutron_lib."
"services.base.ServicePluginBase``. This change reflects the existing usage "
"by consumers as almost all are returning instances of ``ServicePluginBase`` "
"already."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:410
msgid ""
"The ``neutron_lib.api.utils`` module has been removed. The single "
"``populate_project_info`` function therein is available in ``neutron_lib.api."
"attributes`` and has been marked as a moved function in the ``utils`` module "
"for some time now."
msgstr ""

#: ../../<reno.sphinxext stable/train>:218
msgid "The ``neutron_lib.db.standard_attr`` module is now available for use."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:196
msgid ""
"The ``neutron_lib.fixture.APIDefinitionFixture`` has been updated to handle "
"backing-up and restoring the global ``RESOURCES`` dict. By default the "
"constructor now also uses all API definitions if none are passed to it's "
"constructor. This is the default behavior almost all consumers need and is "
"thus a convenience change."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:266
msgid ""
"The ``neutron_lib.objects.registry`` module is now available for loading "
"neutron versioned object classes registered as entry points with the "
"``NEUTRON_OBJECT_NAMESPACE`` namespace therein. This global registry can be "
"used by consumers to access references to neutron versioned object classes "
"and instances so there's no need to import ``neutron.objects``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:40
msgid ""
"The ``neutron_lib.tests._tools`` module is now public and named ``tools``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:262
msgid ""
"The ``neutron_lib.utils.runtime.NamespacedPlugins`` class is now available "
"and wraps a stevedore namespace of plugins."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:42
msgid ""
"The ``neutron_lib.utils.runtime.list_package_modules`` function is now "
"available for listing all modules in a said package."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:330
msgid ""
"The ``pagination`` API extension's API definition is now available in "
"``neutron_lib.api.definitions.pagination``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:335
msgid ""
"The ``port security`` extension API definition has been rehomed from "
"``neutron`` to ``neutron_lib.api.definitions.port_security``. The related "
"exceptions can be found in the ``neutron_lib.exceptions.port_security`` "
"module."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:187
msgid ""
"The ``portforwarding`` API definition for ``FloatingIP``is introduced, which "
"allows a ``FloatingIP:Port`` to forward packets back to a VM's ``Internal IP:"
"Port`` ."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:403
msgid ""
"The ``project-default-networks`` extension is now available and adds a new "
"attribute ``project_default`` into the ``network`` resource. This attribute "
"will be used to indicate if a network is a project default network."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:334
msgid ""
"The ``project-id`` API extension's API definition is now available in "
"``neutron_lib.api.definitions.project_id``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:357
msgid ""
"The ``qos-bw-limit-direction`` extension's API definition is now available "
"in ``neutron_lib.api.definitions.qos_bw_limit_direction``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:115
msgid ""
"The ``qos-default`` extension's API definition is now available in "
"``neutron_lib.api.definitions.qos_default``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:43
msgid ""
"The ``qos-rule-type-details`` extension's API definition is now available in "
"``neutron_lib.api.definitions.qos_rule_type_details``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:349
msgid ""
"The ``qos-rules-alias`` API extension is introduced to enable users to "
"perform ``GET``, ``PUT`` and ``DELETE`` operations on "
"``bandwidth_limit_rules``, ``dscp_marking_rules`` and "
"``minimum_bandwidth_rules`` as though they are first level resources. In "
"other words, the user will not have to specify the QoS policy ID."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:303
msgid ""
"The ``qos-rules-alias`` API extension wrongly attempted to re-define "
"``bandwidth_limit_rules``, ``dscp_marking_rules`` and "
"``minimum_bandwidth_rules`` as first level API resources, leading to "
"conflicts in the QoS API. We now define ``alias_bandwidth_limit_rules``, "
"``alias_dscp_marking_rules`` and ``alias_minimum_bandwidth_rules`` that will "
"enable users to perform ``GET``, ``PUT`` and ``DELETE`` operations on the "
"corresponding QoS rules without having to specify the associated policy ID."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:119
msgid ""
"The ``rbac-policy`` callback resource now available as ``neutron_lib."
"callbacks.resources.RBAC_POLICY``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:238
msgid ""
"The ``reset_random_seed`` function is now available in ``neutron_lib.tests."
"tools``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:520
msgid ""
"The ``resource_provider_generation`` parameters of the following methods of "
"``PlacementAPIClient`` are now optional: "
"``update_resource_provider_inventories``, "
"``update_resource_provider_inventory`` and "
"``update_resource_provider_traits``. You may call the methods without this "
"parameter or pass ``None`` with the meaning to ignore resource provider "
"generations. That is the client will (in quick succession) get the object "
"and update it supplying the same generation."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:47
msgid ""
"The ``revision-if-match`` extension's API definition is now available in "
"``neutron_lib.api.definitions.revisionifmatch``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:51
msgid ""
"The ``router-service-type`` extension's API definition is now available in "
"``neutron_lib.api.definitions.routerservicetype``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:55
msgid ""
"The ``segment`` extension's API definition is now available in ``neutron_lib."
"api.definitions.segment``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:123
msgid ""
"The ``service-type`` extension's API definition is now available in "
"``neutron_lib.api.definitions.servicetype``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:63
msgid ""
"The ``sorting`` extension's API definition is now available in ``neutron_lib."
"api.definitions.sorting``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:44
msgid "The ``sqlalchemytypes`` module is now available in ``neutron_lib.db``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:88
msgid ""
"The ``subnet-dns-publish-fixed-ip`` API extension is added. It adds the "
"``dns_publish_fixed_ip`` attribute to subnets, indicating whether to publish "
"DNS records for fixed IPs from this subnet in an external DNS service. For "
"details see [`bug 1784879 <https://launchpad.net/bugs/1784879>`_]."
msgstr ""

#: ../../<reno.sphinxext stable/train>:222
msgid ""
"The ``subnet-service-types`` extension is now available in ``neutron_lib.api."
"definitions.subnet_service_types``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:135
msgid ""
"The ``subnet_onboard`` API definition now supports creating and updating "
"subnets"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:152
msgid ""
"The ``synchronized`` decorator from ``neutron.common.utils`` is now "
"available in ``neutron_lib.utils.runtime``."
msgstr ""

#: ../../<reno.sphinxext stable/ussuri>:35
msgid ""
"The ``tag-ports-during-bulk-creation`` shim extension API definition has "
"been added to enable the tagging of ports during bulk creation."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:119
msgid ""
"The ``timecost`` decorator is available in ``neutron_lib.utils.helpers`` now."
"  This permits functions to be decorated with functionality that will emit a "
"debug log with the time it took to execute the function."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:361
msgid ""
"The ``unstable_test`` decorator from ``neutron.tests.base`` is now available "
"in neutron-lib in ``neutron_lib.utils.test``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:116
msgid ""
"The ``validate_dns_name``, ``validate_fip_dns_name``, and "
"``validate_dns_domain`` are now available as neutron-lib validators."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:127
msgid ""
"The ``vlan-transparent`` extension's API definition is now available in "
"``neutron_lib.api.definitions.vlantransparent``."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:115
msgid ""
"The abstract class LinuxInterfaceDriver is now defined in ``neutron-lib."
"agent.linux.interface``. It contains only the abstract methods and the class "
"variables."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:234
msgid ""
"The address pair validation is now available via the ``type:"
"allowed_address_pairs`` validation type."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:327
msgid ""
"The class ``WorkerBase`` is now available and provides the same "
"functionality that's provided by ``neutron.worker."
"WorkerSupportServiceMixin``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:106
msgid ""
"The class ``neutron.services.service_base.ServicePluginBase`` is now "
"available as ``neutron_lib.services.base.ServicePluginBase``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:254
msgid ""
"The constant ``AZ_HINTS_DB_LEN`` has been added to ``neutron_lib.db."
"constants``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:23
msgid ""
"The constants ``EXPAND_BRANCH`` and ``CONTRACT_BRANCH`` are now available in "
"``neutron_lib.db.constants``. They should be used instead of the ones in "
"``neutron.db.migration.cli``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:177
msgid ""
"The constants ``VALID_BLANK_EXTRA_DHCP_OPTS`` and ``DHCP_OPT_VALUE_MAX_LEN`` "
"are now public in the ``neutron_lib.api.definitions.extra_dhcp_opt`` API "
"definition module."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:144
msgid ""
"The constants defined in ``neutron.services.qos.qos_consts`` are now "
"available in ``neutron_lib.services.qos.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:341
msgid ""
"The database utility functions ``get_marker_obj``, "
"``filter_non_model_columns``, ``model_query_scope_is_project`` and "
"``resource_fields`` are now available in ``neutron_lib.db.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:162
msgid ""
"The deprecated ``N523`` hacking check that ensures proper oslo namespace "
"imports has been removed."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:406
msgid ""
"The deprecated ``neutron_libutils.file.ensure_dir`` function is removed. "
"Consumers can use ``ensure_tree(path, 0o755)`` from ``oslo_utils.fileutils`` "
"instead."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:395
msgid ""
"The exception classes from ``neutron.extensions.l3`` have been rehomed into "
"``neutron_lib.exceptions.l3``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:37
msgid ""
"The exception classes have migrated from neutron_fwaas to neutron_lib as "
"mentioned below:"
msgstr ""

#: ../../<reno.sphinxext stable/stein>:240
msgid ""
"The following exceptions from ``neutron.common.exceptions`` have been "
"rehomed into neutron-lib; ``PortBindingAlreadyActive``, "
"``PortBindingAlreadyExists``, ``PortBindingError``, "
"``ProcessExecutionError``, ``RouterQosBindingNotFound``, "
"``RouterQosBindingError``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:120
msgid ""
"The function ``neutron_lib.api.utils.populate_project_info`` has moved to "
"``neutron_lib.api.attributes.populate_project_info``.  It will be removed "
"from the old location in the future."
msgstr ""

#: ../../<reno.sphinxext stable/train>:214
msgid ""
"The function ``provider_network_attribute_updates_supported`` is now "
"available in ``neutron_lib.plugins.ml2.api.MechanismDriver``."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:102
msgid ""
"The hacking check factory ``incubating_factory`` has been added to "
"``neutron_lib.hacking.checks`` allowing adopters to test compliance on "
"incubating hacking checks. See the usage documentation for additional "
"details."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:345
msgid ""
"The hacking check factory function ``neutron_lib.hacking.checks."
"incubating_factory`` has been removed. All consumers should use "
"``neutron_lib.hacking.checks.factory`` as per the ``usage`` dev-ref."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:58
msgid ""
"The neutron ``address-scope`` extension's API definition is now available as "
"``neutron_lib.api.definitions.address_scope``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:62
msgid ""
"The neutron ``agent`` extension's API definition is now available as "
"``neutron_lib.api.definitions.agent``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:66
msgid ""
"The neutron ``auto-allocated-topology`` extension's API definition is now "
"available as ``neutron_lib.api.definitions.auto_allocated_topology``."
msgstr ""

#: ../../<reno.sphinxext branch>:148 current
msgid ""
"The neutron ``neutron.plugins.ml2.drivers.openvswitch.agent.common."
"constants`` are now available in ``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:107
msgid ""
"The neutron placement API client is now available as ``neutron_lib.clients."
"placement``."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:136
msgid ""
"The neutron versioned object exceptions from ``neutron.objects.exceptions`` "
"are now available in ``neutron_lib.objects.exceptions``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:221
msgid ""
"The new ``net-mtu-writable`` extension API definition has been added as "
"``neutron_lib.api.definitions.network_mtu_writable``. The new extension "
"indicates that the network ``mtu`` attribute is writeable.  Plugins "
"supporting the new extension are expected to also support ``net-mtu``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:448
msgid ""
"The new extension ``port-resource-request`` adds the ``resource_request`` "
"attribute to port responses. This attribute enables Neutron to communicate "
"to Nova resources needed by the port, such as physnet, VNIC type and "
"bandwidth. If the port requested by Nova boot has the ``resource_request`` "
"attribute, then the Nova Scheduler will try to allocate the VM in a host "
"that can satisfy those requirements."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:296
msgid ""
"The oslo.db context manager returned by ``db.api.get_context_manager()`` "
"will be configured with flush_on_subtransaction=True to more closely match "
"the behavior of the previous session.begin(subtransactions=True) pattern we "
"used everywhere before. See bug 1664643 for more details."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:189
msgid ""
"The oslo.db wrap_db_retry function now supports randomized time jitter in "
"its retry algorithm. Add support for that feature, if the installed version "
"of oslo.db supports it."
msgstr ""

#: ../../<reno.sphinxext stable/victoria>:39
msgid ""
"The parameter 'remote_ip_prefix' in metering label rules has been deprecated."
" Its name expresses the opposite of what does when used, and the lack of "
"documentation confuses people. Moreover, an alternative method has been "
"proposed and approved to enable operators to create metering rules using "
"both source and destination IP addresses."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:244
msgid ""
"The private ORM event listener functions from ``neutron.db.api`` are now in "
"``neutron_lib.db.api`` and are automatically loaded when importing any "
"neutron-lib module."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:309
msgid ""
"The public APIs from ``neutron.db.api`` are now available in the "
"``neutron_lib.db.api`` module."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:132
msgid ""
"The public APIs from ``neutron.plugins.ml2.driver_api`` are now in "
"``neutron_lib.plugins.ml2.api``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:67
msgid ""
"The public constants and ``get_topic_name`` function from ``neutron.common."
"topics`` are now available in ``neutron_lib.agent.topics``."
msgstr ""

#: ../../<reno.sphinxext stable/rocky>:321
msgid ""
"The public functions of ``neutron.db._model_query`` are now available in "
"``neutron_lib.db.model_query`` with the same name. While these modules can "
"be used, forward looking projects should start moving to versioned objects "
"and after which point we can remove this module."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:35
msgid ""
"The publically consumed API's from ``neutron.plugins.common.utils`` are now "
"available in ``neutron_lib.plugins.utils``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:36
msgid ""
"The remaining ``neutron.common.constants`` are now available in "
"``neutron_lib.constants`` with the exception of "
"``EXT_PARENT_RESOURCE_MAPPING`` that is now available in ``neutron_lib."
"services.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:48
msgid ""
"The trunk service constants are now available in ``neutron_lib.services."
"trunk.constants``, but now have the constant name prefixed with ``TRUNK_``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:266
msgid ""
"The two ``MacAddressGenerationFailure`` exceptions are now available as "
"``HostMacAddressGenerationFailure`` and "
"``NetworkMacAddressGenerationFailure`` for host and network MAC address "
"generation errors respectively."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:124
msgid ""
"The use of ``neutron_lib.callbacks.registry.notify()`` and ``neutron_lib."
"callbacks.manager.CallbacksManager.notify()`` is deprecated in favor of "
"their ``publish()`` counterparts and will be removed in the \"Queens\" "
"release time-frame."
msgstr ""

#: ../../<reno.sphinxext stable/train>:230
msgid "The validation type ``list_of_subnet_service_types`` is now available."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:103
msgid ""
"The validation type ``type:network_segments`` is now available for API "
"attribute validation."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:27
msgid ""
"This adds two new events ``PRECOMMIT_ADD_ASSOCIATION``, "
"``PRECOMMIT_DELETE_ASSOCIATIONS`` and a resource ``ROUTER_CONTROLLER``."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:205
msgid ""
"This change removes the ``ONBOARD_SUBNETS_SPECS`` attribute extension from "
"the subnet onboard extension descriptor. This has been deemed to be an "
"unnecessary attribute extension during implementation and has been removed. "
"Because subnet onboard is not yet a completed Neutron feature, the API "
"definition is being updated to reflect this."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:339
msgid "This release adds support for custom filtering in versioned object."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:540
msgid ""
"This release removes the ``description`` from the segment extension's "
"attribute map as well as adds the ``standard-attr-description`` as required "
"dependency and ``standard-attr-segment`` as an optional dependency."
msgstr ""

#: ../../<reno.sphinxext branch>:142 current
msgid ""
"Update fields ``internal_port`` and ``external_port`` in floating ip "
"portforwardings to be optional, as now you can chose between using them or "
"the ``internal_port_range`` and ``external_port_range`` fields."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:85
msgid ""
"Update hacking check ``N536``. Current implementation recognizes ``self."
"assertEqual((None, None), A)`` as invalid incorrectly while ``(None, None)`` "
"is not ``None``."
msgstr ""

#: ../../<reno.sphinxext stable/queens>:19
msgid ""
"Updated fwaas API extension definition to include  previously missing "
"ability to specify remote firewall groups for ingress and egress traffic. "
"When a firewall group rule specifies a remote group, for example an ingress "
"rule in fwgA specifies a remote group of fwgB, that means only packets from "
"fwgB could match this ingress rule."
msgstr ""

#: ../../<reno.sphinxext branch>:43 current stable/pike>:245 stable/rocky>:118
#: stable/rocky>:398 stable/stein>:81 stable/ussuri>:41
msgid "Upgrade Notes"
msgstr ""

#: ../../<reno.sphinxext branch>:91 current
msgid ""
"``DHCP_IPV4_TABLE`` and ``DHCP_IPV6_TABLE`` constants from the ``neutron."
"plugins.ml2.drivers.openvswitch.agent.common.constants`` module are now "
"available in ``neutron_lib.constants``."
msgstr ""

#: ../../<reno.sphinxext stable/train>:252
msgid ""
"``IP`` and ``HOPOPT`` keywords were added to ``neutron_lib.constants."
"IP_PROTOCOL_MAP``. This allows the use of these keywords to be used when "
"creating security group rules to describe either all IP protocols (for "
"IPv4), or Hop-by-Hop Options (for IPv6), instead of having to use the number "
"zero (0) for this purpose."
msgstr ""

#: ../../<reno.sphinxext stable/train>:79
msgid ""
"``bound_drivers``: a dictionary mapping the binding level to the driver name."
""
msgstr ""

#: ../../<reno.sphinxext stable/train>:77
msgid ""
"``connectivity``: a string informing about the back-end connectivity level "
"(l2, l3 or not specified)."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:42
msgid ""
"``neutron_fwaas.extensions.firewall_v2`` -> ``neutron_lib.exceptions."
"firewall_v2``"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:40
msgid ""
"``neutron_fwaas.extensions.firewall`` -> ``neutron_lib.exceptions."
"firewall_v1``"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:41
msgid ""
"``neutron_fwaas.extensions.firewallrouterinsertion`` -> ``neutron_lib."
"exceptions.firewall_v1``"
msgstr ""

#: ../../<reno.sphinxext stable/pike>:378
msgid ""
"``neutron_lib.db`` has a public module ``api`` that provides accessor "
"functions for transactional context manager services."
msgstr ""

#: ../../<reno.sphinxext stable/pike>:383
msgid "``neutron_lib.fixture`` has a new ``SqlFixture`` available."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:52
msgid ""
"``neutron_lib.worker.BaseWorker`` will now set the process title on process "
"start, if it is a new process. By default, the name will be \"neutron-"
"server\", and the description will be the name of the worker class, followed "
"by the original process title. Both fields are customizable via the ``name`` "
"and ``desc`` arguments to ``BaseWorker.start()``, and the change can be "
"disabled via the ``set_proctitle`` argument to the ``__init__`` function. "
"``neutron.conf`` will have a setting for disabling this functionality for "
"all in-tree workers, but by default, all out of tree plugin workers will set "
"their name at fork time. Available settings are 'on' (described above, and "
"the default), 'off' (same as today), or 'brief', which settings the process "
"name to just name and description. 'brief' is probably most useful/simple "
"for deployers, but 'on' is the default in order to prevent as many script "
"related breakages as possible."
msgstr ""

#: ../../<reno.sphinxext origin/stable/ocata>:128
msgid ""
"``policy.refresh()`` and ``policy.reset()`` have been removed. The library "
"policy module is not meant for public consumption, and it should be "
"considered in practice a private component of the library. If you use it, "
"you will do so at your own risk, as it has been marked as a private module."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:432
msgid ""
"neutron-lib now has a new module: ``neutron_lib.placement.utils``. This "
"module contains logic that is to be shared between in-tree Neutron "
"components and possibly out-of-tree Neutron agents that want to support "
"features involving the Placement service (for example guaranteed minimum "
"bandwidth)."
msgstr ""

#: ../../<reno.sphinxext stable/stein>:440
msgid ""
"policy-in-code support in neutron-lib is added. The default policies for "
"'context_is_admin' and 'context_is_advsvc' are now implemented as embeded "
"policies. (Note that the main policy-in-code support will be implemented in "
"the main neutron codebase.)"
msgstr ""

#: ../source/README.rst:3
msgid "Neutron Library Release Notes Howto"
msgstr ""

#: ../source/README.rst:5
msgid ""
"Release notes for documenting new features in OpenStack projects. Background "
"on the process, tooling, and methodology is documented in a `mailing list "
"post by Doug Hellmann <http://lists.openstack.org/pipermail/openstack-dev/"
"2015-November/078301.html>`_."
msgstr ""

#: ../source/README.rst:9
msgid ""
"For information on how to create release notes, please consult the `Release "
"Notes documentation <https://docs.openstack.org/reno/latest/>`_."
msgstr ""

#: ../source/index.rst:3
msgid "Neutron Library Release Notes"
msgstr ""

#: ../source/ocata.rst:3
msgid "Ocata Series Release Notes"
msgstr ""

#: ../source/pike.rst:3
msgid "Pike Series Release Notes"
msgstr ""

#: ../source/queens.rst:3
msgid "Queens Series Release Notes"
msgstr ""

#: ../source/rocky.rst:3
msgid "Rocky Series Release Notes"
msgstr ""

#: ../source/stein.rst:3
msgid "Stein Series Release Notes"
msgstr ""

#: ../source/train.rst:3
msgid "Train Series Release Notes"
msgstr ""

#: ../source/unreleased.rst:3
msgid "Current Series Release Notes"
msgstr ""

#: ../source/ussuri.rst:3
msgid "Ussuri Series Release Notes"
msgstr ""

#: ../source/victoria.rst:3
msgid "Victoria Series Release Notes"
msgstr ""

#: ../source/wallaby.rst:3
msgid "Wallaby Series Release Notes"
msgstr ""

