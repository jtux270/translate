# Translations template for PROJECT.
# Copyright (C) 2022 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-03-04 12:55+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.1.1\n"

#: contrib/heat_docker/heat_docker/resources/docker_container.py:48
msgid "This resource is not supported, use at your own risk."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:100
msgid "Docker daemon endpoint (by default the local docker daemon will be used)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:106
msgid "Hostname of the container."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:111
msgid "Username or UID."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:116
msgid "Memory limit (Bytes)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:120
msgid "TCP/UDP ports mapping."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:125
msgid "TCP/UDP ports bindings."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:129
msgid "Links to other containers."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:133
#: heat/engine/resources/openstack/heat/deployed_server.py:116
#: heat/engine/resources/openstack/nova/server.py:631
#: heat/engine/resources/openstack/zun/container.py:78
#: heat/engine/resources/openstack/zun/container.py:225
msgid "Name of the container."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:137
msgid "Enable extended privileges."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:142
msgid "Allocate a pseudo-tty."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:147
msgid "Open stdin."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:152
msgid "If true, close stdin after the 1 attached client disconnects."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:157
msgid "Set environment variables."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:161
msgid "Command to run after spawning the container."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:166
msgid "Set custom dns servers."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:170
msgid "Image name."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:174
msgid "Create a bind mount."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:179
msgid "Mount all specified volumes."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:184
msgid "Restart policies (only supported for API version >= 1.2.0)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:188
msgid "The behavior to apply when the container exits."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:197
msgid "A maximum restart count for the on-failure policy."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:207
msgid ""
"Be used to add kernel capabilities (only supported for API version >= "
"1.2.0)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:211
#: contrib/heat_docker/heat_docker/resources/docker_container.py:225
msgid "The security features provided by Linux kernels."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:221
msgid ""
"Be used to drop kernel capabilities (only supported for API version >= "
"1.2.0)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:235
#, python-format
msgid ""
"If true, mount the container's root filesystem as read only (only "
"supported for API version >= %s)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:243
#, python-format
msgid ""
"Relative weight which determines the allocation of the CPU processing "
"power(only supported for API version >= %s)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:251
#, python-format
msgid "Device mappings (only supported for API version >= %s)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:258
msgid "The device path on the host."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:267
msgid "The device path of the container mappings to the host."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:276
msgid "The permissions of the container to read/write/create the devices."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:292
#, python-format
msgid ""
"The CPUs in which to allow execution (only supported for API version >= "
"%s)."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:301
msgid "Container info."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:304
msgid "Container network info."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:307
msgid "Container ip address."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:310
msgid "Container ip gateway."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:313
msgid "Container TCP ports."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:316
msgid "Container UDP ports."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:319
msgid "Container logs."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:322
msgid "Container first logs line."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:325
msgid "Container last logs line."
msgstr ""

#: contrib/heat_docker/heat_docker/resources/docker_container.py:572
#: contrib/heat_docker/heat_docker/tests/test_docker_container.py:331
#, python-format
msgid "\"%(arg)s\" is not supported for API version < \"%(min_version)s\""
msgstr ""

#: doc/source/ext/resources.py:117
#, python-format
msgid "%(version)s (%(code)s)"
msgstr ""

#: doc/source/ext/resources.py:126
msgid "Available"
msgstr ""

#: doc/source/ext/resources.py:130
#, python-format
msgid "%(msg)s since %(version)s"
msgstr ""

#: doc/source/ext/resources.py:134
#, python-format
msgid "%(msg)s - %(status_msg)s"
msgstr ""

#: doc/source/ext/resources.py:200
msgid "HOT Syntax"
msgstr ""

#: doc/source/ext/resources.py:249
msgid "Not implemented."
msgstr ""

#: doc/source/ext/resources.py:260
msgid "Required."
msgstr ""

#: doc/source/ext/resources.py:263
msgid "Optional."
msgstr ""

#: doc/source/ext/resources.py:270
#, python-format
msgid "%s value expected."
msgstr ""

#: doc/source/ext/resources.py:278
msgid "Can be updated without replacement."
msgstr ""

#: doc/source/ext/resources.py:281
msgid ""
"Updates are not supported. Resource update will fail on any attempt to "
"update this property."
msgstr ""

#: doc/source/ext/resources.py:287
msgid "Updates cause replacement."
msgstr ""

#: doc/source/ext/resources.py:291
msgid "Defaults to "
msgstr ""

#: doc/source/ext/resources.py:296
msgid "Defaults to the resource description"
msgstr ""

#: doc/source/ext/resources.py:305
msgid "Map properties:"
msgstr ""

#: doc/source/ext/resources.py:312
msgid "List contents:"
msgstr ""

#: doc/source/ext/resources.py:338
msgid "Required Properties"
msgstr ""

#: doc/source/ext/resources.py:350
msgid "Optional Properties"
msgstr ""

#: doc/source/ext/resources.py:361
msgid "Attributes"
msgstr ""

#: doc/source/ext/resources.py:380
msgid "update_policy"
msgstr ""

#: heat/api/aws/ec2token.py:32
msgid "Authentication Endpoint URI."
msgstr ""

#: heat/api/aws/ec2token.py:35 heat/common/config.py:337
msgid "Allow orchestration of multiple clouds."
msgstr ""

#: heat/api/aws/ec2token.py:38 heat/common/config.py:340
msgid ""
"Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At "
"least one endpoint needs to be specified."
msgstr ""

#: heat/api/aws/ec2token.py:42 heat/common/config.py:354
#: heat/common/config.py:374
msgid "Optional PEM-formatted certificate chain file."
msgstr ""

#: heat/api/aws/ec2token.py:44 heat/common/config.py:356
#: heat/common/config.py:376
msgid "Optional PEM-formatted file that contains the private key."
msgstr ""

#: heat/api/aws/ec2token.py:47 heat/common/config.py:352
#: heat/common/config.py:372
msgid "Optional CA cert file to use in SSL connections."
msgstr ""

#: heat/api/aws/ec2token.py:50 heat/common/config.py:360
#: heat/common/config.py:379
#: heat/engine/resources/openstack/heat/remote_stack.py:124
msgid "If set, then the server's certificate will not be verified."
msgstr ""

#: heat/api/aws/ec2token.py:185
msgid "Service misconfigured"
msgstr ""

#: heat/api/aws/exception.py:38
msgid "Generic HeatAPIException, please use specific subclasses!"
msgstr ""

#: heat/api/aws/exception.py:77
msgid "The request signature does not conform to AWS standards"
msgstr ""

#: heat/api/aws/exception.py:86
msgid "The request processing has failed due to an internal error"
msgstr ""

#: heat/api/aws/exception.py:97
msgid "The action or operation requested is invalid"
msgstr ""

#: heat/api/aws/exception.py:106
msgid "The certificate or AWS Key ID provided does not exist"
msgstr ""

#: heat/api/aws/exception.py:115
msgid "Incompatible parameters were used together"
msgstr ""

#: heat/api/aws/exception.py:124
msgid "A bad or out-of-range value was supplied"
msgstr ""

#: heat/api/aws/exception.py:133
msgid "AWS query string is malformed, does not adhere to AWS spec"
msgstr ""

#: heat/api/aws/exception.py:143
msgid "The query string is malformed"
msgstr ""

#: heat/api/aws/exception.py:152
msgid "The request is missing an action or operation parameter"
msgstr ""

#: heat/api/aws/exception.py:165
msgid "Does not contain a valid AWS Access Key or certificate"
msgstr ""

#: heat/api/aws/exception.py:177
msgid "A mandatory input parameter is missing"
msgstr ""

#: heat/api/aws/exception.py:186
msgid "The AWS Access Key ID needs a subscription for the service"
msgstr ""

#: heat/api/aws/exception.py:200
msgid "Request expired or more than 15mins in the future"
msgstr ""

#: heat/api/aws/exception.py:209
msgid "Service temporarily unavailable"
msgstr ""

#: heat/api/aws/exception.py:219
msgid "Request was denied due to request throttling"
msgstr ""

#: heat/api/aws/exception.py:228
msgid "Resource with the name requested already exists"
msgstr ""

#: heat/api/aws/exception.py:242
msgid "User is not authorized to perform action"
msgstr ""

#: heat/api/aws/exception.py:251
msgid ""
"The request signature we calculated does not match the signature you "
"provided"
msgstr ""

#: heat/api/aws/exception.py:262
msgid "The requested action is not yet implemented"
msgstr ""

#: heat/api/aws/exception.py:282
msgid "Payload exceeds maximum allowed size"
msgstr ""

#: heat/api/cfn/v1/stacks.py:56
#, python-format
msgid "Action %s not allowed for user"
msgstr ""

#: heat/api/cfn/v1/stacks.py:63
#, python-format
msgid "Error authorizing action %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:251
#, python-format
msgid "Failed to fetch template: %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:286
msgid "DisableRollback and OnFailure may not be used together"
msgstr ""

#: heat/api/cfn/v1/stacks.py:306
#, python-format
msgid "Unexpected action %(action)s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:324 heat/api/cfn/v1/stacks.py:416
msgid "Invalid Template URL"
msgstr ""

#: heat/api/cfn/v1/stacks.py:328 heat/api/cfn/v1/stacks.py:419
msgid "TemplateBody or TemplateUrl were not given."
msgstr ""

#: heat/api/cfn/v1/stacks.py:334 heat/api/cfn/v1/stacks.py:425
msgid "The Template must be a JSON or YAML document."
msgstr ""

#: heat/api/openstack/v1/actions.py:54
msgid "No action specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:57
msgid "Multiple actions specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:61
#, python-format
msgid "Invalid action %s specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:65
#, python-format
msgid "Unexpected action %s"
msgstr ""

#: heat/api/openstack/v1/events.py:147
#, python-format
msgid "No events found for resource %s"
msgstr ""

#: heat/api/openstack/v1/events.py:159
#, python-format
msgid "No event %s found"
msgstr ""

#: heat/api/openstack/v1/resources.py:112
#, python-format
msgid "Invalid filter parameters %s"
msgstr ""

#: heat/api/openstack/v1/resources.py:175
#, python-format
msgid "Invalid keys in resource mark unhealthy %s"
msgstr ""

#: heat/api/openstack/v1/resources.py:180
#, python-format
msgid "Missing mandatory (%s) key from mark unhealthy request"
msgstr ""

#: heat/api/openstack/v1/services.py:42
msgid "All heat engines are down."
msgstr ""

#: heat/api/openstack/v1/stacks.py:82
#, python-format
msgid "%(type)s not in valid format: %(error)s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:88
msgid "No stack name specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:106 heat/engine/api.py:58
#, python-format
msgid "Invalid adopt data: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:121
#, python-format
msgid "Could not retrieve template: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:128
msgid "No template specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:403
#, python-format
msgid "%s flag only supported in stack update (or update preview) request."
msgstr ""

#: heat/api/openstack/v1/stacks.py:724
#, python-format
msgid "Template type is not supported: %s"
msgstr ""

#: heat/api/openstack/v1/util.py:94
msgid "Invalid Stack address"
msgstr ""

#: heat/cmd/manage.py:57
msgid "Hostname"
msgstr ""

#: heat/cmd/manage.py:58
msgid "Binary"
msgstr ""

#: heat/cmd/manage.py:59
msgid "Engine_Id"
msgstr ""

#: heat/cmd/manage.py:60
msgid "Host"
msgstr ""

#: heat/cmd/manage.py:61
msgid "Topic"
msgstr ""

#: heat/cmd/manage.py:62
msgid "Status"
msgstr ""

#: heat/cmd/manage.py:63
msgid "Updated At"
msgstr ""

#: heat/cmd/manage.py:80
msgid "Dead engines are removed."
msgstr ""

#: heat/cmd/manage.py:104
msgid ""
"Warning: this command is potentially destructive and only intended to "
"recover from specific crashes."
msgstr ""

#: heat/cmd/manage.py:106
msgid "It is advised to shutdown all Heat engines beforehand."
msgstr ""

#: heat/cmd/manage.py:107
msgid "Continue ? [y/N]"
msgstr ""

#: heat/cmd/manage.py:122
#, python-format
msgid "Stack with id %s can not be found."
msgstr ""

#: heat/cmd/manage.py:174
msgid "How long to preserve deleted data."
msgstr ""

#: heat/cmd/manage.py:179
msgid "Granularity to use for age argument, defaults to days."
msgstr ""

#: heat/cmd/manage.py:183
msgid "Project ID to purge deleted stacks."
msgstr ""

#: heat/cmd/manage.py:187
msgid ""
"Number of stacks to delete at a time (per transaction). Note that a "
"single stack may have many DB rows (events, etc.) associated with it."
msgstr ""

#: heat/cmd/manage.py:197
msgid ""
"Valid values are encrypt or decrypt. The heat-engine processes must be "
"stopped to use this."
msgstr ""

#: heat/cmd/manage.py:204
msgid ""
"Provide old encryption key. New encryption key would be used from config "
"file."
msgstr ""

#: heat/cmd/manage.py:207
msgid ""
"Print an INFO message when processing of each raw_template or resource "
"begins or ends"
msgstr ""

#: heat/cmd/manage.py:213
msgid "Stack resource id"
msgstr ""

#: heat/cmd/manage.py:218
msgid "Stack id"
msgstr ""

#: heat/cmd/manage.py:229
msgid "Show available commands."
msgstr ""

#: heat/cmd/status.py:45
msgid "Placeholder"
msgstr ""

#: heat/common/auth_url.py:47
msgid "Request missing required header X-Auth-Url"
msgstr ""

#: heat/common/auth_url.py:51
#, python-format
msgid "Header X-Auth-Url \"%s\" not an allowed endpoint"
msgstr ""

#: heat/common/cache.py:41
msgid ""
"TTL, in seconds, for any cached item in the dogpile.cache region used for"
" caching of validation constraints."
msgstr ""

#: heat/common/cache.py:46
msgid ""
"Toggle to enable/disable caching when Orchestration Engine validates "
"property constraints of stack. During property validation with "
"constraints Orchestration Engine caches requests to other OpenStack "
"services. Please note that the global toggle for oslo.cache(enabled=True "
"in [cache] group) must be enabled to use this feature."
msgstr ""

#: heat/common/cache.py:61
msgid ""
"TTL, in seconds, for any cached item in the dogpile.cache region used for"
" caching of service extensions."
msgstr ""

#: heat/common/cache.py:66
msgid ""
"Toggle to enable/disable caching when Orchestration Engine retrieves "
"extensions from other OpenStack services. Please note that the global "
"toggle for oslo.cache(enabled=True in [cache] group) must be enabled to "
"use this feature."
msgstr ""

#: heat/common/cache.py:79
msgid ""
"TTL, in seconds, for any cached item in the dogpile.cache region used for"
" caching of OpenStack service finder functions."
msgstr ""

#: heat/common/cache.py:84
msgid ""
"Toggle to enable/disable caching when Orchestration Engine looks for "
"other OpenStack service resources using name or id. Please note that the "
"global toggle for oslo.cache(enabled=True in [cache] group) must be "
"enabled to use this feature."
msgstr ""

#: heat/common/config.py:33
msgid "The flavor to use."
msgstr ""

#: heat/common/config.py:35
msgid "The API paste config file to use."
msgstr ""

#: heat/common/config.py:41
msgid "Seconds between running periodic tasks."
msgstr ""

#: heat/common/config.py:43
msgid ""
"URL of the Heat metadata server. NOTE: Setting this is only needed if you"
" require instances to use a different endpoint than in the keystone "
"catalog"
msgstr ""

#: heat/common/config.py:48
msgid "URL of the Heat waitcondition server."
msgstr ""

#: heat/common/config.py:54
msgid "URL of the Heat CloudWatch server."
msgstr ""

#: heat/common/config.py:57
msgid "Instance connection to CFN/CW API via https."
msgstr ""

#: heat/common/config.py:60
msgid "Instance connection to CFN/CW API validate certs if SSL is used."
msgstr ""

#: heat/common/config.py:63
msgid "Default region name used to get services endpoints."
msgstr ""

#: heat/common/config.py:65
msgid "Region name for shared services endpoints."
msgstr ""

#: heat/common/config.py:68
msgid ""
"The shared services located in the other region.Needs "
"region_name_for_shared_services option to be set for this to take effect."
msgstr ""

#: heat/common/config.py:73
msgid "Keystone role for heat template-defined users."
msgstr ""

#: heat/common/config.py:77
msgid ""
"Keystone domain ID which contains heat template-defined users. If this "
"option is set, stack_user_domain_name option will be ignored."
msgstr ""

#: heat/common/config.py:81
msgid ""
"Keystone domain name which contains heat template-defined users. If "
"`stack_user_domain_id` option is set, this option is ignored."
msgstr ""

#: heat/common/config.py:85
msgid ""
"Keystone username, a user with roles sufficient to manage users and "
"projects in the stack_user_domain."
msgstr ""

#: heat/common/config.py:89
msgid "Keystone password for stack_domain_admin user."
msgstr ""

#: heat/common/config.py:92
msgid "Maximum raw byte size of any template."
msgstr ""

#: heat/common/config.py:95
msgid "Maximum depth allowed when using nested stacks."
msgstr ""

#: heat/common/config.py:97
msgid ""
"Number of heat-engine processes to fork and run. Will default to either "
"to 4 or number of CPUs on the host, whichever is greater."
msgstr ""

#: heat/common/config.py:103
msgid ""
"If set, is used to control which authentication endpoint is used by user-"
"controlled servers to make calls back to Heat. If unset "
"www_authenticate_uri is used."
msgstr ""

#: heat/common/config.py:112
msgid "List of directories to search for plug-ins."
msgstr ""

#: heat/common/config.py:115
msgid "The directory to search for environment files."
msgstr ""

#: heat/common/config.py:118
msgid "The directory to search for template files."
msgstr ""

#: heat/common/config.py:127
msgid "Select deferred auth method, stored password or trusts."
msgstr ""

#: heat/common/config.py:132
msgid ""
"Allow reauthentication on token expiry, such that long-running tasks may "
"complete. Note this defeats the expiry of any provided user tokens."
msgstr ""

#: heat/common/config.py:137
msgid ""
"Create trusts with redelegation enabled. This option is only used when "
"reauthentication_auth_method is set to \"trusts\". Note that enabling "
"this option does have security implications as all trusts created by Heat"
" will use both impersonation and redelegation enabled. Enable it only "
"when there are other services that need to create trusts from tokens Heat"
" uses to access them, examples are Aodh and Heat in another region when "
"configured to use trusts too."
msgstr ""

#: heat/common/config.py:149
msgid ""
"Subset of trustor roles to be delegated to heat. If left unset, all roles"
" of a user will be delegated to heat when creating a stack."
msgstr ""

#: heat/common/config.py:154
msgid "Maximum resources allowed per top-level stack. -1 stands for unlimited."
msgstr ""

#: heat/common/config.py:158
msgid ""
"Maximum number of stacks any one tenant may have active at one time. -1 "
"stands for unlimited."
msgstr ""

#: heat/common/config.py:162
msgid ""
"Number of times to retry to bring a resource to a non-error state. Set to"
" 0 to disable retries."
msgstr ""

#: heat/common/config.py:167
msgid ""
"Number of times to retry when a client encounters an expected "
"intermittent error. Set to 0 to disable retries."
msgstr ""

#: heat/common/config.py:175
msgid "Maximum length of a server name to be used in nova."
msgstr ""

#: heat/common/config.py:180
msgid ""
"Number of times to check whether an interface has been attached or "
"detached."
msgstr ""

#: heat/common/config.py:183
msgid ""
"Maximum nova API version for client plugin. With this limitation, any "
"nova feature supported with microversion number above "
"max_nova_api_microversion will not be available."
msgstr ""

#: heat/common/config.py:188
msgid ""
"Maximum ironic API version for client plugin. With this limitation, any "
"ironic feature supported with microversion number above "
"max_ironic_api_microversion will not be available."
msgstr ""

#: heat/common/config.py:195
msgid ""
"Controls how many events will be pruned whenever a stack's events are "
"purged. Set this lower to keep more events at the expense of more "
"frequent purges."
msgstr ""

#: heat/common/config.py:201
msgid ""
"Rough number of maximum events that will be available per stack. Actual "
"number of events can be a bit higher since purge checks take place "
"randomly 200/event_purge_batch_size percent of the time. Older events are"
" deleted when events are purged. Set to 0 for unlimited events per stack."
msgstr ""

#: heat/common/config.py:209
msgid "Timeout in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:213
msgid ""
"The amount of time in seconds after an error has occurred that tasks may "
"continue to run before being cancelled."
msgstr ""

#: heat/common/config.py:218
msgid "RPC timeout for the engine liveness check that is used for stack locking."
msgstr ""

#: heat/common/config.py:225
msgid "Enable the legacy OS::Heat::CWLiteAlarm resource."
msgstr ""

#: heat/common/config.py:228
msgid "Enable the preview Stack Abandon feature."
msgstr ""

#: heat/common/config.py:231
msgid "Enable the preview Stack Adopt feature."
msgstr ""

#: heat/common/config.py:234
msgid ""
"Enables engine with convergence architecture. All stacks with this option"
" will be created using convergence engine."
msgstr ""

#: heat/common/config.py:239
msgid ""
"On update, enables heat to collect existing resource properties from "
"reality and converge to updated template."
msgstr ""

#: heat/common/config.py:248
msgid ""
"Template default for how the server should receive the metadata required "
"for software configuration. POLL_SERVER_CFN will allow calls to the cfn "
"API action DescribeStackResource authenticated with the provided keypair "
"(requires enabled heat-api-cfn). POLL_SERVER_HEAT will allow calls to the"
" Heat API resource-show using the provided keystone credentials (requires"
" keystone v3 API, and configured stack_user_* config options). "
"POLL_TEMP_URL will create and populate a Swift TempURL with metadata for "
"polling (requires object-store endpoint which supports "
"TempURL).ZAQAR_MESSAGE will create a dedicated zaqar queue and post the "
"metadata for polling."
msgstr ""

#: heat/common/config.py:268
msgid ""
"Template default for how the server should signal to heat with the "
"deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN "
"keypair signed URL (requires enabled heat-api-cfn). TEMP_URL_SIGNAL will "
"create a Swift TempURL to be signaled via HTTP PUT (requires object-store"
" endpoint which supports TempURL). HEAT_SIGNAL will allow calls to the "
"Heat API resource-signal using the provided keystone credentials. "
"ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the"
" provided keystone credentials."
msgstr ""

#: heat/common/config.py:285
msgid ""
"Template default for how the user_data should be formatted for the "
"server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-"
"cfntools cloud-init boot configuration data. For RAW the user_data is "
"passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as "
"part of the software config data, and metadata is derived from any "
"associated SoftwareDeployment resources."
msgstr ""

#: heat/common/config.py:295
msgid ""
"Stacks containing these tag names will be hidden. Multiple tags should be"
" given in a comma-delimited list (eg. hidden_stack_tags=hide_me,me_too)."
msgstr ""

#: heat/common/config.py:299
msgid "Deprecated."
msgstr ""

#: heat/common/config.py:302
msgid ""
"When this feature is enabled, scheduler hints identifying the heat stack "
"context of a server or volume resource are passed to the configured "
"schedulers in nova and cinder, for creates done using heat resource types"
" OS::Cinder::Volume, OS::Nova::Server, and AWS::EC2::Instance. "
"heat_root_stack_id will be set to the id of the root stack of the "
"resource, heat_stack_id will be set to the id of the resource's parent "
"stack, heat_stack_name will be set to the name of the resource's parent "
"stack, heat_path_in_stack will be set to a list of comma delimited "
"strings of stackresourcename and stackname with list[0] being "
"'rootstackname', heat_resource_name will be set to the resource's name, "
"and heat_resource_uuid will be set to the resource's orchestration id."
msgstr ""

#: heat/common/config.py:320
msgid ""
"Encrypt template parameters that were marked as hidden and also all the "
"resource properties before storing them in database."
msgstr ""

#: heat/common/config.py:328
msgid ""
"Name of the engine node. This can be an opaque identifier. It is not "
"necessarily a hostname, FQDN, or IP address."
msgstr ""

#: heat/common/config.py:348 heat/common/config.py:368
msgid ""
"Type of endpoint in Identity service catalog to use for communication "
"with the OpenStack service."
msgstr ""

#: heat/common/config.py:385
#, python-format
msgid "Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s."
msgstr ""

#: heat/common/config.py:391
msgid "Unversioned keystone url in format like http://0.0.0.0:5000."
msgstr ""

#: heat/common/config.py:397
msgid "Allow client's debug log output."
msgstr ""

#: heat/common/config.py:403
msgid ""
"Heat build revision. If you would prefer to manage your build revision "
"separately, you can move this section to a different file and add it as "
"another config option."
msgstr ""

#: heat/common/config.py:412
msgid ""
"Indicate if cinder-backup service is enabled. This is a temporary "
"workaround until cinder-backup service becomes discoverable, see "
"LP#1334856."
msgstr ""

#: heat/common/config.py:420
msgid "JSON file containing the content returned by the noauth middleware."
msgstr ""

#: heat/common/config.py:435
msgid ""
"heat.conf misconfigured, cannot specify \"stack_user_domain_id\" or "
"\"stack_user_domain_name\" without \"stack_domain_admin\" and "
"\"stack_domain_admin_password\""
msgstr ""

#: heat/common/config.py:445
msgid "heat.conf misconfigured, auth_encryption_key must be 32 characters"
msgstr ""

#: heat/common/config.py:527
#, python-format
msgid "Unable to locate config file [%s]"
msgstr ""

#: heat/common/config.py:540
#, python-format
msgid ""
"Unable to load %(app_name)s from configuration file %(conf_file)s.\n"
"Got: %(e)r"
msgstr ""

#: heat/common/crypt.py:34
msgid ""
"Key used to encrypt authentication info in the database. Length of this "
"key must be 32 characters."
msgstr ""

#: heat/common/custom_backend_auth.py:56
msgid "Backend authentication failed"
msgstr ""

#: heat/common/environment_format.py:50
msgid "The environment is not a valid YAML mapping data type."
msgstr ""

#: heat/common/environment_format.py:58
#, python-format
msgid "environment has wrong section \"%s\""
msgstr ""

#: heat/common/environment_format.py:60
#, python-format
msgid "environment has empty section \"%s\""
msgstr ""

#: heat/common/environment_util.py:85
#, python-format
msgid "Invalid parameter in environment %s."
msgstr ""

#: heat/common/exception.py:34
#, python-format
msgid ""
"Service %(service_name)s is not available for resource type "
"%(resource_type)s, reason: %(reason)s"
msgstr ""

#: heat/common/exception.py:46
msgid "An unknown exception occurred."
msgstr ""

#: heat/common/exception.py:86
#, python-format
msgid "Missing required credential: %(required)s"
msgstr ""

#: heat/common/exception.py:90
#, python-format
msgid "Authorization failed.%(failure_reason)s"
msgstr ""

#: heat/common/exception.py:101
msgid "You are not authenticated."
msgstr ""

#: heat/common/exception.py:105
#, python-format
msgid "You are not authorized to use %(action)s."
msgstr ""

#: heat/common/exception.py:113
msgid "You are not authorized to complete this action."
msgstr ""

#: heat/common/exception.py:117
#, python-format
msgid "Data supplied was not valid: %(reason)s"
msgstr ""

#: heat/common/exception.py:121
#, python-format
msgid "The Parameter (%(key)s) was not provided."
msgstr ""

#: heat/common/exception.py:125
#, python-format
msgid "The Parameter (%(key)s) was not defined in template."
msgstr ""

#: heat/common/exception.py:129
#, python-format
msgid "The template version is invalid: %(explanation)s"
msgstr ""

#: heat/common/exception.py:133
#, python-format
msgid "The template section is invalid: %(section)s"
msgstr ""

#: heat/common/exception.py:137
#, python-format
msgid "The following parameters are immutable and may not be updated: %(keys)s"
msgstr ""

#: heat/common/exception.py:147
#, python-format
msgid "Invalid merge strategy '%(strategy)s' for parameter '%(param)s'."
msgstr ""

#: heat/common/exception.py:152
#, python-format
msgid ""
"Conflicting merge strategy '%(strategy)s' for parameter '%(param)s' in "
"file '%(env_file)s'."
msgstr ""

#: heat/common/exception.py:157
#, python-format
msgid "The Referenced Attribute (%(resource)s %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:162
#, python-format
msgid "The specified reference \"%(resource)s\" (in %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:167
#, python-format
msgid "Error in %(resource)s output %(attribute)s: %(message)s"
msgstr ""

#: heat/common/exception.py:171
msgid "Can not decrypt data with the auth_encryption_key in heat config."
msgstr ""

#: heat/common/exception.py:176
#, python-format
msgid ""
"Invalid dependency with external %(resource_type)s resource: "
"%(external_id)s"
msgstr ""

#: heat/common/exception.py:181
#, python-format
msgid "The %(entity)s (%(name)s) could not be found."
msgstr ""

#: heat/common/exception.py:191
#, python-format
msgid "The physical resource for (%(name)s) exists."
msgstr ""

#: heat/common/exception.py:195
#, python-format
msgid "Multiple physical resources were found with name (%(name)s)."
msgstr ""

#: heat/common/exception.py:200
#, python-format
msgid "Multiple resources were found with the physical ID (%(phys_id)s)."
msgstr ""

#: heat/common/exception.py:205
#, python-format
msgid "Searching Tenant %(target)s from Tenant %(actual)s forbidden."
msgstr ""

#: heat/common/exception.py:210
#, python-format
msgid "The Stack (%(stack_name)s) already exists."
msgstr ""

#: heat/common/exception.py:214
#, python-format
msgid "%(error)s%(path)s%(message)s"
msgstr ""

#: heat/common/exception.py:273 heat/common/exception.py:296
#: heat/common/exception.py:300
#, python-format
msgid "%(message)s"
msgstr ""

#: heat/common/exception.py:277
#, python-format
msgid ""
"The Resource (%(resource_name)s) could not be found in Stack "
"%(stack_name)s."
msgstr ""

#: heat/common/exception.py:282
#, python-format
msgid "The Snapshot (%(snapshot)s) for Stack (%(stack)s) could not be found."
msgstr ""

#: heat/common/exception.py:287
#, python-format
msgid ""
"There was an error loading the definition of the global resource type "
"%(type_name)s."
msgstr ""

#: heat/common/exception.py:304
#, python-format
msgid "The Resource (%(resource_name)s) is not available."
msgstr ""

#: heat/common/exception.py:308
#, python-format
msgid "The client (%(client_name)s) is not available."
msgstr ""

#: heat/common/exception.py:371
#, python-format
msgid "%(feature)s is not supported."
msgstr ""

#: heat/common/exception.py:375
#, python-format
msgid "%(action)s is not supported for resource."
msgstr ""

#: heat/common/exception.py:379
#, python-format
msgid "%(action)s is restricted for resource."
msgstr ""

#: heat/common/exception.py:383
#, python-format
msgid "Cannot define the following properties at the same time: %(props)s."
msgstr ""

#: heat/common/exception.py:393
#, python-format
msgid "%(prop1)s cannot be specified without %(prop2)s."
msgstr ""

#: heat/common/exception.py:397
#, python-format
msgid ""
"%(prop1)s property should only be specified for %(prop2)s with value "
"%(value)s."
msgstr ""

#: heat/common/exception.py:402
#, python-format
msgid "At least one of the following properties must be specified: %(props)s."
msgstr ""

#: heat/common/exception.py:417
#, python-format
msgid "The Resource %s requires replacement."
msgstr ""

#: heat/common/exception.py:422
#, python-format
msgid ""
"%(result)s - Unknown status %(resource_status)s due to "
"\"%(status_reason)s\""
msgstr ""

#: heat/common/exception.py:425
msgid "Resource failed"
msgstr ""

#: heat/common/exception.py:426 heat/common/exception.py:435
#: heat/engine/clients/os/nova.py:248 heat/engine/clients/os/nova.py:249
#: heat/engine/resources/openstack/trove/cluster.py:295
#: heat/engine/resources/openstack/trove/instance.py:411
#: heat/engine/resources/openstack/trove/instance.py:480
msgid "Unknown"
msgstr ""

#: heat/common/exception.py:432
#, python-format
msgid "Went to status %(resource_status)s due to \"%(status_reason)s\""
msgstr ""

#: heat/common/exception.py:442
#, python-format
msgid "The resource %s is already being updated."
msgstr ""

#: heat/common/exception.py:460
msgid ""
"Egress rules are only allowed when Neutron is used and the 'VpcId' "
"property is set."
msgstr ""

#: heat/common/exception.py:472
msgid "Not found"
msgstr ""

#: heat/common/exception.py:478
#, python-format
msgid "Invalid content type %(content_type)s"
msgstr ""

#: heat/common/exception.py:482
#, python-format
msgid "Request limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:486
#, python-format
msgid "Permissible download limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:490
msgid "Maximum resources per stack exceeded."
msgstr ""

#: heat/common/exception.py:494
#, python-format
msgid "Stack %(stack_name)s already has an action (%(action)s) in progress."
msgstr ""

#: heat/common/exception.py:499
#, python-format
msgid ""
"Stack %(stack_name)s has an action (%(action)s) in progress or failed "
"state."
msgstr ""

#: heat/common/exception.py:504
#, python-format
msgid "Failed to stop stack (%(stack_name)s) on other engine (%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:509
#, python-format
msgid ""
"Failed to send message to stack (%(stack_name)s) on other engine "
"(%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:514
#, python-format
msgid "Failed to attach interface (%(port)s) to server (%(server)s)"
msgstr ""

#: heat/common/exception.py:519
#, python-format
msgid "Failed to detach interface (%(port)s) from server (%(server)s)"
msgstr ""

#: heat/common/exception.py:524
#, python-format
msgid "Unsupported object type %(objtype)s"
msgstr ""

#: heat/common/exception.py:528
#, python-format
msgid "Cannot call %(method)s on orphaned %(objtype)s object"
msgstr ""

#: heat/common/exception.py:532
#, python-format
msgid "Version %(objver)s of %(objname)s is not supported"
msgstr ""

#: heat/common/exception.py:536
#, python-format
msgid "Object action %(action)s failed because: %(reason)s"
msgstr ""

#: heat/common/exception.py:540
#, python-format
msgid "Cannot modify readonly field %(field)s"
msgstr ""

#: heat/common/exception.py:544
#, python-format
msgid "Concurrent transaction for %(action)s"
msgstr ""

#: heat/common/exception.py:548
#, python-format
msgid "Field %(field)s of %(objname)s is not an instance of Field"
msgstr ""

#: heat/common/exception.py:552
#, python-format
msgid ""
"Keystone has more than one service with same name %(service)s. Please use"
" service id instead of name"
msgstr ""

#: heat/common/exception.py:557
msgid "System SIGHUP signal received."
msgstr ""

#: heat/common/exception.py:561
#, python-format
msgid "Invalid service %(service)s version %(version)s"
msgstr ""

#: heat/common/exception.py:565
#, python-format
msgid ""
"A template version alias %(version)s was added for a template class that "
"has no official YYYY-MM-DD version."
msgstr ""

#: heat/common/exception.py:570
#, python-format
msgid "Unable to automatically allocate a network: %(message)s"
msgstr ""

#: heat/common/grouputils.py:157
#: heat/engine/resources/openstack/heat/autoscaling_group.py:271
#: heat/engine/resources/openstack/heat/resource_chain.py:173
#: heat/engine/resources/openstack/heat/resource_group.py:518
#, python-format
msgid "Member '%(mem)s' not found in group resource '%(grp)s'."
msgstr ""

#: heat/common/identifier.py:43
msgid "Stack name may not contain \"/\""
msgstr ""

#: heat/common/identifier.py:57
#, python-format
msgid "\"%s\" is not a valid ARN"
msgstr ""

#: heat/common/identifier.py:63
#, python-format
msgid "\"%s\" is not a valid Heat ARN"
msgstr ""

#: heat/common/identifier.py:80
#, python-format
msgid "\"%s\" is not a valid URL"
msgstr ""

#: heat/common/identifier.py:86
#, python-format
msgid "\"%s\" is not a valid ARN URL"
msgstr ""

#: heat/common/identifier.py:139 heat/common/identifier.py:146
#, python-format
msgid "Unknown attribute \"%s\""
msgstr ""

#: heat/common/identifier.py:178 heat/engine/resource.py:206
msgid "Resource name may not contain \"/\""
msgstr ""

#: heat/common/netutils.py:42
#, python-format
msgid "'%(data)s' exceeds the %(max_len)s character FQDN limit"
msgstr ""

#: heat/common/netutils.py:48
msgid "Encountered an empty component."
msgstr ""

#: heat/common/netutils.py:51
#, python-format
msgid "Name '%s' must not start or end with a hyphen."
msgstr ""

#: heat/common/netutils.py:54
#, python-format
msgid ""
"Name '%(name)s' must be 1-%(max_len)s characters long, each of which can "
"only be alphanumeric or a hyphen."
msgstr ""

#: heat/common/netutils.py:62
#, python-format
msgid "TLD '%s' must not be all numeric."
msgstr ""

#: heat/common/param_utils.py:25
#, python-format
msgid ""
"Unrecognized value \"%(value)s\" for \"%(name)s\", acceptable values are:"
" true, false."
msgstr ""

#: heat/common/param_utils.py:46
#, python-format
msgid "Only integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:52
#, python-format
msgid "Only non-zero integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:57
#, python-format
msgid "Value '%(value)s' is invalid for '%(name)s' which only accepts integer."
msgstr ""

#: heat/common/param_utils.py:62
#, python-format
msgid ""
"Value '%(value)s' is invalid for '%(name)s' which only accepts non-"
"negative integer."
msgstr ""

#: heat/common/param_utils.py:73 heat/engine/api.py:71
#, python-format
msgid "Invalid tag, \"%s\" is longer than 80 characters"
msgstr ""

#: heat/common/param_utils.py:81
#, python-format
msgid "Invalid template type \"%(value)s\", valid types are: cfn, hot."
msgstr ""

#: heat/common/policy.py:86
msgid "Policy not registered."
msgstr ""

#: heat/common/short_id.py:47
#, python-format
msgid "Invalid UUID version (%d)"
msgstr ""

#: heat/common/template_format.py:76
#, python-format
msgid "Error parsing template %(tmpl)s %(yea)s"
msgstr ""

#: heat/common/template_format.py:84
msgid "The template is not a JSON object or YAML mapping."
msgstr ""

#: heat/common/template_format.py:97
#, python-format
msgid ""
"Template size (%(actual_len)s bytes) exceeds maximum allowed size "
"(%(limit)s bytes)."
msgstr ""

#: heat/common/template_format.py:120
msgid "Template format version not found."
msgstr ""

#: heat/common/timeutils.py:52
msgid "Only ISO 8601 duration format of the form PT#H#M#S is supported."
msgstr ""

#: heat/common/urlfetch.py:49
#, python-format
msgid "Invalid URL scheme %s"
msgstr ""

#: heat/common/urlfetch.py:57
#, python-format
msgid "Failed to retrieve template: %s"
msgstr ""

#: heat/common/urlfetch.py:76
#, python-format
msgid "Template exceeds maximum allowed size (%s bytes)"
msgstr ""

#: heat/common/urlfetch.py:83
#, python-format
msgid "Failed to retrieve template from %s"
msgstr ""

#: heat/common/wsgi.py:57 heat/common/wsgi.py:97 heat/common/wsgi.py:135
msgid ""
"Address to bind the server. Useful when selecting a particular network "
"interface."
msgstr ""

#: heat/common/wsgi.py:61 heat/common/wsgi.py:101 heat/common/wsgi.py:142
msgid "The port on which the server will listen."
msgstr ""

#: heat/common/wsgi.py:64 heat/common/wsgi.py:104 heat/common/wsgi.py:148
msgid "Number of backlog requests to configure the socket with."
msgstr ""

#: heat/common/wsgi.py:68 heat/common/wsgi.py:108 heat/common/wsgi.py:155
msgid "Location of the SSL certificate file to use for SSL mode."
msgstr ""

#: heat/common/wsgi.py:72 heat/common/wsgi.py:112 heat/common/wsgi.py:162
msgid "Location of the SSL key file to use for enabling SSL mode."
msgstr ""

#: heat/common/wsgi.py:76
msgid ""
"Number of workers for Heat service. Default value 0 means, that service "
"will start number of workers equal number of cores on server."
msgstr ""

#: heat/common/wsgi.py:81 heat/common/wsgi.py:119
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs)."
msgstr ""

#: heat/common/wsgi.py:86 heat/common/wsgi.py:124 heat/common/wsgi.py:183
msgid ""
"The value for the socket option TCP_KEEPIDLE.  This is the time in "
"seconds that the connection must be idle before TCP starts sending "
"keepalive probes."
msgstr ""

#: heat/common/wsgi.py:116 heat/common/wsgi.py:169
msgid "Number of workers for Heat service."
msgstr ""

#: heat/common/wsgi.py:175
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs.)"
msgstr ""

#: heat/common/wsgi.py:198
msgid "If False, closes the client socket connection explicitly."
msgstr ""

#: heat/common/wsgi.py:201
msgid ""
"Timeout for client connections' socket operations. If an incoming "
"connection is idle for this number of seconds it will be closed. A value "
"of '0' means wait forever."
msgstr ""

#: heat/common/wsgi.py:212
msgid ""
"Maximum raw byte size of JSON request body. Should be larger than "
"max_template_size."
msgstr ""

#: heat/common/wsgi.py:254
msgid ""
"When running server in SSL mode, you must specify both a cert_file and "
"key_file option value in your configuration file"
msgstr ""

#: heat/common/wsgi.py:270
#, python-format
msgid "Could not bind to %(bind_addr)s after trying for 30 seconds"
msgstr ""

#: heat/common/wsgi.py:818
#, python-format
msgid ""
"JSON body size (%(len)s bytes) exceeds maximum allowed size (%(limit)s "
"bytes)."
msgstr ""

#: heat/common/wsgi.py:894
msgid ""
"The server could not comply with the request since it is either malformed"
" or otherwise incorrect."
msgstr ""

#: heat/db/sqlalchemy/api.py:151
#, python-format
msgid "raw template with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:213
#, python-format
msgid "raw_template_files with files_id %d not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:227
#, python-format
msgid "resource with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:273
msgid "no resources were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:382
msgid "no resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:447
msgid "No resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:596
#, python-format
msgid "ResourcePropertiesData with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:647 heat/db/sqlalchemy/api.py:1946
#, python-format
msgid "Stack with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:840
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:851
#, python-format
msgid "Attempt to delete a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:965
msgid "Length of OS_PASSWORD after encryption exceeds Heat limit (255 chars)"
msgstr ""

#: heat/db/sqlalchemy/api.py:1000
#, python-format
msgid "Attempt to delete user creds with id %(id)s that does not exist"
msgstr ""

#: heat/db/sqlalchemy/api.py:1211
#, python-format
msgid "Software config with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:1230
#, python-format
msgid "Software config with id %s can not be deleted as it is referenced."
msgstr ""

#: heat/db/sqlalchemy/api.py:1257
#, python-format
msgid "Deployment with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:1302
#, python-format
msgid "Snapshot with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:1383
#, python-format
msgid "%s should be an integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:1386
#, python-format
msgid "%s should be a positive integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:1395
msgid "granularity should be days, hours, minutes, or seconds"
msgstr ""

#: heat/db/sqlalchemy/api.py:1621
msgid "Cannot migrate to lower schema version."
msgstr ""

#: heat/db/sqlalchemy/api.py:1633
msgid "encrypt"
msgstr ""

#: heat/db/sqlalchemy/api.py:1634
msgid "decrypt"
msgstr ""

#: heat/engine/api.py:47
#, python-format
msgid "Invalid timeout value %s"
msgstr ""

#: heat/engine/api.py:64
#, python-format
msgid "Invalid tags, not a list: %s"
msgstr ""

#: heat/engine/api.py:68
#, python-format
msgid "Invalid tag, \"%s\" is not a string"
msgstr ""

#: heat/engine/api.py:76
#, python-format
msgid "Invalid tag, \"%s\" contains a comma"
msgstr ""

#: heat/engine/attributes.py:268
#, python-format
msgid "%(resource)s: Invalid attribute %(key)s"
msgstr ""

#: heat/engine/attributes.py:312
msgid "Can't traverse attribute path"
msgstr ""

#: heat/engine/attributes.py:315
msgid "Path components in attributes must be strings"
msgstr ""

#: heat/engine/conditions.py:44
#, python-format
msgid "The definition of condition \"%(cd)s\" is invalid: %(definition)s"
msgstr ""

#: heat/engine/conditions.py:59
#, python-format
msgid "Invalid condition \"%s\""
msgstr ""

#: heat/engine/conditions.py:68
#, python-format
msgid "Circular definition for condition \"%s\""
msgstr ""

#: heat/engine/constraints.py:100
#, python-format
msgid "Invalid type (%s)"
msgstr ""

#: heat/engine/constraints.py:112
#, python-format
msgid "Single schema valid only for %(ltype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:122
#, python-format
msgid "Schema valid only for %(ltype)s or %(mtype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:139
#, python-format
msgid "%(name)s constraint invalid for %(utype)s"
msgstr ""

#: heat/engine/constraints.py:161 heat/engine/parameters.py:96
#, python-format
msgid "Invalid default %(default)s (%(exc)s)"
msgstr ""

#: heat/engine/constraints.py:192
#, python-format
msgid "%s is not an integer."
msgstr ""

#: heat/engine/constraints.py:202
#, python-format
msgid "Value \"%(val)s\" is invalid for data type \"%(type)s\"."
msgstr ""

#: heat/engine/constraints.py:268
#, python-format
msgid "Invalid key %s"
msgstr ""

#: heat/engine/constraints.py:356
msgid "min/max must be numeric"
msgstr ""

#: heat/engine/constraints.py:360
msgid "A range constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:365
#, python-format
msgid "The value must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:367
#, python-format
msgid "The value must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:369
#, python-format
msgid "The value must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:373
#, python-format
msgid "%(value)s is out of range (min: %(min)s, max: %(max)s)"
msgstr ""

#: heat/engine/constraints.py:417
msgid "A length constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:424
msgid "min/max length must be integral"
msgstr ""

#: heat/engine/constraints.py:429
#, python-format
msgid "The length must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:431
#, python-format
msgid "The length must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:433
#, python-format
msgid "The length must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:437
#, python-format
msgid "length (%(length)d) is out of range (min: %(min)s, max: %(max)s)"
msgstr ""

#: heat/engine/constraints.py:468
msgid "A modulo constraint must have a step value and an offset value specified."
msgstr ""

#: heat/engine/constraints.py:474
msgid "step/offset must be numeric"
msgstr ""

#: heat/engine/constraints.py:478
msgid "step/offset must be integer"
msgstr ""

#: heat/engine/constraints.py:483
msgid "step cannot be 0."
msgstr ""

#: heat/engine/constraints.py:487
msgid "offset must be smaller (by absolute value) than step."
msgstr ""

#: heat/engine/constraints.py:492
msgid "step and offset must be both positive or both negative."
msgstr ""

#: heat/engine/constraints.py:497
msgid "The values must be specified."
msgstr ""

#: heat/engine/constraints.py:499
#, python-format
msgid "The value must be a multiple of %(step)s with an offset of %(offset)s."
msgstr ""

#: heat/engine/constraints.py:504
#, python-format
msgid "%(value)s is not a multiple of %(step)s with an offset of %(offset)s"
msgstr ""

#: heat/engine/constraints.py:546
msgid "AllowedValues must be a list"
msgstr ""

#: heat/engine/constraints.py:551
#, python-format
msgid "Allowed values: %s"
msgstr ""

#: heat/engine/constraints.py:555
#, python-format
msgid "%(value)s is not an allowed value %(allowed)s"
msgstr ""

#: heat/engine/constraints.py:592
msgid "AllowedPattern must be a string"
msgstr ""

#: heat/engine/constraints.py:597
#, python-format
msgid "Value must match pattern: %s"
msgstr ""

#: heat/engine/constraints.py:600
#, python-format
msgid "\"%(value)s\" does not match pattern \"%(pattern)s\""
msgstr ""

#: heat/engine/constraints.py:638
#, python-format
msgid "Value must be of type %s"
msgstr ""

#: heat/engine/constraints.py:644
#, python-format
msgid "\"%(value)s\" does not validate %(name)s (constraint not found)"
msgstr ""

#: heat/engine/constraints.py:651
#, python-format
msgid "\"%(value)s\" does not validate %(name)s"
msgstr ""

#: heat/engine/constraints.py:676
#, python-format
msgid "Error validating value '%(value)s'"
msgstr ""

#: heat/engine/constraints.py:677
#, python-format
msgid "Error validating value '%(value)s': %(message)s"
msgstr ""

#: heat/engine/constraints.py:725
msgid "Client name and resource getter name must be specified."
msgstr ""

#: heat/engine/dependencies.py:22
#, python-format
msgid "Circular Dependency Found: %(cycle)s"
msgstr ""

#: heat/engine/environment.py:62
#, python-format
msgid ""
"Invalid hook type \"%(value)s\" for resource breakpoint, acceptable hook "
"types are: %(types)s"
msgstr ""

#: heat/engine/environment.py:80
#, python-format
msgid ""
"Invalid restricted_action type \"%(value)s\" for resource, acceptable "
"restricted_action types are: %(types)s"
msgstr ""

#: heat/engine/environment.py:544 heat/tests/test_resource.py:228
#, python-format
msgid "Resource \"%s\" has no type"
msgstr ""

#: heat/engine/environment.py:547
#, python-format
msgid "Non-empty resource type is required for resource \"%s\""
msgstr ""

#: heat/engine/environment.py:551
#, python-format
msgid "Resource \"%s\" type is not a string"
msgstr ""

#: heat/engine/environment.py:589
#, python-format
msgid "Invalid support status and should be one of %s"
msgstr ""

#: heat/engine/function.py:392
#, python-format
msgid "The function \"%s\" is invalid in this context"
msgstr ""

#: heat/engine/parameter_groups.py:46 heat/engine/parameter_groups.py:56
#: heat/engine/parameter_groups.py:63 heat/engine/parameter_groups.py:72
#: heat/engine/parameter_groups.py:83
msgid "Parameter Groups error"
msgstr ""

#: heat/engine/parameter_groups.py:48
#, python-format
msgid "The %s should be a list."
msgstr ""

#: heat/engine/parameter_groups.py:58
#, python-format
msgid "The %s must be provided for each parameter group."
msgstr ""

#: heat/engine/parameter_groups.py:65
#, python-format
msgid "The %s of parameter group should be a list."
msgstr ""

#: heat/engine/parameter_groups.py:74
#, python-format
msgid "The %s parameter must be assigned to one parameter group only."
msgstr ""

#: heat/engine/parameter_groups.py:85
#, python-format
msgid "The grouped parameter %s does not reference a valid parameter."
msgstr ""

#: heat/engine/parameters.py:86
#, python-format
msgid "Default must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:114
#, python-format
msgid "Invalid %s, expected a mapping"
msgstr ""

#: heat/engine/parameters.py:118
#, python-format
msgid "Invalid key '%(key)s' for %(entity)s"
msgstr ""

#: heat/engine/parameters.py:129
#, python-format
msgid "Missing parameter type for parameter: %s"
msgstr ""

#: heat/engine/parameters.py:134
#, python-format
msgid "Tags property should be a list for parameter: %s"
msgstr ""

#: heat/engine/parameters.py:208
#, python-format
msgid "Invalid Parameter type \"%s\""
msgstr ""

#: heat/engine/parameters.py:232
#, python-format
msgid "Parameter '%(name)s' is invalid: %(exp)s"
msgstr ""

#: heat/engine/parameters.py:406
#, python-format
msgid "Value must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:453
#, python-format
msgid "Value must be valid JSON: %s"
msgstr ""

#: heat/engine/properties.py:80
#, python-format
msgid "Options %(ua)s and %(im)s cannot both be True"
msgstr ""

#: heat/engine/properties.py:97
#, python-format
msgid "Unknown key(s) %s"
msgstr ""

#: heat/engine/properties.py:119
#, python-format
msgid "No %s specified"
msgstr ""

#: heat/engine/properties.py:129
#, python-format
msgid "%(schema)s supplied for %(type)s %(data)s"
msgstr ""

#: heat/engine/properties.py:264
#, python-format
msgid "Value '%s' is not an integer"
msgstr ""

#: heat/engine/properties.py:280
#, python-format
msgid "Value must be a string; got %r"
msgstr ""

#: heat/engine/properties.py:312
#, python-format
msgid "\"%s\" is not a map"
msgstr ""

#: heat/engine/properties.py:325
#, python-format
msgid "\"%s\" is not a list"
msgstr ""

#: heat/engine/properties.py:345 heat/engine/properties.py:348
#, python-format
msgid "\"%s\" is not a valid boolean"
msgstr ""

#: heat/engine/properties.py:417
#, python-format
msgid "Unknown Property %s"
msgstr ""

#: heat/engine/properties.py:442
#, python-format
msgid "Property %s not implemented yet"
msgstr ""

#: heat/engine/properties.py:463 heat/engine/properties.py:516
#, python-format
msgid "Invalid Property %s"
msgstr ""

#: heat/engine/properties.py:532
#, python-format
msgid "Property %s not assigned"
msgstr ""

#: heat/engine/properties_group.py:52
msgid "Properties group schema incorrectly specified."
msgstr ""

#: heat/engine/properties_group.py:54
#, python-format
msgid "%(msg)s Schema should be a mapping, found %(t)s instead."
msgstr ""

#: heat/engine/properties_group.py:58
#, python-format
msgid "%(msg)s Schema should be one-key dict."
msgstr ""

#: heat/engine/properties_group.py:63
#, python-format
msgid ""
"%(msg)s Properties group schema key should be one of the operators: "
"%(op)s."
msgstr ""

#: heat/engine/properties_group.py:68
#, python-format
msgid ""
"%(msg)s Schemas' values should be lists of properties names or nested "
"schemas."
msgstr ""

#: heat/engine/properties_group.py:71
#, python-format
msgid ""
"%(msg)s List items should be properties list-type names with format "
"\"[prop, prop_child, prop_sub_child, ...]\" or nested properties group "
"schemas."
msgstr ""

#: heat/engine/resource.py:79
#, python-format
msgid "The resource %(res)s could not perform scaling action: %(reason)s"
msgstr ""

#: heat/engine/resource.py:130
msgid "Detailed information about resource."
msgstr ""

#: heat/engine/resource.py:309
msgid "No description available"
msgstr ""

#: heat/engine/resource.py:684
#, python-format
msgid "Update to properties %(props)s of %(name)s (%(res)s)"
msgstr ""

#: heat/engine/resource.py:816
msgid "Required extension {0} in {1} service is not available."
msgstr ""

#: heat/engine/resource.py:821
msgid "{0} {1} endpoint is not in service catalog."
msgstr ""

#: heat/engine/resource.py:1180
#, python-format
msgid ""
"Invalid external resource: Resource %(external_id)s (%(type)s) can not be"
" found."
msgstr ""

#: heat/engine/resource.py:1197
#, python-format
msgid "State %s invalid for create"
msgstr ""

#: heat/engine/resource.py:1317
msgid "Resource ID was not provided."
msgstr ""

#: heat/engine/resource.py:1597 heat/tests/test_resource.py:523
msgid "Update status to COMPLETE for FAILED resource neither update nor replace."
msgstr ""

#: heat/engine/resource.py:1620
#, python-format
msgid "Update to property %(prop)s of %(name)s (%(res)s)"
msgstr ""

#: heat/engine/resource.py:1667
msgid "Resource update already requested"
msgstr ""

#: heat/engine/resource.py:1742
#, python-format
msgid "Can not check %s, resource not created yet."
msgstr ""

#: heat/engine/resource.py:1745
#, python-format
msgid "Resource %s not created yet."
msgstr ""

#: heat/engine/resource.py:1766
#, python-format
msgid "'%(attr)s': expected '%(expected)s', got '%(current)s'"
msgstr ""

#: heat/engine/resource.py:1788
#, python-format
msgid "State %s invalid for suspend"
msgstr ""

#: heat/engine/resource.py:1809
#, python-format
msgid "State %s invalid for resume"
msgstr ""

#: heat/engine/resource.py:1858
msgid "limit cannot be less than 4"
msgstr ""

#: heat/engine/resource.py:1906 heat/engine/template_common.py:117
#, python-format
msgid "Invalid deletion policy \"%s\""
msgstr ""

#: heat/engine/resource.py:1911
#, python-format
msgid "\"%s\" deletion policy not supported"
msgstr ""

#: heat/engine/resource.py:2307 heat/engine/stack.py:1059
#, python-format
msgid "Invalid action %s"
msgstr ""

#: heat/engine/resource.py:2310 heat/engine/stack.py:1062
#, python-format
msgid "Invalid status %s"
msgstr ""

#: heat/engine/resource.py:2423
#, python-format
msgid "Signal resource during %s"
msgstr ""

#: heat/engine/resource.py:2430
#, python-format
msgid "Invalid hook type \"%(hook)s\" for %(resource)s"
msgstr ""

#: heat/engine/resource.py:2435
#, python-format
msgid "The \"%(hook)s\" hook is not defined on %(resource)s"
msgstr ""

#: heat/engine/scheduler.py:60
#, python-format
msgid "%s Timed out"
msgstr ""

#: heat/engine/service.py:687
#, python-format
msgid ""
"You have reached the maximum stacks per tenant, %d. Please delete some "
"stacks."
msgstr ""

#: heat/engine/service.py:925
msgid "PATCH update to non-COMPLETE stack"
msgstr ""

#: heat/engine/service.py:1035
msgid "Updating a stack when it is suspended"
msgstr ""

#: heat/engine/service.py:1039
msgid "Updating a stack when it is deleting"
msgstr ""

#: heat/engine/service.py:1198
#, python-format
msgid "Cancelling update when stack is %s"
msgstr ""

#: heat/engine/service.py:1244
#, python-format
msgid ""
"Cannot cancel stack %(stack_name)s: lock held by unknown engine "
"%(engine_id)s"
msgstr ""

#: heat/engine/service.py:1273
msgid "No Template provided."
msgstr ""

#: heat/engine/service.py:1280 heat/tests/test_validate.py:1909
#, python-format
msgid "Invalid codes in ignore_errors : %s"
msgstr ""

#: heat/engine/service.py:1396 heat/engine/resources/stack_resource.py:669
#, python-format
msgid "Specified output key %s not found."
msgstr ""

#: heat/engine/service.py:1639
#, python-format
msgid "Template with version %s not found"
msgstr ""

#: heat/engine/service.py:2143
msgid "Deleting in-progress snapshot"
msgstr ""

#: heat/engine/service.py:2298
#, python-format
msgid "Migration of nested stack %s"
msgstr ""

#: heat/engine/service.py:2412
#, python-format
msgid "Engine went down during stack %s"
msgstr ""

#: heat/engine/service_software_config.py:86
msgid "server_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:119
#, python-format
msgid "deployments of server %s"
msgstr ""

#: heat/engine/service_software_config.py:292
msgid "deployment_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:311
#, python-format
msgid "Deployment exited with non-zero status code: %s"
msgstr ""

#: heat/engine/service_software_config.py:339
msgid "Outputs received"
msgstr ""

#: heat/engine/software_config_io.py:49
msgid "Name of the input."
msgstr ""

#: heat/engine/software_config_io.py:54
msgid "Description of the input."
msgstr ""

#: heat/engine/software_config_io.py:58
msgid "Type of the value of the input."
msgstr ""

#: heat/engine/software_config_io.py:64
msgid "Default value for the input if none is specified."
msgstr ""

#: heat/engine/software_config_io.py:68
msgid ""
"Replace the deployment instead of updating it when the input value "
"changes."
msgstr ""

#: heat/engine/software_config_io.py:77
msgid "Name of the output."
msgstr ""

#: heat/engine/software_config_io.py:82
msgid "Description of the output."
msgstr ""

#: heat/engine/software_config_io.py:86
msgid "Type of the value of the output."
msgstr ""

#: heat/engine/software_config_io.py:92
msgid ""
"Denotes that the deployment is in an error state if this output has a "
"value."
msgstr ""

#: heat/engine/stack.py:96
msgid "Unexpected exit while IN_PROGRESS."
msgstr ""

#: heat/engine/stack.py:145
#, python-format
msgid ""
"Invalid stack name %s must contain only alphanumeric or \"_-.\" "
"characters, must start with alpha and must be 255 characters or less."
msgstr ""

#: heat/engine/stack.py:151
#, python-format
msgid "Invalid stack name %s, must be a string"
msgstr ""

#: heat/engine/stack.py:303
msgid "Attempt to use stored_context with no user_creds"
msgstr ""

#: heat/engine/stack.py:583 heat/objects/stack.py:249
#, python-format
msgid "No stack exists with id \"%s\""
msgstr ""

#: heat/engine/stack.py:947
#, python-format
msgid "Duplicate names %s"
msgstr ""

#: heat/engine/stack.py:1664
#, python-format
msgid "Attempted to %s an IN_PROGRESS stack"
msgstr ""

#: heat/engine/support.py:45
#, python-format
msgid "previous_status must be SupportStatus instead of %s"
msgstr ""

#: heat/engine/support.py:50
#, python-format
msgid "Specified status is invalid, defaulting to %s"
msgstr ""

#: heat/engine/template.py:45
#, python-format
msgid "Ambiguous versions (%s)"
msgstr ""

#: heat/engine/template.py:50
msgid "Template version was not provided"
msgstr ""

#: heat/engine/template.py:67
#, python-format
msgid "Could not load %(name)s: %(error)s"
msgstr ""

#: heat/engine/template.py:84
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be one of: %(available)s"
msgstr ""

#: heat/engine/template.py:87
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be: %(available)s"
msgstr ""

#: heat/engine/template.py:320
msgid "Each Resource must contain a Type key."
msgstr ""

#: heat/engine/template.py:324
#, python-format
msgid "Resources must contain Resource. Found a [%s] instead"
msgstr ""

#: heat/engine/template_common.py:58
#, python-format
msgid "Resource %(name)s %(key)s type must be %(typename)s"
msgstr ""

#: heat/engine/template_common.py:68
#, python-format
msgid "Resource %(name)s is missing \"%(type_key)s\""
msgstr ""

#: heat/engine/template_common.py:102
#, python-format
msgid "Resource %(name)s %(key)s must be a list of strings"
msgstr ""

#: heat/engine/template_common.py:147
#, python-format
msgid "Condition definitions must be a map. Found a %s instead"
msgstr ""

#: heat/engine/template_common.py:170
#, python-format
msgid "Output definitions must be a map. Found a %s instead"
msgstr ""

#: heat/engine/template_common.py:178
#, python-format
msgid "Each output definition must contain a %s key."
msgstr ""

#: heat/engine/template_files.py:48 heat/engine/template_files.py:124
#, python-format
msgid "Expected dict, got %(cname)s for files, (value is %(val)s)"
msgstr ""

#: heat/engine/translation.py:98
#, python-format
msgid "There is no rule %(rule)s. List of allowed rules is: %(rules)s."
msgstr ""

#: heat/engine/translation.py:105
msgid "\"translation_path\" should be non-empty list with path to translate."
msgstr ""

#: heat/engine/translation.py:111
msgid ""
"\"value_path\", \"value\" and \"value_name\" are mutually exclusive and "
"cannot be specified at the same time."
msgstr ""

#: heat/engine/translation.py:117
msgid "\"value\" must be list type when rule is Add."
msgstr ""

#: heat/engine/translation.py:121
#, python-format
msgid "\"client_plugin\" and \"finder\" should be specified for %s rule"
msgstr ""

#: heat/engine/translation.py:245
#, python-format
msgid ""
"Incorrect translation rule using - cannot resolve Add rule for non-list "
"translation value \"%s\"."
msgstr ""

#: heat/engine/translation.py:295
#, python-format
msgid "Cannot define the following properties at the same time: %s"
msgstr ""

#: heat/engine/cfn/functions.py:121
#, python-format
msgid "Arguments to \"%s\" must be of the form [resource_name, attribute]"
msgstr ""

#: heat/engine/cfn/functions.py:148
#, python-format
msgid "Arguments to \"%s\" must be of the form [index, collection]"
msgstr ""

#: heat/engine/cfn/functions.py:169
#, python-format
msgid "\"%(fn_name)s\": %(err)s"
msgstr ""

#: heat/engine/cfn/functions.py:173
#, python-format
msgid "Index to \"%s\" must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:185
#, python-format
msgid "Index to \"%s\" must be an integer"
msgstr ""

#: heat/engine/cfn/functions.py:196
#, python-format
msgid "Arguments to %s not fully resolved"
msgstr ""

#: heat/engine/cfn/functions.py:233 heat/engine/cfn/functions.py:239
#: heat/engine/cfn/functions.py:282 heat/engine/cfn/functions.py:288
#: heat/engine/hot/functions.py:594 heat/engine/hot/functions.py:600
#: heat/engine/hot/functions.py:654 heat/engine/hot/functions.py:663
#: heat/engine/hot/functions.py:732 heat/engine/hot/functions.py:796
#: heat/engine/hot/functions.py:801 heat/engine/hot/functions.py:1125
#: heat/engine/hot/functions.py:1135 heat/engine/hot/functions.py:1626
#: heat/engine/hot/functions.py:1686
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/cfn/functions.py:246
#, python-format
msgid "Delimiter for %s must be string"
msgstr ""

#: heat/engine/cfn/functions.py:249
#, python-format
msgid "String to split must be string; got %s"
msgstr ""

#: heat/engine/cfn/functions.py:309
#, python-format
msgid "\"%s\" argument must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:342
#, python-format
msgid "Wrong Arguments try: \"%s\""
msgstr ""

#: heat/engine/cfn/functions.py:345
#, python-format
msgid "%s Key Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:348
#, python-format
msgid "%s Value Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:354
msgid "Member list must be a list"
msgstr ""

#: heat/engine/cfn/functions.py:358
msgid "Member list items must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:428
#, python-format
msgid "Arguments to \"%s\" must be of the form: [condition]"
msgstr ""

#: heat/engine/cfn/parameters.py:33 heat/engine/hot/parameters.py:186
msgid "Stack ID"
msgstr ""

#: heat/engine/cfn/parameters.py:38 heat/engine/hot/parameters.py:195
msgid "Stack Name"
msgstr ""

#: heat/engine/cfn/template.py:82 heat/engine/hot/template.py:106
#: heat/engine/hot/template.py:109
#, python-format
msgid "\"%s\" is not a valid template section"
msgstr ""

#: heat/engine/cfn/template.py:85 heat/engine/hot/template.py:112
#, python-format
msgid "Section %s can not be accessed directly."
msgstr ""

#: heat/engine/clients/__init__.py:33
msgid "Fully qualified class name to use as a client backend."
msgstr ""

#: heat/engine/clients/__init__.py:96
#, python-format
msgid "Invalid cloud_backend setting in heat.conf detected - %s"
msgstr ""

#: heat/engine/clients/client_exception.py:19
#, python-format
msgid "No %(entity)s matching %(args)s."
msgstr ""

#: heat/engine/clients/client_exception.py:27
#, python-format
msgid "No %(entity)s unique match found for %(args)s."
msgstr ""

#: heat/engine/clients/client_exception.py:31
#, python-format
msgid "No network interface found for server %(id)s."
msgstr ""

#: heat/engine/clients/os/cinder.py:56
msgid "No volume service available."
msgstr ""

#: heat/engine/clients/os/cinder.py:155
msgid "Volume detachment failed"
msgstr ""

#: heat/engine/clients/os/cinder.py:173
msgid "Volume attachment failed"
msgstr ""

#: heat/engine/clients/os/nova.py:247
#, python-format
msgid "Message: %(message)s, Code: %(code)s"
msgstr ""

#: heat/engine/clients/os/nova.py:254
#, python-format
msgid "%s is not active"
msgstr ""

#: heat/engine/clients/os/nova.py:501
#, python-format
msgid "Server %(name)s delete failed: (%(code)s) %(message)s"
msgstr ""

#: heat/engine/clients/os/nova.py:537
#, python-format
msgid "Resizing to '%(flavor)s' failed, status '%(status)s'"
msgstr ""

#: heat/engine/clients/os/nova.py:549
#, python-format
msgid "Could not confirm resize of server %s"
msgstr ""

#: heat/engine/clients/os/nova.py:567
#, python-format
msgid "Confirm resize for server %s failed"
msgstr ""

#: heat/engine/clients/os/nova.py:593
#, python-format
msgid "Rebuilding server failed, status '%s'"
msgstr ""

#: heat/engine/clients/os/nova.py:600
msgid "nova server metadata needs to be a Map."
msgstr ""

#: heat/engine/clients/os/nova.py:672
#, python-format
msgid "Cannot get console url: %s"
msgstr ""

#: heat/engine/clients/os/nova.py:694
#, python-format
msgid "Failed to attach volume %(vol)s to server %(srv)s - %(err)s"
msgstr ""

#: heat/engine/clients/os/nova.py:713
#, python-format
msgid "Could not detach attachment %(att)s from server %(srv)s."
msgstr ""

#: heat/engine/clients/os/sahara.py:51
#, python-format
msgid ""
"Requested plugin '%(plugin)s' doesn't support version '%(version)s'. "
"Allowed versions are %(allowed)s"
msgstr ""

#: heat/engine/clients/os/sahara.py:117
#, python-format
msgid "Error retrieving %(entity)s list from sahara: %(err)s"
msgstr ""

#: heat/engine/clients/os/senlin.py:139
#, python-format
msgid ""
"Unable to find senlin profile type '%(pt)s', available profile types are "
"%(pts)s."
msgstr ""

#: heat/engine/clients/os/senlin.py:156
#, python-format
msgid ""
"Unable to find senlin policy type '%(pt)s', available policy types are "
"%(pts)s."
msgstr ""

#: heat/engine/clients/os/swift.py:160
#, python-format
msgid ""
"Total size of files to download (%(size)s bytes) exceeds maximum allowed "
"(%(limit)s bytes)."
msgstr ""

#: heat/engine/clients/os/swift.py:171
#, python-format
msgid "Could not fetch files from container %(container)s, reason: %(reason)s."
msgstr ""

#: heat/engine/clients/os/trove.py:56
#, python-format
msgid ""
"Datastore version %(dsversion)s for datastore type %(dstype)s is not "
"valid. Allowed versions are %(allowed)s."
msgstr ""

#: heat/engine/clients/os/trove.py:65
#, python-format
msgid "Not allowed - %(dsver)s without %(dstype)s."
msgstr ""

#: heat/engine/clients/os/zaqar.py:77
msgid "Queue name must be a string"
msgstr ""

#: heat/engine/clients/os/zaqar.py:79
msgid "Queue name length must be 1-64"
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:44
msgid "Fully qualified class name to use as a keystone backend."
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:224
#, python-format
msgid "roles %s"
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:312
#: heat/engine/clients/os/keystone/heat_keystoneclient.py:387
#, python-format
msgid "Can't find role %s"
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:322
msgid ""
"Cannot get stack domain user token, no stack domain id configured, please"
" fix your heat.conf"
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:410
#, python-format
msgid "User %s in invalid domain"
msgstr ""

#: heat/engine/clients/os/keystone/heat_keystoneclient.py:412
#, python-format
msgid "User %s in invalid project"
msgstr ""

#: heat/engine/clients/os/neutron/__init__.py:259
#, python-format
msgid "Unable to find %(resource)s with name or id '%(name_or_id)s'"
msgstr ""

#: heat/engine/clients/os/neutron/neutron_constraints.py:119
#, python-format
msgid ""
"Unable to find neutron provider '%(provider)s', available providers are "
"%(providers)s."
msgstr ""

#: heat/engine/constraint/common_constraints.py:72
#, python-format
msgid "'%s' is a FQDN. It should be a relative domain name."
msgstr ""

#: heat/engine/constraint/common_constraints.py:78
#, python-format
msgid ""
"'%(value)s' contains '%(length)s' characters. Adding a domain name will "
"cause it to exceed the maximum length of a FQDN of '%(max_len)s'."
msgstr ""

#: heat/engine/constraint/common_constraints.py:159
#, python-format
msgid "Invalid CRON expression: %s"
msgstr ""

#: heat/engine/constraint/common_constraints.py:173
#, python-format
msgid "Invalid timezone: %s"
msgstr ""

#: heat/engine/constraint/common_constraints.py:188
msgid "Expiration time is out of date."
msgstr ""

#: heat/engine/constraint/common_constraints.py:190
msgid "Expiration {0} is invalid: {1}"
msgstr ""

#: heat/engine/hot/functions.py:37
msgid ""
"The maximum number of elements in collection expression can take for its "
"evaluation."
msgstr ""

#: heat/engine/hot/functions.py:41
msgid ""
"The maximum size of memory in bytes that expression can take for its "
"evaluation."
msgstr ""

#: heat/engine/hot/functions.py:76
#, python-format
msgid "Function \"%s\" must have arguments"
msgstr ""

#: heat/engine/hot/functions.py:86
#, python-format
msgid "Argument to \"%s\" must be string or list"
msgstr ""

#: heat/engine/hot/functions.py:90
#, python-format
msgid "Parameter name in \"%s\" must be string"
msgstr ""

#: heat/engine/hot/functions.py:101
#, python-format
msgid "\"%s\" can't traverse path"
msgstr ""

#: heat/engine/hot/functions.py:104
#, python-format
msgid "Path components in \"%s\" must be strings"
msgstr ""

#: heat/engine/hot/functions.py:112
#, python-format
msgid ""
"Path components in '%s' must be a string that can be parsed into an "
"integer."
msgstr ""

#: heat/engine/hot/functions.py:172 heat/engine/hot/functions.py:323
#: heat/engine/hot/functions.py:1447
#, python-format
msgid "Argument to \"%s\" must be a list"
msgstr ""

#: heat/engine/hot/functions.py:176
#, python-format
msgid ""
"Arguments to \"%s\" must be of the form [resource_name, attribute, "
"(path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:313
#, python-format
msgid ""
"Arguments to \"%s\" can be of the next forms: [resource_name] or "
"[resource_name, attribute, (path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:376
#, python-format
msgid "\"%s\" parameters must be a mapping"
msgstr ""

#: heat/engine/hot/functions.py:381 heat/engine/hot/functions.py:908
#, python-format
msgid "Arguments to \"%s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:388
#, python-format
msgid ""
"%s:\n"
"              template: This is var1 template var2\n"
"              params:\n"
"                var1: a\n"
"                var2: string"
msgstr ""

#: heat/engine/hot/functions.py:393
#, python-format
msgid "\"%(fn_name)s\" syntax should be %(example)s"
msgstr ""

#: heat/engine/hot/functions.py:405
#, python-format
msgid ""
"\"%(name)s\" params must be strings or numbers, param %(param)s is not "
"valid"
msgstr ""

#: heat/engine/hot/functions.py:419
#, python-format
msgid "\"%s\" template must be a string"
msgstr ""

#: heat/engine/hot/functions.py:422
#, python-format
msgid "\"%s\" params must be a map"
msgstr ""

#: heat/engine/hot/functions.py:430
#, python-format
msgid "\"%s\" param placeholders must be strings"
msgstr ""

#: heat/engine/hot/functions.py:450
#, python-format
msgid "The following params were not found in the template: %s"
msgstr ""

#: heat/engine/hot/functions.py:483
#, python-format
msgid ""
"%(name)s has an undefined or empty value for param %(param)s, must be a "
"defined non-empty value"
msgstr ""

#: heat/engine/hot/functions.py:502
#, python-format
msgid ""
"\"%(name)s\" params must be strings, numbers, list or map. Failed to json"
" serialize %(value)s"
msgstr ""

#: heat/engine/hot/functions.py:508
#, python-format
msgid "\"%s\" params must be strings, numbers, list or map."
msgstr ""

#: heat/engine/hot/functions.py:558
#, python-format
msgid "Argument to \"%s\" must be a string"
msgstr ""

#: heat/engine/hot/functions.py:565
#, python-format
msgid ""
"No content found in the \"files\" section for %(fn_name)s path: "
"%(file_key)s"
msgstr ""

#: heat/engine/hot/functions.py:609 heat/engine/hot/functions.py:674
#, python-format
msgid "\"%s\" must operate on a list"
msgstr ""

#: heat/engine/hot/functions.py:613 heat/engine/hot/functions.py:681
#, python-format
msgid "\"%s\" delimiter must be a string"
msgstr ""

#: heat/engine/hot/functions.py:621
#, python-format
msgid "Items to join must be strings not %s"
msgstr ""

#: heat/engine/hot/functions.py:685
#, python-format
msgid "Items to join must be string, map or list not %s"
msgstr ""

#: heat/engine/hot/functions.py:697
#, python-format
msgid "Items to join must be string, map or list. %s failed json serialization"
msgstr ""

#: heat/engine/hot/functions.py:724
#, python-format
msgid "\"%s\" : [ { \"key1\": \"val1\" }, { \"key2\": \"val2\" } ]"
msgstr ""

#: heat/engine/hot/functions.py:741
msgid "Incorrect arguments: Items to merge must be maps."
msgstr ""

#: heat/engine/hot/functions.py:771
#, python-format
msgid ""
"\"%s\" : [ { \"key1\": \"val1\" }, {\"keys\": {\"key1\": \"key2\"}, "
"\"values\": {\"val1\": \"val2\"}}]"
msgstr ""

#: heat/engine/hot/functions.py:785
#, python-format
msgid ""
"Incorrect arguments: to \"%(fn_name)s\", arguments must be a list of "
"maps. Example:  %(example)s"
msgstr ""

#: heat/engine/hot/functions.py:813
#, python-format
msgid "key replacement %s collides with a key in the input map"
msgstr ""

#: heat/engine/hot/functions.py:818
#, python-format
msgid "key replacement %s collides with a key in the output map"
msgstr ""

#: heat/engine/hot/functions.py:856
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be one of: %(allowed)s"
msgstr ""

#: heat/engine/hot/functions.py:878
#, python-format
msgid "The function %s is not supported in this version of HOT."
msgstr ""

#: heat/engine/hot/functions.py:921
#, python-format
msgid "\"repeat\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:930
#, python-format
msgid "The \"for_each\" argument to \"%s\" must contain a map"
msgstr ""

#: heat/engine/hot/functions.py:937
#, python-format
msgid "The values of the \"for_each\" argument to \"%s\" must be lists"
msgstr ""

#: heat/engine/hot/functions.py:971
#, python-format
msgid "For %s, the length of for_each values should be equal if no nested loop."
msgstr ""

#: heat/engine/hot/functions.py:1003
#, python-format
msgid "The values of the \"for_each\" argument to \"%s\" must be lists or maps"
msgstr ""

#: heat/engine/hot/functions.py:1048
#, python-format
msgid "\"permutations\" should be boolean type for %s function."
msgstr ""

#: heat/engine/hot/functions.py:1074
#, python-format
msgid "Argument to function \"%s\" must be a list of strings"
msgstr ""

#: heat/engine/hot/functions.py:1078
#, python-format
msgid "Function \"%s\" usage: [\"<algorithm>\", \"<value>\"]"
msgstr ""

#: heat/engine/hot/functions.py:1084
#, python-format
msgid "Algorithm must be one of %s"
msgstr ""

#: heat/engine/hot/functions.py:1148
#, python-format
msgid "Incorrect index to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/hot/functions.py:1154
#, python-format
msgid "Incorrect index to \"%(fn_name)s\" should be between 0 and %(max_index)s"
msgstr ""

#: heat/engine/hot/functions.py:1195
#, python-format
msgid "Arguments to \"%s\" must be a map."
msgstr ""

#: heat/engine/hot/functions.py:1208
#, python-format
msgid "\"%(name)s\" syntax should be %(example)s"
msgstr ""

#: heat/engine/hot/functions.py:1218
#, python-format
msgid "The \"expression\" argument to %s must contain a string."
msgstr ""

#: heat/engine/hot/functions.py:1225
#, python-format
msgid "Bad expression %s."
msgstr ""

#: heat/engine/hot/functions.py:1255
#, python-format
msgid "Arguments to \"%s\" must be of the form: [value_1, value_2]"
msgstr ""

#: heat/engine/hot/functions.py:1292
#, python-format
msgid ""
"Arguments to \"%s\" must be of the form: [condition_name, value_if_true, "
"value_if_false]"
msgstr ""

#: heat/engine/hot/functions.py:1352
#, python-format
msgid "Arguments to \"%s\" must be a list of conditions"
msgstr ""

#: heat/engine/hot/functions.py:1355
#, python-format
msgid "The minimum number of condition arguments to \"%s\" is 2."
msgstr ""

#: heat/engine/hot/functions.py:1380
#, python-format
msgid "Argument to \"%s\" must be a condition"
msgstr ""

#: heat/engine/hot/functions.py:1451
#, python-format
msgid ""
"\"%(fn)s\" expected 2 arguments of the form [values, sequence] but got "
"%(len)d arguments instead"
msgstr ""

#: heat/engine/hot/functions.py:1463
#, python-format
msgid "\"%s\" only works with lists"
msgstr ""

#: heat/engine/hot/functions.py:1470
#, python-format
msgid "\"%(fn)s\" filters a list of values"
msgstr ""

#: heat/engine/hot/functions.py:1508
#, python-format
msgid "The \"%(arg)s\" argument to \"%(fn_name)s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:1521
#, python-format
msgid "Invalid URL port \"%(port)s\" for %(fn_name)s called with %(args)s"
msgstr ""

#: heat/engine/hot/functions.py:1529
#, python-format
msgid "Invalid URL port %d, must be in range 1-65535"
msgstr ""

#: heat/engine/hot/functions.py:1534
#, python-format
msgid "The \"%(arg)s\" argument to \"%(fn_name)s\" must be a string"
msgstr ""

#: heat/engine/hot/functions.py:1543
#, python-format
msgid "The arguments to \"%s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:1548
#, python-format
msgid "Invalid arguments to \"%(fn)s\": %(args)s"
msgstr ""

#: heat/engine/hot/functions.py:1560
#, python-format
msgid "URL \"%s\" should not contain ':'"
msgstr ""

#: heat/engine/hot/functions.py:1616
#, python-format
msgid "\"%s\" : [ [ <value 1>, <value 2> ], [ <value 3>, <value 4> ] ]"
msgstr ""

#: heat/engine/hot/functions.py:1636
#, python-format
msgid ""
"Incorrect arguments: Items to concat must be lists. %(args)s contains an "
"item that is not a list: %(item)s"
msgstr ""

#: heat/engine/hot/functions.py:1691
#, python-format
msgid "Arguments to \"%s\" must be of the form: [value1, [value1, value2]]"
msgstr ""

#: heat/engine/hot/functions.py:1700
#, python-format
msgid "Second argument to \"%s\" should be a sequence."
msgstr ""

#: heat/engine/hot/parameters.py:80
msgid "No constraint expressed"
msgstr ""

#: heat/engine/hot/parameters.py:90
#, python-format
msgid "Invalid parameter constraints for parameter %s, expected a list"
msgstr ""

#: heat/engine/hot/parameters.py:190
msgid "Project ID"
msgstr ""

#: heat/engine/hot/template.py:151
#, python-format
msgid "\"%%s\" is not a valid keyword inside a %s definition"
msgstr ""

#: heat/engine/hot/template.py:154
#, python-format
msgid "Each %(object_name)s must contain a %(sub_section)s key."
msgstr ""

#: heat/engine/hot/template.py:166
#, python-format
msgid ""
"\"%(section)s\" must contain a map of %(obj_name)s maps. Found a "
"[%(_type)s] instead"
msgstr ""

#: heat/engine/hot/template.py:233
#, python-format
msgid "Invalid keyword(s) inside a resource definition: %s"
msgstr ""

#: heat/engine/notification/__init__.py:26
msgid "Default notification level for outgoing notifications."
msgstr ""

#: heat/engine/notification/__init__.py:29
msgid "Default publisher_id for outgoing notifications."
msgstr ""

#: heat/engine/resources/alarm_base.py:44
msgid "Description for the alarm."
msgstr ""

#: heat/engine/resources/alarm_base.py:49
msgid "True if alarm evaluation/actioning is enabled."
msgstr ""

#: heat/engine/resources/alarm_base.py:55
msgid "A list of URLs (webhooks) to invoke when state transitions to alarm."
msgstr ""

#: heat/engine/resources/alarm_base.py:61
msgid "A list of URLs (webhooks) to invoke when state transitions to ok."
msgstr ""

#: heat/engine/resources/alarm_base.py:67
msgid ""
"A list of URLs (webhooks) to invoke when state transitions to "
"insufficient-data."
msgstr ""

#: heat/engine/resources/alarm_base.py:73
msgid "A list of Zaqar queues to post to when state transitions to alarm."
msgstr ""

#: heat/engine/resources/alarm_base.py:85
msgid "A list of Zaqar queues to post to when state transitions to ok."
msgstr ""

#: heat/engine/resources/alarm_base.py:97
msgid ""
"A list of Zaqar queues to post to when state transitions to insufficient-"
"data."
msgstr ""

#: heat/engine/resources/alarm_base.py:109
msgid ""
"False to trigger actions when the threshold is reached AND the alarm's "
"state has changed. By default, actions are called each time the threshold"
" is reached."
msgstr ""

#: heat/engine/resources/alarm_base.py:117
#: heat/engine/resources/openstack/monasca/alarm_definition.py:87
msgid "Severity of the alarm."
msgstr ""

#: heat/engine/resources/alarm_base.py:127
msgid ""
"Describe time constraints for the alarm. Only evaluate the alarm if the "
"time at evaluation is within this time constraint. Start point(s) of the "
"constraint are specified with a cron expression, whereas its duration is "
"given in seconds."
msgstr ""

#: heat/engine/resources/alarm_base.py:138
msgid "Name for the time constraint."
msgstr ""

#: heat/engine/resources/alarm_base.py:143
msgid "Start time for the time constraint. A CRON expression property."
msgstr ""

#: heat/engine/resources/alarm_base.py:153
msgid "Description for the time constraint."
msgstr ""

#: heat/engine/resources/alarm_base.py:157
msgid "Duration for the time constraint."
msgstr ""

#: heat/engine/resources/alarm_base.py:165
msgid "Timezone for the time constraint (eg. 'Asia/Taipei', 'Europe/Amsterdam')."
msgstr ""

#: heat/engine/resources/signal_responder.py:378
#: heat/engine/resources/openstack/heat/swiftsignal.py:278
#, python-format
msgid "Failed to parse JSON data: %s"
msgstr ""

#: heat/engine/resources/stack_resource.py:267
#, python-format
msgid "Recursion depth exceeds %d."
msgstr ""

#: heat/engine/resources/stack_resource.py:456
msgid "Stack unknown status"
msgstr ""

#: heat/engine/resources/stack_resource.py:613
#, python-format
msgid "Cannot suspend %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:623
#, python-format
msgid "Cannot resume %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:633
#, python-format
msgid "Cannot check %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_user.py:55
msgid "Can't get user token, user not yet created"
msgstr ""

#: heat/engine/resources/stack_user.py:61
msgid "Can't get user token without password"
msgstr ""

#: heat/engine/resources/stack_user.py:131
#, python-format
msgid "Error creating ec2 keypair for user %s"
msgstr ""

#: heat/engine/resources/template_resource.py:81
msgid "Only Templates with an extension of .yaml or .template are supported"
msgstr ""

#: heat/engine/resources/template_resource.py:101
#, python-format
msgid "Could not fetch remote template \"%(name)s\": %(exc)s"
msgstr ""

#: heat/engine/resources/template_resource.py:225
#, python-format
msgid "Unknown error retrieving %s"
msgstr ""

#: heat/engine/resources/template_resource.py:234
#, python-format
msgid "Required property %(n)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:242
#, python-format
msgid ""
"Property %(n)s type mismatch between facade %(type)s (%(fs_type)s) and "
"provider (%(ps_type)s)"
msgstr ""

#: heat/engine/resources/template_resource.py:251
#, python-format
msgid "Provider requires property %(n)s unknown in facade %(type)s"
msgstr ""

#: heat/engine/resources/template_resource.py:260
#, python-format
msgid "Attribute %(attr)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:272
#, python-format
msgid "Failed to retrieve template data: %s"
msgstr ""

#: heat/engine/resources/volume_base.py:60
msgid "Volume create failed"
msgstr ""

#: heat/engine/resources/volume_base.py:110
msgid "Volume backup failed"
msgstr ""

#: heat/engine/resources/volume_base.py:122
msgid "Volume in use"
msgstr ""

#: heat/engine/resources/volume_base.py:168
#, python-format
msgid ""
"\"%s\" deletion policy not supported - volume backup service is not "
"enabled."
msgstr ""

#: heat/engine/resources/wait_condition.py:78
msgid "Metadata format invalid"
msgstr ""

#: heat/engine/resources/wait_condition.py:125
#: heat/engine/resources/openstack/heat/swiftsignal.py:44
#, python-format
msgid "%(len)d of %(count)d received - %(reasons)s"
msgstr ""

#: heat/engine/resources/wait_condition.py:127
#: heat/engine/resources/openstack/heat/swiftsignal.py:46
#, python-format
msgid "%(len)d of %(count)d received"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:78
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:120
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:125
#: heat/engine/resources/aws/autoscaling/launch_config.py:95
#: heat/engine/resources/aws/autoscaling/launch_config.py:100
#: heat/engine/resources/aws/ec2/instance.py:125
#: heat/engine/resources/aws/ec2/instance.py:130
#: heat/engine/resources/aws/ec2/instance.py:135
#: heat/engine/resources/aws/ec2/instance.py:140
#: heat/engine/resources/aws/ec2/instance.py:145
#: heat/engine/resources/aws/ec2/instance.py:150
#: heat/engine/resources/aws/ec2/instance.py:168
#: heat/engine/resources/aws/ec2/instance.py:213
#: heat/engine/resources/aws/iam/user.py:51
#: heat/engine/resources/aws/iam/user.py:55
#: heat/engine/resources/aws/iam/user.py:146
#: heat/engine/resources/aws/iam/user.py:156
#: heat/engine/resources/aws/lb/loadbalancer.py:387
#: heat/engine/resources/aws/lb/loadbalancer.py:392
#: heat/engine/resources/aws/lb/loadbalancer.py:401
#: heat/engine/resources/aws/lb/loadbalancer.py:406
#: heat/engine/resources/aws/lb/loadbalancer.py:416
#: heat/engine/resources/openstack/heat/instance_group.py:82
msgid "Not Implemented."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:83
#: heat/engine/resources/openstack/heat/instance_group.py:87
msgid "The reference to a LaunchConfiguration resource."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:88
msgid ""
"The ID of an existing instance to use to create the Auto Scaling group. "
"If specify this property, will create the group use an existing instance "
"instead of a launch configuration."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:98
msgid "Maximum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:104
msgid "Minimum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:110
#: heat/engine/resources/aws/autoscaling/scaling_policy.py:64
#: heat/engine/resources/openstack/heat/autoscaling_group.py:104
#: heat/engine/resources/openstack/heat/scaling_policy.py:79
msgid "Cooldown period, in seconds."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:115
msgid "Desired initial number of instances."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:133
#: heat/engine/resources/openstack/heat/instance_group.py:99
msgid "List of LoadBalancer resources."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:137
msgid ""
"Use only with Neutron, to list the internal subnet to which the instance "
"will be attached; needed only if multiple exist; list length must be "
"exactly 1."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:143
msgid "UUID of the internal subnet to which the instance will be attached."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:149
#: heat/engine/resources/openstack/heat/instance_group.py:103
msgid "Tags to attach to this group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:168
#: heat/engine/resources/openstack/heat/instance_group.py:124
msgid "A comma-delimited list of server ip addresses. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:320
#, python-format
msgid "Start resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:344
#, python-format
msgid "End resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:374
msgid "MinSize can not be greater than MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:378
msgid "The size of AutoScalingGroup can not be less than zero"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:384
msgid "DesiredCapacity must be between MinSize and MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:393
msgid "Anything other than one VPCZoneIdentifier"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:403
msgid "Either 'InstanceId' or 'LaunchConfigurationName' must be provided."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:57
#: heat/engine/resources/aws/ec2/instance.py:95
msgid "Glance image ID or name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:64
#: heat/engine/resources/aws/ec2/instance.py:105
msgid "Nova instance type (flavor)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:71
msgid ""
"The ID of an existing instance you want to use to create the launch "
"configuration. All properties are derived from the instance with the "
"exception of BlockDeviceMapping."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:80
#: heat/engine/resources/aws/ec2/instance.py:114
msgid "Optional Nova keypair name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:87
#: heat/engine/resources/aws/ec2/instance.py:221
msgid "User data to pass to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:91
#: heat/engine/resources/aws/ec2/instance.py:155
msgid "Security group names to assign."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:105
#: heat/engine/resources/aws/ec2/instance.py:252
msgid "Block device mappings to attach to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:111
#: heat/engine/resources/aws/ec2/instance.py:258
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name.e.g. vdb"
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:118
#: heat/engine/resources/aws/ec2/instance.py:265
msgid "The ebs volume to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:122
#: heat/engine/resources/aws/ec2/instance.py:269
msgid ""
"Indicate whether the volume should be deleted when the instance is "
"terminated."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:128
#: heat/engine/resources/aws/ec2/instance.py:275
msgid "The number of I/O operations per second that the volume supports."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:134
#: heat/engine/resources/aws/ec2/instance.py:281
#: heat/engine/resources/openstack/nova/server.py:203
#: heat/engine/resources/openstack/nova/server.py:273
msgid "The ID of the snapshot to create a volume from."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:143
#: heat/engine/resources/aws/ec2/instance.py:290
msgid ""
"The size of the volume, in GB. Must be equal or greater than the size of "
"the snapshot. It is safe to leave this blank and have the Compute service"
" infer the size."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:151
#: heat/engine/resources/aws/ec2/instance.py:298
msgid "The volume type."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:158
#: heat/engine/resources/aws/ec2/instance.py:305
msgid "The can be used to unmap a defined device."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:163
#: heat/engine/resources/aws/ec2/instance.py:310
msgid ""
"The name of the virtual device. The name must be in the form ephemeralX "
"where X is a number starting from zero (0); for example, ephemeral0."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:173
#: heat/engine/resources/aws/ec2/instance.py:196
msgid "Scheduler hints to pass to Nova (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:233
#: heat/engine/resources/aws/ec2/instance.py:796
msgid ""
"SnapshotId is missing, this is required when specifying "
"BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:237
#: heat/engine/resources/aws/ec2/instance.py:800
msgid "Ebs is missing, this is required when specifying BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:247
msgid "If without InstanceId, ImageId and InstanceType are required."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:41
msgid "AutoScaling group name to apply policy to."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:46
#: heat/engine/resources/openstack/heat/scaling_policy.py:61
msgid "Size of adjustment."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:52
#: heat/engine/resources/openstack/heat/scaling_policy.py:67
msgid "Type of adjustment (absolute or percentage)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:69
msgid ""
"Minimum number of resources that are added or removed when the "
"AutoScaling group scales up or down. This can be used only when "
"specifying PercentChangeInCapacity for the AdjustmentType property."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:85
msgid "A signed url to handle the alarm. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:37
msgid ""
"The URL of a template that specifies the stack to be created as a "
"resource."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:44
msgid "The length of time, in minutes, to wait for the nested stack creation."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:50
msgid "The set of parameters passed to this nested stack."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:60
#, python-format
msgid "Could not fetch remote template '%(url)s': %(exc)s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:43
#: heat/engine/resources/openstack/heat/wait_condition.py:56
msgid ""
"A reference to the wait condition handle used to signal this wait "
"condition."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:49
#: heat/engine/resources/openstack/heat/wait_condition.py:62
msgid "The number of seconds to wait for the correct number of signals to arrive."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:58
#: heat/engine/resources/openstack/heat/swiftsignal.py:174
#: heat/engine/resources/openstack/heat/wait_condition.py:71
msgid ""
"The number of success signals that must be received before the stack "
"creation process continues."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:70
#: heat/engine/resources/openstack/heat/wait_condition.py:83
msgid ""
"JSON string containing data associated with wait condition signals sent "
"to the handle."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:81
#, python-format
msgid "WaitCondition invalid Handle tenant %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:84
#: heat/engine/resources/aws/cfn/wait_condition.py:87
#, python-format
msgid "WaitCondition invalid Handle stack %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:90
#: heat/engine/resources/aws/cfn/wait_condition.py:94
#, python-format
msgid "WaitCondition invalid Handle %s"
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:46
msgid "Set to \"vpc\" to have IP address allocation associated to your VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:50
msgid "Now we only allow vpc here, so no need to set up this tag anymore."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:60
msgid "Instance ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:70
msgid ""
"ID that AWS assigns to represent the allocation of the address for use "
"with Amazon VPC. Returned only for VPC elastic IP addresses."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:159
msgid "Instance ID to associate with EIP specified by EIP property."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:167
msgid "EIP address to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:175
msgid "Allocation ID for VPC EIP address."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:180
msgid "Network interface ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:199
msgid "Either 'EIP' or 'AllocationId' must be provided."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:203
msgid "Must specify 'InstanceId' if you specify 'EIP'."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:280
#: heat/engine/resources/aws/ec2/eip.py:303
msgid "Failed to update, can not found port info."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:121
msgid "Availability zone to launch the instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:159
msgid "Security group IDs to assign."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:163
msgid "Network interfaces to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:173
msgid "Subnet ID to launch instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:178
msgid "Tags to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:225
msgid "Volumes to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:232
#: heat/engine/resources/aws/ec2/volume.py:123
msgid ""
"The device where the volume is exposed on the instance. This assignment "
"may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:241
#: heat/engine/resources/aws/ec2/volume.py:114
#: heat/engine/resources/openstack/cinder/volume.py:725
msgid "The ID of the volume to be attached."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:322
msgid "The Availability Zone where the specified instance is launched."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:327
msgid "Private DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:331
msgid "Public DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:335
msgid "Private IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:339
msgid "Public IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:625
#, python-format
msgid "Instance is not ACTIVE (was: %s)"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:841
#: heat/engine/resources/openstack/nova/server.py:1711
#, python-format
msgid "Cannot suspend %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:848
#: heat/engine/resources/aws/ec2/instance.py:891
#, python-format
msgid "Failed to find instance %s"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:872
#, python-format
msgid "Suspend of instance %s failed"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:884
#: heat/engine/resources/openstack/nova/server.py:1754
#, python-format
msgid "Cannot resume %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:70
#: heat/engine/resources/openstack/nova/floatingip.py:101
#, python-format
msgid "Expected 1 external network, found %d"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:86
msgid "VPC ID for this gateway association."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:91
msgid "ID of the InternetGateway."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:95
msgid "ID of the VPNGateway to attach to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:46
msgid "Description for this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:50
msgid "List of security group IDs associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:58
msgid "Flag indicating if traffic to or from instance is validated."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:63
msgid "Subnet ID to associate with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:73
msgid "List of tags associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:91
msgid "Private IP address of the network interface."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:42
msgid "VPC ID for where the route table is created."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:49
msgid "List of tags to be attached to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:114
msgid "Route table ID."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:119
msgid "Subnet ID."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:226
#: heat/engine/resources/openstack/neutron/security_group.py:139
msgid "Description of the security group."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:231
msgid "Physical ID of the VPC. Not implemented."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:237
msgid "List of security group ingress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:246
msgid "List of security group egress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:268
#, python-format
msgid "Security Group \"%(group_name)s\" not found"
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:42
msgid "Availability zone in which you want the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:46
msgid "CIDR block to apply to subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:51
msgid ""
"Ref structure that contains the ID of the VPC on which you want to create"
" the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:59
msgid "List of tags to attach to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:77
msgid "Availability Zone of the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:37
#: heat/engine/resources/openstack/cinder/volume.py:64
msgid "The availability zone in which the volume will be created."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:43
#: heat/engine/resources/openstack/cinder/volume.py:179
msgid "The size of the volume in GB."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:51
msgid "If specified, the backup used as the source to create the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:60
msgid "The list of tags to associate with the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:105
msgid "The ID of the instance to which the volume attaches."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:39
msgid "CIDR block to apply to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:43
msgid ""
"Allowed tenancy of instances launched in the VPC. default - any tenancy; "
"dedicated - instance will be dedicated, regardless of the tenancy option "
"specified at instance launch."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:57
msgid "List of tags to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:100
#, python-format
msgid "Multiple routers found with name %s"
msgstr ""

#: heat/engine/resources/aws/iam/user.py:59
msgid "A login profile for the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:68
msgid "Access policies to apply to the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:151
msgid "The name of the user that the new key will belong to."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:166
msgid "Username associated with the AccessKey."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:171
msgid "Keypair secret key."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:201
#, python-format
msgid "could not find user %s"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:252
msgid "Custom template for the built-in loadbalancer nested stack."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:316
msgid "The Availability Zones in which to create the load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:321
msgid "An application health check for the instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:325
msgid ""
"The number of consecutive health probe successes required before moving "
"the instance to the healthy state."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:332
msgid ""
"The approximate interval, in seconds, between health checks of an "
"individual instance."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:338
msgid "The port being checked."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:343
msgid "Health probe timeout, in seconds."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:348
msgid ""
"The number of consecutive health probe failures required before moving "
"the instance to the unhealthy state"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:357
msgid "The list of instance IDs load balanced."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:362
msgid "One or more listeners for this load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:368
msgid "TCP port on which the instance server is listening."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:374
msgid "The external load balancer port number."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:379
msgid "The load balancer transport protocol to use."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:411
msgid "List of Security Groups assigned on current LB."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:423
msgid "The name of the hosted zone that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:428
msgid "The ID of the hosted zone name that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:433
msgid "The DNS name for the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:437
msgid ""
"The security group that you can use as part of your inbound rules for "
"your LoadBalancer's back-end instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:442
msgid "Owner of the source security group."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:613
msgid "Custom LoadBalancer template can not be found"
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:54
msgid ""
"A predefined access control list (ACL) that grants permissions on the "
"bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:66
msgid "Information used to configure the bucket as a static website."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:70
msgid "The name of the index document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:74
msgid "The name of the error document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:80
msgid "Tags to attach to the bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:86
msgid "The tag key name."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:91
msgid "The tag value."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:101
msgid "The DNS name of the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:105
msgid "The website endpoint for the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:161
#, python-format
msgid "The bucket you tried to delete is not empty (%s)."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:35
msgid ""
"Theshold alarm relies on ceilometer-api and has been deprecated in aodh "
"since Ocata. Use OS::Aodh::GnocchiAggregationByResourcesAlarm instead."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:52
#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:32
msgid "Operator used to compare specified statistic with threshold."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:58
#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:38
msgid "Number of periods to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:63
msgid "Meter name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:68
msgid "Period (seconds) to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:73
msgid "Meter statistic to evaluate."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:82
#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:53
msgid "Threshold to evaluate against."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:88
msgid ""
"Meter should match this resource metadata (key=value) additionally to the"
" meter_name."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:95
msgid ""
"A list of query factors, each comparing a Sample attribute with a value. "
"Implicitly combined with matching_metadata, if any."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:105
msgid ""
"Name of attribute to compare. Names of the form metadata.user_metadata.X "
"or metadata.metering.X are equivalent to what you can address through "
"matching_metadata; the former for Nova meters, the latter for all others."
" To see the attributes of your Samples, use `ceilometer --debug sample-"
"list`."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:116
#: heat/engine/resources/openstack/aodh/alarm.py:277
msgid "The type of the attribute."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:123
#: heat/engine/resources/openstack/aodh/alarm.py:283
msgid "Comparison operator."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:128
#: heat/engine/resources/openstack/aodh/alarm.py:288
msgid "String value with which to compare."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:224
msgid ""
"OS::Aodh::CombinationAlarm is deprecated and has been removed from Aodh, "
"use OS::Aodh::CompositeAlarm instead."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:258
msgid "Event type to evaluate against. If not specified will match all events."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:265
msgid ""
"A list for filtering events. Query conditions used to filter specific "
"events when evaluating the alarm."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:273
msgid "Name of attribute to compare."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:358
msgid ""
"Name or ID of the loadbalancer pool for which the health of each member "
"will be evaluated."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:365
msgid ""
"Name or ID of the root / top level Heat stack containing the loadbalancer"
" pool and members. An update will be triggered on the root Stack if an "
"unhealthy member is detected in the loadbalancer pool."
msgstr ""

#: heat/engine/resources/openstack/aodh/alarm.py:374
msgid ""
"ID of the Heat autoscaling group that contains the loadbalancer members. "
"Unhealthy members will be marked as such before an update is triggered on"
" the root stack."
msgstr ""

#: heat/engine/resources/openstack/aodh/composite_alarm.py:41
msgid "The operator indicates how to combine the rules."
msgstr ""

#: heat/engine/resources/openstack/aodh/composite_alarm.py:50
msgid ""
"Rules list. Basic threshold/gnocchi rules and nested dict which combine "
"threshold/gnocchi rules by \"and\" or \"or\" are allowed. For example, "
"the form is like: [RULE1, RULE2, {\"and\": [RULE3, RULE4]}], the basic "
"threshold/gnocchi rules must include a \"type\" field."
msgstr ""

#: heat/engine/resources/openstack/aodh/composite_alarm.py:66
msgid "Composite threshold rules in JSON format."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:43
msgid "The aggregation method to compare to the threshold."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:48
msgid "The time range in seconds."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:79
#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:183
msgid "Metric name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:85
msgid "Id of a resource."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:91
#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:195
msgid "Resource type."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:151
msgid "A list of metric ids."
msgstr ""

#: heat/engine/resources/openstack/aodh/gnocchi/alarm.py:189
msgid "The query to filter the metrics."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:58
#: heat/engine/resources/openstack/barbican/container.py:168
#: heat/engine/resources/openstack/barbican/container.py:220
msgid "Human-readable name for the container."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:62
msgid "References to secrets that will be stored in container."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:68
msgid "Name of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:73
msgid "Reference to the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:85
msgid "The status of the container."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:89
msgid "The URI to the container."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:93
msgid "The URIs to secrets stored in container."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:97
msgid "The URIs to container consumers."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:110
msgid "Duplicate refs are not allowed."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:135
#, python-format
msgid "Container '%(name)s' creation failed: %(code)s - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:172
msgid "Reference to certificate."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:177
#: heat/engine/resources/openstack/barbican/container.py:224
msgid "Reference to private key."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:182
#: heat/engine/resources/openstack/barbican/container.py:229
msgid "Reference to private key passphrase."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:187
msgid "Reference to intermediates."
msgstr ""

#: heat/engine/resources/openstack/barbican/container.py:234
msgid "Reference to public key."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:83
#: heat/engine/resources/openstack/barbican/secret.py:63
msgid "Human readable name for the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:87
#: heat/engine/resources/openstack/barbican/secret.py:80
msgid "The type/format the secret data is provided in."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:91
#: heat/engine/resources/openstack/barbican/secret.py:99
msgid "The expiration date for the secret in ISO-8601 format."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:98
msgid ""
"The algorithm type used to generate the secret. Required for key and "
"asymmetric types of order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:103
msgid ""
"The bit-length of the secret. Required for key and asymmetric types of "
"order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:108
#: heat/engine/resources/openstack/barbican/secret.py:119
msgid "The type/mode of the algorithm associated with the secret information."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:113
msgid "The type of the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:122
msgid "The type of the certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:128
msgid "The subject of the certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:133
msgid "The source of certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:141
msgid "The identifier of the CA to use."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:146
msgid "The profile of certificate to use."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:151
msgid "The content of the CSR. Only for certificate orders."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:156
msgid ""
"The passphrase of the created key. Can be set only for asymmetric type of"
" order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:164
msgid "The status of the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:168
msgid "The URI to the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:172
msgid "The URI to the created secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:176
msgid "The URI to the created container."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:181
msgid "The payload of the created public key, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:186
msgid "The payload of the created private key, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:191
msgid "The payload of the created certificate, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:196
msgid "The payload of the created intermediates, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:217
#, python-format
msgid ""
"Properties %(algorithm)s and %(bit_length)s are required for %(type)s "
"type of order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:235
#, python-format
msgid ""
"Unexpected properties: %(unexpected)s. Only these properties are allowed "
"for %(type)s type of order: %(allowed)s."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:249
#, python-format
msgid "Order '%(name)s' failed: %(code)s - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:67
msgid "The unencrypted plain text of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:71
msgid "The type of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:90
msgid "The encoding format used to provide the payload data."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:106
msgid "The algorithm type used to generate the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:110
msgid "The bit-length of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:126
msgid "The status of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:130
msgid "The decrypted secret payload."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:154
#, python-format
msgid ""
"Property unspecified. For '%(value)s' value of '%(prop1)s' property, "
"'%(prop2)s' property must be specified."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:164
#, python-format
msgid "Invalid %(prop1)s for specified '%(value)s' value of '%(prop2)s' property."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:58
msgid "The name of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:63
#: heat/engine/resources/openstack/blazar/host.py:114
msgid "The extra capability of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:69
msgid "The hypervisor name of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:73
msgid "The hypervisor type the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:77
msgid "The hypervisor version of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:81
msgid "The number of the VCPUs of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:85
msgid "Information of the CPU of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:89
msgid "Megabytes of the memory of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:93
msgid "Gigabytes of the disk of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:97
msgid "The compute service name of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:101
msgid "The flag which represents whether the host is reservable or not."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:106
msgid "The status of the host."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:110
msgid "The UUID of the trust of the host operator."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:118
msgid ""
"The date and time when the host was created. The date and time format "
"must be \"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/host.py:123
msgid ""
"The date and time when the host was updated. The date and time format "
"must be \"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:65
#: heat/engine/resources/openstack/blazar/lease.py:205
msgid "The name of the lease."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:70
msgid ""
"The start date and time of the lease. The date and time format must be "
"\"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:79
msgid ""
"The end date and time of the lease The date and time format must be "
"\"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:88
msgid ""
"The date and time for the before-end-action of the lease. The date and "
"time format must be \"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:96
msgid "The list of reservations."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:103
msgid "The type of the resource to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:112
msgid "The minimum number of hosts to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:119
msgid "The maximum number of hosts to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:126
msgid "Properties of the hypervisor to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:130
msgid "Properties of the resource to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:134
msgid "The before-end-action of the reservation."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:143
msgid "The amount of instances to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:151
msgid "The number of VCPUs per the instance."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:158
msgid "Megabytes of memory per the instance."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:165
msgid "Gigabytes of the local disk per the instance."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:172
msgid "The affinity of instances to reserve."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:180
msgid "A list of event objects."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:187
msgid "The type of the event (e.g. notification)."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:192
msgid ""
"The date and time of the event. The date and time format must be \"CCYY-"
"MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:209
msgid ""
"The start date and time of the lease. The date and time format is \"CCYY-"
"MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:214
msgid ""
"The end date and time of the lease. The date and time format is \"CCYY-"
"MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:219
msgid ""
"The date and time when the lease was created. The date and time format is"
" \"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:224
msgid ""
"The date and time when the lease was updated. The date and time format is"
" \"CCYY-MM-DD hh:mm\"."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:229
msgid "The status of the lease."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:233
msgid ""
"The flag which represents condition of reserved resources of the lease. "
"If it is true, the amount of reserved resources is less than the request "
"or reserved resources were changed."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:239
msgid "The UUID of the lease owner."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:243
msgid "The UUID the project which owns the lease."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:247
msgid "The UUID of the trust of the lease owner."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:251
msgid "A list of reservation objects."
msgstr ""

#: heat/engine/resources/openstack/blazar/lease.py:255
msgid "Event information of the lease."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:49
msgid ""
"The class that provides encryption support. For example, "
"nova.volume.encryptors.luks.LuksEncryptor."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:56
msgid ""
"Notional service where encryption is performed For example, front-end. "
"For Nova."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:66
msgid "The encryption algorithm or mode. For example, aes-xts-plain64."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:78
msgid "Size of encryption key, in bits. For example, 128 or 256."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:85
msgid "Name or id of volume type (OS::Cinder::VolumeType)."
msgstr ""

#: heat/engine/resources/openstack/cinder/qos_specs.py:47
msgid "Name of the QoS."
msgstr ""

#: heat/engine/resources/openstack/cinder/qos_specs.py:51
msgid "The specs key and value pairs of the QoS."
msgstr ""

#: heat/engine/resources/openstack/cinder/qos_specs.py:115
msgid "ID or Name of the QoS specs."
msgstr ""

#: heat/engine/resources/openstack/cinder/qos_specs.py:123
msgid "List of volume type IDs or Names to be attached to QoS specs."
msgstr ""

#: heat/engine/resources/openstack/cinder/qos_specs.py:126
msgid "A volume type to attach specs."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:54
msgid "OpenStack Keystone Project."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:62
msgid ""
"Quota for the amount of disk space (in Gigabytes). Setting the value to "
"-1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:71
msgid ""
"Quota for the number of volumes. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:80
msgid ""
"Quota for the number of backups. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:90
msgid ""
"Quota for the amount of backups disk space (in Gigabytes). Setting the "
"value to -1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:100
msgid ""
"Quota for the number of snapshots. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/cinder/quota.py:129
#, python-format
msgid ""
"Invalid quota %(property)s value(s): %(value)s. Can not be less than the "
"current usage value(s): %(total)s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:68
#, python-format
msgid ""
"The size of the volume in GB. On update only increase in size is "
"supported. This property is required unless property %(backup)s or "
"%(vol)s or %(snapshot)s is specified."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:82
msgid "If specified, the snapshot to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:89
msgid "If specified, the backup to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:97
msgid "A name used to distinguish the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:102
msgid "A description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:107
msgid "If specified, the type of volume to use, mapping to a specific backend."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:116
msgid "Key/value pairs to associate with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:122
msgid "The ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:125
#: heat/engine/resources/openstack/cinder/volume.py:234
#: heat/engine/resources/openstack/heat/random_string.py:85
#: heat/engine/resources/openstack/neutron/floatingip.py:67
#: heat/engine/resources/openstack/neutron/loadbalancer.py:269
#: heat/engine/resources/openstack/neutron/network_gateway.py:103
#: heat/engine/resources/openstack/neutron/port.py:101
#: heat/engine/resources/openstack/neutron/port.py:150
#: heat/engine/resources/openstack/neutron/router.py:141
#: heat/engine/resources/openstack/neutron/router.py:416
#: heat/engine/resources/openstack/neutron/router.py:429
#: heat/engine/resources/openstack/neutron/router.py:456
#: heat/engine/resources/openstack/neutron/router.py:597
#: heat/engine/resources/openstack/neutron/subnet.py:83
#: heat/engine/resources/openstack/neutron/vpnservice.py:72
#: heat/engine/resources/openstack/nova/server.py:249
#: heat/engine/resources/openstack/nova/server.py:423
#: heat/engine/resources/openstack/sahara/cluster.py:125
#, python-format
msgid "Use property %s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:135
msgid "If specified, the name or ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:143
msgid "If specified, the volume to use as source."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:150
msgid ""
"Arbitrary key-value pairs specified by the client to help the Cinder "
"scheduler creating a volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:156
msgid "Enables or disables read-only access mode of volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:162
msgid "Whether allow the volume to be attached more than once."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:175
msgid "The availability zone in which the volume is located."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:183
msgid "The snapshot the volume was created from, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:187
msgid "Name of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:191
msgid "Description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:195
msgid "The type of the volume mapping to a backend, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:199
msgid "Key/value pairs associated with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:203
msgid "The volume used as source, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:207
msgid "The current status of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:212
msgid "The timestamp indicating volume creation."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:216
msgid "Boolean indicating if the volume can be booted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:220
msgid "Key/value pairs associated with the volume in raw dict form."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:224
msgid "Boolean indicating if the volume is encrypted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:228
msgid "A string representation of the list of attachments of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:243
msgid "The list of attachments of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:249
msgid "Boolean indicating whether allow the volume to be attached more than once."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:355
#, python-format
msgid "Failed to extend volume %(vol)s - %(err)s"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:381
msgid "Volume resize failed"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:391
#, python-format
msgid "Failed to restore volume %(vol)s from backup %(backup)s - %(err)s"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:411
msgid "Volume backup restore failed"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:480
msgid "Shrinking volume"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:627
#, python-format
msgid ""
"If neither \"%(backup_id)s\" nor \"%(size)s\" is provided, one and only "
"one of \"%(source_vol)s\", \"%(snapshot_id)s\" must be specified, but "
"currently specified options: %(exclusive_options)s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:638
#, python-format
msgid ""
"If \"%(size)s\" is provided, only one of \"%(image)s\", "
"\"%(image_ref)s\", \"%(source_vol)s\", \"%(snapshot_id)s\" can be "
"specified, but currently specified options: %(exclusive_options)s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:719
msgid "The ID of the server to which the volume attaches."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:734
msgid ""
"The location where the volume is exposed on the instance. This assignment"
" may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:50
msgid "Name of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:56
msgid "The extra specs key and value pairs of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:61
msgid "Whether the volume type is accessible to the public."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:68
msgid "Description of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:74
msgid ""
"Projects to add volume type access to. NOTE: This property is only "
"supported since Cinder API V2."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:150
#, python-format
msgid "Can not specify property \"%s\" if the volume type is public."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:28
msgid "This resource has been removed, use OS::Designate::Zone instead."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:30
msgid "This resource has been removed, use OS::Designate::RecordSet instead."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:50
msgid "RecordSet name."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:56
msgid "Time To Live (Seconds)."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:64
msgid "Description of RecordSet."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:70
msgid "DNS RecordSet type."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:78
msgid ""
"A list of data for this RecordSet. Each item will be a separate record in"
" Designate These items should conform to the DNS spec for the record type"
" - e.g. A records must be IPv4 addresses, CNAME records must be a "
"hostname. DNS record data varies based on the type of record. For more "
"details, please refer rfc 1035."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:89
msgid "DNS Zone id or name."
msgstr ""

#: heat/engine/resources/openstack/designate/recordset.py:118
msgid "Error in RecordSet"
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:56
msgid "DNS Name for the zone."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:63
msgid "Time To Live (Seconds) for the zone."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:71
msgid "Description of zone."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:77
msgid ""
"E-mail for the zone. Used in SOA records for the zone. It is required for"
" PRIMARY Type, otherwise ignored."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:83
msgid ""
"Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are "
"transferred from another DNS Server."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:91
#: heat/engine/resources/openstack/designate/zone.py:102
msgid ""
"The primary servers to transfer DNS zone information from. Mandatory for "
"zone type SECONDARY, otherwise ignored."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:97
msgid "Use ``primaries`` instead."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:110
msgid "DNS zone serial number."
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:125
#, python-format
msgid "Property %(prp)s is required for zone type %(zone_type)s"
msgstr ""

#: heat/engine/resources/openstack/designate/zone.py:160
msgid "Error in zone"
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:48
#: heat/engine/resources/openstack/glance/image.py:341
msgid ""
"Name for the image. The name of an image is not unique to a Image Service"
" node."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:53
#: heat/engine/resources/openstack/glance/image.py:346
msgid "The image ID. Glance will generate a UUID if not specified."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:57
#: heat/engine/resources/openstack/glance/image.py:358
msgid ""
"Amount of disk space (in GB) required to boot image. Default value is 0 "
"if not specified and means no limit on the disk size."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:67
#: heat/engine/resources/openstack/glance/image.py:368
msgid ""
"Amount of ram (in MB) required to boot image. Default value is 0 if not "
"specified and means no limit on the ram size."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:76
#: heat/engine/resources/openstack/glance/image.py:377
msgid ""
"Whether the image can be deleted. If the value is True, the image is "
"protected and cannot be deleted."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:83
#: heat/engine/resources/openstack/glance/image.py:383
msgid "Disk format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:93
#: heat/engine/resources/openstack/glance/image.py:393
msgid "Container format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:102
#: heat/engine/resources/openstack/glance/image.py:402
msgid ""
"URL where the data for this image already resides. For example, if the "
"image data is stored in swift, you could specify "
"\"swift://example.com/container/obj\"."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:109
#: heat/engine/resources/openstack/glance/image.py:409
msgid "List of image tags."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:114
#: heat/engine/resources/openstack/glance/image.py:422
msgid "Operating system architecture."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:119
#: heat/engine/resources/openstack/glance/image.py:428
msgid ""
"ID of image stored in Glance that should be used as the kernel when "
"booting an AMI-style image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:128
#: heat/engine/resources/openstack/glance/image.py:438
msgid "The common name of the operating system distribution in lowercase."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:134
msgid "Operating system version as specified by the distributor."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:139
#: heat/engine/resources/openstack/glance/image.py:445
msgid "Owner of the image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:144
msgid "Scope of image accessibility."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:154
#: heat/engine/resources/openstack/glance/image.py:451
msgid ""
"ID of image stored in Glance that should be used as the ramdisk when "
"booting an AMI-style image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:163
msgid "Activate or deactivate the image. Requires Admin Access."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:170
msgid ""
"List of additional members that are permitted to read the image. This may"
" be a Keystone Project IDs or User IDs, depending on the Glance "
"configuration in use."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:176
msgid ""
"A member ID. This may be a Keystone Project ID or User ID, depending on "
"the Glance configuration in use."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:270
#: heat/engine/resources/openstack/glance/image.py:539
msgid ""
"Invalid mix of disk and container formats. When setting a disk or "
"container format to one of 'aki', 'ari', or 'ami', the container and disk"
" formats must match."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:319
msgid ""
"Creating a Glance Image based on an existing URL location requires the "
"Glance v1 API, which is deprecated."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:350
msgid ""
"Scope of image accessibility. Public or private. Default value is False "
"means private. Note: The policy setting of glance allows only users with "
"admin roles to create public image by default."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:415
msgid "Arbitrary properties to associate with the image."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:38
msgid ""
"Resources that users are allowed to access by the DescribeStackResource "
"API."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:55
#, python-format
msgid "AccessPolicy resource %s not in stack"
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:81
msgid ""
"Resource definition for the resources in the group, in HOT format. The "
"value of this property is the definition of a resource just as if it had "
"been declared in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:90
msgid "Maximum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:97
msgid "Minimum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:109
msgid "Desired initial number of resources."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:114
msgid "Policy for rolling updates for this scaling group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:119
#: heat/engine/resources/openstack/heat/resource_group.py:250
msgid ""
"The minimum number of resources in service while rolling updates are "
"being executed."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:125
#: heat/engine/resources/openstack/heat/resource_group.py:256
msgid "The maximum number of resources to replace at once."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:130
#: heat/engine/resources/openstack/heat/resource_group.py:261
#: heat/engine/resources/openstack/heat/software_deployment.py:680
msgid "The number of seconds to wait between batches of updates."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:146
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource that is part of the AutoScalingGroup. This map specifies output "
"parameters that are available once the AutoScalingGroup has been "
"instantiated."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:154
msgid ""
"A list of the specified attribute of each individual resource that is "
"part of the AutoScalingGroup. This list of attributes is available as an "
"output once the AutoScalingGroup has been instantiated."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:162
msgid "The current size of AutoscalingResourceGroup."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:167
#: heat/engine/resources/openstack/heat/resource_group.py:224
msgid "A list of resource IDs for the resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:172
#: heat/engine/resources/openstack/heat/resource_group.py:228
msgid "A map of resource names to IDs for the resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_config.py:46
msgid ""
"Map representing the cloud-config data structure which will be formatted "
"as YAML."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:24
msgid ""
"OS::Heat::CWLiteAlarm resource has been removed since version 10.0.0. "
"Existing stacks can still use it, where it would do nothing for "
"update/delete."
msgstr ""

#: heat/engine/resources/openstack/heat/delay.py:62
msgid "Minimum time in seconds to wait during the specified actions."
msgstr ""

#: heat/engine/resources/openstack/heat/delay.py:71
msgid "Maximum jitter to add to the minimum wait time."
msgstr ""

#: heat/engine/resources/openstack/heat/delay.py:80
msgid "Number of seconds to multiply the maximum jitter value by."
msgstr ""

#: heat/engine/resources/openstack/heat/delay.py:89
msgid "Actions during which the delay will occur."
msgstr ""

#: heat/engine/resources/openstack/heat/delay.py:113
#, python-format
msgid "%(res_type)s maximum delay %(max_wait)ss exceeds stack timeout."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:62
#: heat/engine/resources/openstack/nova/server.py:168
msgid "Server name."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:67
#: heat/engine/resources/openstack/nova/server.py:509
msgid ""
"Arbitrary key/value metadata to store for this server. Both keys and "
"values must be 255 characters or less. Non-string values will be "
"serialized to JSON (and the serialized string must be 255 characters or "
"less)."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:84
#: heat/engine/resources/openstack/nova/server.py:534
msgid ""
"How the server should receive the metadata required for software "
"configuration. POLL_SERVER_CFN will allow calls to the cfn API action "
"DescribeStackResource authenticated with the provided keypair. "
"POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the"
" provided keystone credentials. POLL_TEMP_URL will create and populate a "
"Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a "
"dedicated zaqar queue and post the metadata for polling."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:101
#: heat/engine/resources/openstack/nova/server.py:616
msgid ""
"Swift container and object to use for storing deployment data for the "
"server resource. The parameter is a map value with the keys \"container\""
" and \"object\", and the values are the corresponding container and "
"object names. The software_config_transport parameter must be set to "
"POLL_TEMP_URL for swift to be used. If not specified, and "
"software_config_transport is set to POLL_TEMP_URL, a container will be "
"automatically created from the resource name, and the object name will be"
" a generated uuid."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:123
#: heat/engine/resources/openstack/nova/server.py:638
msgid "Name of the object."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:140
#: heat/engine/resources/openstack/nova/server.py:649
msgid "Name of the server."
msgstr ""

#: heat/engine/resources/openstack/heat/deployed_server.py:144
#: heat/engine/resources/openstack/nova/server.py:738
msgid ""
"The os-collect-config configuration for the server's local agent to be "
"configured to connect to Heat to retrieve deployment data."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:28
msgid ""
"The HARestarter resource type has been removed. Existing stacks "
"containing HARestarter resources can still be used, but the HARestarter "
"resource will be a placeholder that does nothing."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:34
msgid ""
"The HARestarter resource type is deprecated and will be removed in a "
"future release of Heat, once it has support for auto-healing any type of "
"resource. Note that HARestarter does *not* actually restart servers - it "
"deletes and then recreates them. It also does the same to all dependent "
"resources, and may therefore exhibit unexpected and undesirable "
"behaviour. Instead, use the mark-unhealthy API to mark a resource as "
"needing replacement, and then a stack update to perform the replacement "
"while respecting  the dependencies and not deleting them unnecessarily."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:93
msgid "Desired number of instances."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:109
msgid "Tag key."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:114
msgid "Tag value."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:157
#, python-format
msgid "Maximum %s is 1 hour."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:170
#, python-format
msgid "%(lc)s (%(ref)s) reference can not be found."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:175
#, python-format
msgid ""
"%(lc)s (%(ref)s) requires a reference to the configuration not just the "
"name of the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:310
#: heat/engine/resources/openstack/heat/resource_group.py:742
msgid "The current update policy will result in stack update timeout."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:62
msgid ""
"Namespace to group this multi-part configs by when delivered to a server."
" This may imply what configuration tool is going to perform the "
"configuration."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:70
msgid "Parts belonging to this message."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:77
msgid ""
"Content of part to attach, either inline or by referencing the ID of "
"another software config resource."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:84
msgid "Optional filename to associate with part."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:88
msgid "Whether the part content is text or multipart."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:94
msgid "Optional subtype to specify with the type."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:68
msgid "Length of the string to generate."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:76
msgid "Sequence of characters to build the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:92
msgid ""
"A list of character class and their constraints to generate the random "
"string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:99
#, python-format
msgid ""
"A character class and its corresponding %(min)s constraint to generate "
"the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:109
msgid ""
"The minimum number of characters from this character class that will be "
"in the generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:126
msgid ""
"A list of character sequences and their constraints to generate the "
"random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:133
#, python-format
msgid ""
"A character sequence and its corresponding %(min)s constraint to generate"
" the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:139
msgid ""
"The minimum number of characters from this sequence that will be in the "
"generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:152
msgid ""
"Value which can be set or changed on stack update to trigger the resource"
" for replacement with a new random string. The salt value itself is "
"ignored by the random generator."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:160
msgid ""
"The random string generated by this resource. This value is also "
"available by referencing the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:213
msgid ""
"Length property cannot be smaller than combined character class and "
"character sequence minimums"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:98
msgid "Context for this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:103
msgid "Region name in which this stack will be created."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:108
msgid ""
"A Barbican secret ID. The Barbican secret should contain an OpenStack "
"credential that can be used to access a remote cloud."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:117
msgid "CA Cert for SSL."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:135
msgid "Template that specifies the stack to be created as a resource."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:142
msgid "Number of minutes to wait for this stack creation."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:147
msgid "Set of parameters passed to this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:155
msgid "Name of the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:159
msgid "A dict of key-value pairs output from the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:269
#, python-format
msgid ""
"Cannot establish connection to Heat endpoint at %(location)s due to "
"\"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:290
#, python-format
msgid ""
"Failed validating stack template using Heat endpoint at %(location)s due "
"to \"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:323
#, python-format
msgid "Cannot resume %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:330
#, python-format
msgid "Cannot suspend %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:63
msgid ""
"The list of resource types to create. This list may contain type names or"
" aliases defined in the resource registry. Specific template names are "
"not supported."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:72
msgid ""
"If true, the resources in the chain will be created concurrently. If "
"false or omitted, each resource will be treated as having a dependency on"
" the previous resource in the list."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:80
msgid "Properties to pass to each resource being created in the chain."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:87
msgid "A list of resource IDs for the resources in the chain."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:92
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:132
msgid "The number of resources to create."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:141
msgid ""
"A variable that this resource will use to replace with the current index "
"of a given resource in the group. Can be used, for example, to customize "
"the name property of grouped servers in order to differentiate them when "
"listed with nova client."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:154
msgid ""
"Resource definition for the resources in the group. The value of this "
"property is the definition of a resource just as if it had been declared "
"in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:160
msgid "The type of the resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:165
msgid "Property values for the resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:169
msgid "Supplied metadata for the resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:179
msgid "Policies for removal of resources on update."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:182
msgid ""
"Policy to be processed when doing an update which requires removal of "
"specific resources."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:187
msgid ""
"List of resources to be removed when doing an update which requires "
"removal of specific resources. The resource may be specified several "
"ways: (1) The resource name, as in the nested stack, (2) The resource "
"reference returned from get_resource in a template, as available via the "
"'refs' attribute. Note this is destructive on update when specified; even"
" if the count is not being reduced, and once a resource name is removed, "
"its name is never reused in subsequent updates."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:210
msgid ""
"How to handle changes to removal_policies on update. The default "
"\"append\" mode appends to the internal list, \"update\" replaces it on "
"update."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:234
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource. Requires heat_template_version: 2014-10-16."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:241
msgid "A list of removed resource names."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:270
msgid "The maximum number of resources to create at once."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:276
msgid "The number of seconds to wait between batches."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:56
msgid "AutoScaling group ID to apply policy to."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:84
msgid ""
"Minimum number of resources that are added or removed when the "
"AutoScaling group scales up or down. This can be used only when "
"specifying percent_change_in_capacity for the adjustment_type property."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:100
msgid "A signed url to handle the alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:105
msgid "A url to handle the alarm using native API."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:167
#, python-format
msgid "Alarm %(alarm)s could not find scaling group named \"%(group)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:72
msgid ""
"Lifecycle actions to which the configuration applies. The string values "
"provided for this property can include the standard resource actions "
"CREATE, DELETE, UPDATE, SUSPEND and RESUME supported by Heat."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:87
msgid ""
"The configuration tool used to actually apply the configuration on a "
"server. This string property has to be understood by in-instance tools "
"running inside deployed servers."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:99
msgid ""
"The list of configurations for the different lifecycle actions of the "
"represented software component."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:151
#, python-format
msgid ""
"Defining more than one configuration for the same action in "
"SoftwareComponent \"%s\" is not allowed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:70
msgid ""
"Namespace to group this software config by when delivered to a server. "
"This may imply what configuration tool is going to perform the "
"configuration."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:77
msgid ""
"Configuration script or manifest which specifies what actual "
"configuration is performed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:82
msgid ""
"Map containing options specific to the configuration management tool used"
" by this resource."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:87
msgid "Schema representing the inputs that this software config is expecting."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:94
msgid "Schema representing the outputs that this software config will produce."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:103
msgid "The config value of the software config."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:129
msgid ""
"ID of software configuration resource to execute when applying to the "
"server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:135
msgid ""
"ID of resource to apply configuration to. Normally this should be a Nova "
"server ID."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:141
msgid "Input values to apply to the software configuration on this server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:147
msgid ""
"Which lifecycle actions of the deployment resource will result in this "
"deployment being triggered."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:155
msgid ""
"Name of the derived config associated with this deployment. This is used "
"to apply a sort order to the list of configurations currently deployed to"
" a server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:162
msgid ""
"How the server should signal to heat with the deployment output values. "
"CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. "
"TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. "
"HEAT_SIGNAL will allow calls to the Heat API resource-signal using the "
"provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar"
" queue to be signaled using the provided keystone credentials. NO_SIGNAL "
"will result in the resource going to the COMPLETE state without waiting "
"for any signal."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:180
msgid "Captured stdout from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:184
msgid "Captured stderr from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:188
msgid "Returned status code from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:210
msgid "Not waiting for outputs signal"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:213
msgid "Deploy data available"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:302
#, python-format
msgid "Deployment to server failed: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:365
msgid "ID of the server being deployed to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:368
msgid "Name of the current action being deployed"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:372
msgid "ID of the stack this deployment belongs to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:375
msgid "Name of this deployment resource in the stack"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:379
msgid "How the server should signal to heat with the deployment output values."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:386
#: heat/engine/resources/openstack/heat/software_deployment.py:397
msgid "ID of signal to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:390
#: heat/engine/resources/openstack/heat/software_deployment.py:401
msgid "HTTP verb to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:409
msgid "URL for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:412
msgid "Username for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:415
msgid "User ID for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:418
msgid "Password for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:421
msgid "ID of project for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:426
msgid "Region name for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:431
msgid "ID of queue to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:534
msgid "Deployment cancelled."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:585
#, python-format
msgid ""
"Resource %s's property user_data_format should be set to SOFTWARE_CONFIG "
"since there are software deployments on it."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:641
msgid ""
"A map of names and server IDs to apply configuration to. The name is "
"arbitrary and is used as the Heat resource name for the corresponding "
"deployment."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:656
msgid ""
"A map of Nova names and captured stdouts from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:661
msgid ""
"A map of Nova names and captured stderrs from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:666
msgid ""
"A map of Nova names and returned status code from the configuration "
"execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:675
msgid "The maximum number of deployments to replace at once."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:769
msgid "Please use OS::Heat::SoftwareDeploymentGroup instead."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:62
msgid ""
"Map representing the configuration data structure which will be "
"serialized to JSON format."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:118
msgid "Name of key to use for substituting inputs during deployment."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:123
msgid ""
"Perform a check on the input values passed to verify that each required "
"input has a corresponding value. When the property is set to STRICT and "
"no value is passed, an exception is raised."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:236
msgid "Please use OS::Heat::StructuredDeploymentGroup instead."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:74
msgid ""
"Tokens are not needed for Swift TempURLs. This attribute is being kept "
"for compatibility with the OS::Heat::WaitConditionHandle resource."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:81
msgid "Endpoint/url which can be used for signalling handle."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:86
msgid ""
"Convenience attribute, provides curl CLI command prefix, which can be "
"used for signalling handle completion or failure. You can signal success "
"by adding --data-binary '{\"status\": \"SUCCESS\"}' , or signal failure "
"by adding --data-binary '{\"status\": \"FAILURE\"}'."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:158
msgid ""
"URL of TempURL where resource will signal completion and optionally "
"upload data."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:163
msgid ""
"The maximum number of seconds to wait for the resource to signal "
"completion. Once the timeout is reached, creation of the signal resource "
"will fail."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:188
msgid "JSON data that was uploaded via the SwiftSignalHandle."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:226
#, python-format
msgid "\"%(url)s\" is not a valid SwiftSignalHandle.  The %(part)s is invalid"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:337
#, python-format
msgid "Unknown status: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:64
msgid "Number value for delay during resolve constraint."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:74
msgid "Number value for timeout during resolving output value."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:81
msgid "The input string to be stored."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:87
msgid "Some value that can be stored but can not be updated."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:92
msgid ""
"Value which can be set to fail the resource operation to test failure "
"scenarios."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:99
msgid ""
"Value which can be set to trigger update replace for the particular "
"resource."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:106
msgid "Seconds to wait after an action (-1 is infinite)."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:112
msgid "Options for simulating waiting."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:117
msgid "Seconds to wait after a create. Defaults to the global wait_secs."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:123
msgid "Seconds to wait after an update. Defaults to the global wait_secs."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:129
msgid "Seconds to wait after a delete. Defaults to the global wait_secs."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:137
msgid "Client to poll."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:143
msgid "Client entity to poll."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:151
msgid ""
"The string that was stored. This value is also available by referencing "
"the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/value.py:47
#: heat/engine/resources/openstack/heat/value.py:103
msgid "The expression to generate the \"value\" attribute."
msgstr ""

#: heat/engine/resources/openstack/heat/value.py:53
msgid "The type of the \"value\" property."
msgstr ""

#: heat/engine/resources/openstack/heat/value.py:62
msgid ""
"The value generated by this resource's properties \"value\" expression, "
"with type determined from the properties \"type\"."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition.py:99
#, python-format
msgid "%s is not a valid wait condition handle."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:56
msgid ""
"How the client will signal the wait condition. CFN_SIGNAL will allow an "
"HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a "
"Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls "
"to the Heat API resource-signal using the provided keystone credentials. "
"ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using "
"the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST "
"to a Heat API endpoint with the provided keystone token. NO_SIGNAL will "
"result in the resource going to a signalled state without waiting for any"
" signal."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:89
msgid ""
"Token for stack-user which can be used for signalling handle when "
"signal_transport is set to TOKEN_SIGNAL. None for all other signal "
"transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:96
msgid ""
"Endpoint/url which can be used for signalling handle when "
"signal_transport is set to TOKEN_SIGNAL. None for all other signal "
"transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:103
msgid ""
"Convenience attribute, provides curl CLI command prefix, which can be "
"used for signalling handle completion or failure when signal_transport is"
" set to TOKEN_SIGNAL. You can signal success by adding --data-binary "
"'{\"status\": \"SUCCESS\"}' , or signal failure by adding --data-binary "
"'{\"status\": \"FAILURE\"}'. This attribute is set to None for all other "
"signal transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:117
msgid ""
"JSON serialized map that includes the endpoint, token and/or other "
"attributes the client must use for signalling this handle. The contents "
"of this map depend on the type of signal selected in the signal_transport"
" property."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:63
#: heat/engine/resources/openstack/ironic/port.py:119
msgid ""
"Physical hardware address of this network Port, typically the hardware "
"MAC address."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:68
msgid "UUID of the Node this resource belongs to."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:72
msgid "UUID of the Portgroup this resource belongs to."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:76
#: heat/engine/resources/openstack/ironic/port.py:134
msgid ""
"The Port binding profile. If specified, must contain switch_id (only a "
"MAC address or an OpenFlow based datapath_id of the switch are accepted "
"in this field) and port_id (identifier of the physical port on the switch"
" to which node's port is connected to) fields. switch_info is an optional"
" string field to be used to store any vendor-specific information."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:85
#: heat/engine/resources/openstack/ironic/port.py:144
msgid "Indicates whether PXE is enabled or disabled on the Port."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:89
#: heat/engine/resources/openstack/ironic/port.py:149
msgid ""
"The name of the physical network to which a port is connected. May be "
"empty."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:94
msgid "Internal metadata set and stored by the Port. This field is read-only."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:99
#: heat/engine/resources/openstack/ironic/port.py:155
msgid "A set of one or more arbitrary metadata key and value pairs."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:103
#: heat/engine/resources/openstack/ironic/port.py:160
msgid "Indicates whether the Port is a Smart NIC port."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:110
msgid "UUID or name of the Node this resource belongs to."
msgstr ""

#: heat/engine/resources/openstack/ironic/port.py:126
msgid "UUID or name of the Portgroup this resource belongs to."
msgstr ""

#: heat/engine/resources/openstack/keystone/domain.py:30
#: heat/engine/resources/openstack/keystone/endpoint.py:32
#: heat/engine/resources/openstack/keystone/group.py:34
#: heat/engine/resources/openstack/keystone/project.py:35
#: heat/engine/resources/openstack/keystone/region.py:33
#: heat/engine/resources/openstack/keystone/role.py:33
#: heat/engine/resources/openstack/keystone/role_assignments.py:358
#: heat/engine/resources/openstack/keystone/role_assignments.py:417
#: heat/engine/resources/openstack/keystone/service.py:28
#: heat/engine/resources/openstack/keystone/user.py:35
msgid "Supported versions: keystone v3"
msgstr ""

#: heat/engine/resources/openstack/keystone/domain.py:45
msgid "The name of the domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/domain.py:50
msgid "Description of keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/domain.py:55
msgid "This domain is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:47
msgid "Name of keystone endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:52
msgid "Name or Id of keystone region."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:58
msgid "Name or Id of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:65
msgid "Interface type of keystone service endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:74
msgid "URL of keystone service endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:80
msgid "This endpoint is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:49
msgid "Name of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:54
#: heat/engine/resources/openstack/keystone/project.py:55
#: heat/engine/resources/openstack/keystone/role.py:53
msgid "Name or id of keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:61
msgid "Description of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:50
msgid "Name of keystone project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:62
msgid "Description of keystone project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:68
msgid "This project is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:74
msgid "The name or ID of parent of this keystone project in hierarchy."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:81
msgid "A list of tags for labeling and sorting projects."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:95
msgid "Project name."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:100
msgid "Parent project id."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:105
msgid "Domain id for project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:110
msgid "Flag of enable project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:115
msgid "Indicates whether the project also acts as a domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:48
msgid ""
"The user-defined region ID and should unique to the OpenStack deployment."
" While creating the region, heat will url encode this ID."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:54
msgid ""
"If the region is hierarchically a child of another region, set this "
"parameter to the ID of the parent region."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:61
msgid "Description of keystone region."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:66
msgid "This region is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/role.py:48
msgid "Name of keystone role."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:68
msgid "List of role assignments."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:71
msgid "Map between role with either project or domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:75
msgid "Keystone role."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:82
msgid "Keystone project."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:88
msgid "Keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:320
#, python-format
msgid "Either project or domain must be specified for role %s"
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:371
msgid "Name or id of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:430
msgid "Name or id of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:43
msgid "Name of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:48
msgid "Description of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:53
msgid "Type of keystone Service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:59
msgid "This service is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:52
msgid "Name of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:57
msgid "Name or ID of keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:64
msgid "Description of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:70
msgid "Keystone user is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:76
msgid "Email address of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:81
msgid "Password of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:86
msgid "Name or ID of default project of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:92
msgid "Keystone user groups."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:96
msgid "Keystone user group."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:114
msgid "User name."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:119
msgid "Default project id for user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:124
msgid "Domain id for user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:129
msgid "Flag of enable user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:134
msgid "Show user password expiration time."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:28
msgid "Please use OS::Magnum::Cluster instead."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:54
msgid "The bay name."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:58
msgid "The name or ID of the bay model."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:66
msgid "The node count for this bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:73
msgid "The number of master nodes for this bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:80
#: heat/engine/resources/openstack/magnum/cluster.py:161
msgid "Specifies a custom discovery url for node discovery."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:84
msgid "Timeout for creating the bay in minutes. Set to 0 for no timeout."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:117
#, python-format
msgid "Failed to create Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:122
#, python-format
msgid "Unknown status creating Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:152
#, python-format
msgid "Failed to update Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:158
#, python-format
msgid "Unknown status updating Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:29
msgid "Please use OS::Magnum::ClusterTemplate instead."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:52
msgid "The endpoint URL of COE API exposed to end-users."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:56
msgid "The reference UUID of orchestration stack for this COE cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:61
msgid ""
"Version info of chosen COE in cluster for helping client in picking the "
"right version of client."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:66
msgid "List of floating IP of all master nodes."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:70
msgid "The status for this COE cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:74
msgid "The number of servers that will serve as master for the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:79
msgid "List of floating IP of all servers that serve as node."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:83
msgid "The reason of cluster current status."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:87
msgid "The number of servers that will serve as node in the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:91
msgid "Name of the resource."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:95
msgid ""
"Version info of constainer engine in the chosen COE in cluster for "
"helping client in picking the right version of client."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:100
msgid "The custom discovery url for node discovery."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:104
msgid "The UUID of the cluster template."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:108
msgid "The name of the keypair."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:112
msgid "The timeout for cluster creation in minutes."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:127
msgid "The cluster name."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:131
msgid "The name or ID of the cluster template."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:139
msgid ""
"The name of the keypair. If not presented, use keypair in cluster "
"template."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:147
msgid "The node count for this cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:154
msgid "The number of master nodes for this cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:166
msgid "Timeout for creating the cluster in minutes. Set to 0 for no timeout."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:206
#, python-format
msgid "Failed to create Cluster '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:211
#, python-format
msgid "Unknown status creating Cluster '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:235
#, python-format
msgid "Failed to update Cluster '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster.py:241
#, python-format
msgid "Unknown status updating Cluster '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:59
msgid "The cluster template name."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:63
msgid "The image name or UUID to use as a base image for cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:71
msgid "The nova flavor name or UUID to use when launching the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:79
msgid ""
"The nova flavor name or UUID to use when launching the master node of the"
" cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:87
msgid "The name of the SSH keypair to load into the cluster nodes."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:95
msgid "The external neutron network name or UUID to attach the Cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:104
msgid "The fixed neutron network name or UUID to attach the Cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:112
msgid "The fixed neutron subnet name or UUID to attach the Cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:120
msgid "The DNS nameserver address."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:127
msgid "The size in GB of the docker volume."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:134
msgid "Select a docker storage driver."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:142
msgid "The Container Orchestration Engine for cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:150
msgid ""
"The name of the driver used for instantiating container networks. By "
"default, Magnum will choose the pre-configured network driver based on "
"COE type."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:156
msgid "The volume driver name for instantiating container volume."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:163
msgid "The http_proxy address to use for nodes in cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:167
msgid "The https_proxy address to use for nodes in cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:171
msgid ""
"A comma separated list of addresses for which proxies should not be used "
"in the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:176
msgid "Arbitrary labels in the form of key=value pairs to associate with cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:181
msgid "Disable TLS in the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:186
msgid ""
"Make the cluster template public. To enable this option, you must own the"
" right to publish in magnum. Which default set to admin only."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:194
msgid "Enable the docker registry in the cluster."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:199
msgid "Specify the server type to be used."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:207
msgid ""
"Indicates whether created clusters should have a load balancer for master"
" nodes or not."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:213
msgid "Indicates whether created clusters should have a floating ip or not."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:258
#, python-format
msgid ""
"Volume driver type %(driver)s is not supported by COE:%(coe)s, expecting "
"a %(supported_volume_driver)s volume driver."
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:302
#, python-format
msgid "Failed to update Cluster Template '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/cluster_template.py:310
#, python-format
msgid "Unknown status updating Cluster Template '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:42
msgid "Security service name."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:47
msgid "Security service type."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:56
msgid "DNS IP address used inside tenant's network."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:61
msgid "Security service IP address or hostname."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:66
msgid "Security service domain."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:71
msgid "Security service user or group used by tenant."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:76
msgid "Password used by user."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:81
msgid "Security service description."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:76
msgid "Share protocol supported by shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:83
msgid "Share storage size in GB."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:88
msgid ""
"Name or ID of shared file system snapshot that will be restored and "
"created as a new share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:94
msgid "Share name."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:99
msgid "Metadata key-values defined for share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:104
msgid "Name or ID of shared network defined for shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:109
msgid "Share description."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:114
msgid ""
"Name or ID of shared filesystem type. Types defines some share filesystem"
" profiles that will be used for share creation."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:120
msgid "Defines if shared filesystem is public or private."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:126
msgid "A list of access rules that define access from IP to Share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:132
msgid ""
"IP or other address information about guest that allowed to access to "
"Share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:138
msgid "Type of access that should be provided to guest."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:145
msgid "Level of access that need to be provided for guest."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:158
msgid "The availability zone of shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:162
msgid "Share host."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:166
msgid "Export locations of share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:170
msgid ""
"ID of server (VM, etc...) on host that is used for exporting network "
"file-system."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:175
msgid "Datetime when a share was created."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:179
msgid "Current share status."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:183
msgid "Share project ID."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:260
msgid ""
"Error during applying access rules to share \"{0}\". The root cause of "
"the problem is the following: {1}."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:267
msgid "Error during creation of share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:272
msgid "Unknown share_status during creation of share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:293
msgid "Error during deleting share \"{0}\"."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:298
msgid "Unknown status during deleting share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:50
msgid "Name of the share network."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:55
msgid "Neutron network id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:61
msgid "Neutron subnet id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:67
msgid "Nova network id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:72
msgid "Share network description."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:77
msgid "A list of security services IDs or names."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:88
msgid "VLAN ID for VLAN networks or tunnel-id for GRE/VXLAN networks."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:93
msgid "CIDR of subnet."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:97
msgid "Version of IP address."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:101
msgid "The physical mechanism by which the virtual network is implemented."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:133
msgid ""
"With Neutron enabled you need to pass Neutron network and Neutron subnet "
"instead of Nova network"
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:151
#, python-format
msgid "Provided %(subnet)s does not belong to provided %(network)s."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:46
msgid "Name of the share type."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:51
msgid "Defines if share type is accessible to the public."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:56
msgid ""
"Required extra specification. Defines if share drivers handles share "
"servers."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:62
msgid "Extra specs key-value pairs defined for share type."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:67
msgid ""
"Boolean extra spec that used for filtering of backends by their "
"capability to create share snapshots."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:58
msgid "Name of the cron trigger."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:62
msgid "Cron expression."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:70
#: heat/engine/resources/openstack/mistral/external_resource.py:86
msgid "Workflow to execute."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:75
msgid "Name or ID of the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:83
msgid "Input values for the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:89
msgid "Time of the first execution in format \"YYYY-MM-DD HH:MM\"."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:93
msgid "Remaining executions."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:99
msgid "Time of the next execution in format \"YYYY-MM-DD HH:MM:SS\"."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:103
msgid "Number of remaining executions."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:82
msgid "Dictionary which defines the workflow to run and its params."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:94
msgid ""
"Workflow additional parameters. If workflow is reverse typed, params "
"requires \"task_name\", which defines initial task."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:105
msgid "Resource action which triggers a workflow execution."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:117
msgid "Dictionary which contains input for the workflows."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:123
msgid "Workflow execution description."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:128
msgid ""
"A list of inputs that should cause the resource to be replaced when their"
" values change."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:134
msgid "Triggers UPDATE action execution even if input is unchanged."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:142
msgid "Output from the execution."
msgstr ""

#: heat/engine/resources/openstack/mistral/external_resource.py:174
msgid "Mistral execution is in unknown state."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:91
msgid "Workflow name."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:95
msgid "Workflow type."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:104
msgid ""
"Defines the method in which the request body for signaling a workflow "
"would be parsed. In case this property is set to True, the body would be "
"parsed as a simple json where each key is a workflow input, in other "
"cases body would be parsed expecting a specific json format with two "
"keys: \"input\" and \"params\"."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:115
msgid "List of tags to set on the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:121
msgid "Workflow description."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:126
msgid "Dictionary which contains input for workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:131
msgid ""
"Any data structure arbitrarily containing YAQL expressions that defines "
"workflow output. May be nested."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:138
msgid ""
"Workflow additional parameters. If Workflow is reverse typed, params "
"requires 'task_name', which defines initial task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:144
msgid "Default settings for some of task attributes defined at workflow level."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:151
#: heat/engine/resources/openstack/mistral/workflow.py:252
msgid "List of tasks which will run after the task has completed successfully."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:156
#: heat/engine/resources/openstack/mistral/workflow.py:257
msgid "List of tasks which will run after the task has completed with an error."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:161
#: heat/engine/resources/openstack/mistral/workflow.py:262
msgid ""
"List of tasks which will run after the task has completed regardless of "
"whether it is successful or not."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:167
#: heat/engine/resources/openstack/mistral/workflow.py:287
msgid ""
"List of tasks which should be executed before this task. Used only in "
"reverse workflows."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:172
#: heat/engine/resources/openstack/mistral/workflow.py:292
msgid "Defines a pattern how task should be repeated in case of an error."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:177
#: heat/engine/resources/openstack/mistral/workflow.py:298
msgid ""
"Defines a delay in seconds that Mistral Engine should wait before "
"starting a task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:182
#: heat/engine/resources/openstack/mistral/workflow.py:304
msgid ""
"Defines a delay in seconds that Mistral Engine should wait after a task "
"has completed before starting next tasks defined in on-success, on-error "
"or on-complete."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:189
#: heat/engine/resources/openstack/mistral/workflow.py:312
msgid ""
"Defines whether Mistral Engine should put the workflow on hold or not "
"before starting a task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:194
#: heat/engine/resources/openstack/mistral/workflow.py:319
msgid ""
"Defines a period of time in seconds after which a task will be failed "
"automatically by engine if hasn't completed."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:200
#: heat/engine/resources/openstack/mistral/workflow.py:339
msgid ""
"Defines a max number of actions running simultaneously in a task. "
"Applicable only for tasks that have with-items."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:210
msgid "Dictionary containing workflow tasks."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:216
msgid "Task name."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:221
msgid "Task description."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:225
msgid "Actual input parameter values of the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:229
msgid ""
"Name of the action associated with the task. Either action or workflow "
"may be defined in the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:235
msgid ""
"Name of the workflow associated with the task. Can be defined by "
"intrinsic function get_resource or by name of the referenced workflow, "
"i.e. { workflow: wf_name } or { workflow: { get_resource: wf_name }}. "
"Either action or workflow may be defined in the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:247
msgid "Dictionary of variables to publish to the workflow context."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:268
msgid ""
"Dictionary-like section defining task policies that influence how Mistral"
" Engine runs tasks. Must satisfy Mistral DSL v2."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:274
msgid "Add needed policies directly to the task, Policy keyword is not needed"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:326
msgid ""
"If configured, it allows to run action or workflow associated with a task"
" multiple times on a provided list of items."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:333
msgid "Allowing not to store action results after task completion."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:346
msgid "It defines an executor to which task action should be sent to."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:352
msgid ""
"Allows to synchronize multiple parallel workflow branches and aggregate "
"their data. Valid inputs: all - the task will run only if all upstream "
"tasks are completed. Any numeric value - then the task will run once at "
"least this number of upstream tasks are completed and corresponding "
"conditions have triggered."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:372
msgid "A dictionary which contains name and input of the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:376
msgid ""
"A signed url to create executions for workflows specified in Workflow "
"resource."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:382
msgid ""
"List of workflows' executions, each of them is a dictionary with "
"information about execution. Each dictionary returns values for next "
"keys: id, workflow_name, created_at, updated_at, state for current "
"execution state, input, output."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:432
#, python-format
msgid "Input in signal data must be a map, find a %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:435
#: heat/engine/resources/openstack/mistral/workflow.py:442
#: heat/engine/resources/openstack/mistral/workflow.py:448
msgid "Signal data error"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:440
#, python-format
msgid "Unknown input %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:445
#, python-format
msgid "Params must be a map, find a %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:457
#: heat/engine/resources/openstack/mistral/workflow.py:484
msgid "Mistral resource validation error"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:463
msgid "'task_name' is not assigned in 'params' in case of reverse type workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:477
#, python-format
msgid ""
"task %(task)s contains property 'requires' in case of direct workflow. "
"Only reverse workflows can contain property 'requires'."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:497
#, python-format
msgid "Property %(policies)s and %(item)s cannot be used both at one time."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:64
msgid "Name of the alarm. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:70
msgid "Description of the alarm."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:75
msgid "Expression of the alarm to evaluate."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:81
msgid ""
"The metric dimensions to match to the alarm dimensions. One or more "
"dimension key names separated by a comma."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:96
msgid "The notification methods to use when an alarm state is OK."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:100
#: heat/engine/resources/openstack/monasca/alarm_definition.py:113
#: heat/engine/resources/openstack/monasca/alarm_definition.py:127
msgid "Monasca notification."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:109
msgid "The notification methods to use when an alarm state is ALARM."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:122
msgid "The notification methods to use when an alarm state is UNDETERMINED."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:136
msgid "Whether to enable the actions or not."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:64
msgid "Name of the notification. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:70
msgid "Type of the notification."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:79
msgid ""
"Address of the notification. It could be a valid email address, url or "
"service key based on notification type."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:87
msgid ""
"Interval in seconds to invoke webhooks if the alarm state does not "
"transition away from the defined trigger state. A value of 0 will disable"
" continuous notifications. This property is only applicable for the "
"webhook notification type and has default period interval of 60 seconds."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:108
msgid ""
"The period property can only be specified against a Webhook Notification "
"type."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:120
#, python-format
msgid ""
"Address \"%(addr)s\" should have correct format required by \"%(wh)s\" "
"type of \"%(type)s\" property"
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:128
#, python-format
msgid "Address \"%s\" doesn't have required URL scheme"
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:132
#, python-format
msgid "Address \"%s\" doesn't have required network location"
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:136
#, python-format
msgid "Address \"%(addr)s\" doesn't satisfies allowed schemes: %(schemes)s"
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:144
#, python-format
msgid ""
"Address \"%(addr)s\" doesn't satisfies allowed format for \"%(email)s\" "
"type of \"%(type)s\" property"
msgstr ""

#: heat/engine/resources/openstack/neutron/address_scope.py:45
msgid "The name for the address scope."
msgstr ""

#: heat/engine/resources/openstack/neutron/address_scope.py:50
msgid ""
"Whether the address scope should be shared to other tenants. Note that "
"the default policy setting restricts usage of this attribute to "
"administrative users only, and restricts changing of shared address scope"
" to unshared with update."
msgstr ""

#: heat/engine/resources/openstack/neutron/address_scope.py:60
msgid ""
"The owner tenant ID of the address scope. Only administrative users can "
"specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/address_scope.py:67
msgid "Address family of the address scope, which is 4 or 6."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:34
msgid "Use this resource at your own risk."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:45
#: heat/engine/resources/openstack/neutron/extrarouteset.py:79
msgid "The router id."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:53
msgid "Network in CIDR notation."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:57
msgid "Nexthop IP address."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:100
msgid "Route duplicates an existing route."
msgstr ""

#: heat/engine/resources/openstack/neutron/extrarouteset.py:87
msgid "A set of route dictionaries for the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/extrarouteset.py:93
msgid "The destination network in CIDR notation."
msgstr ""

#: heat/engine/resources/openstack/neutron/extrarouteset.py:101
#: heat/engine/resources/openstack/neutron/subnet.py:211
msgid "The next hop for the destination."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:54
#: heat/engine/resources/openstack/neutron/firewall.py:103
msgid "Name for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:59
msgid "Description for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:64
msgid ""
"Administrative state of the firewall. If false (down), firewall does not "
"forward packets and will drop all traffic to/from VMs behind the "
"firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:72
msgid "The ID of the firewall policy that this firewall is associated with."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:79
#: heat/engine/resources/openstack/neutron/net.py:62
msgid ""
"Extra parameters to include in the request. Parameters are often specific"
" to installed hardware or extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:87
msgid ""
"Whether this firewall should be shared across all tenants. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:93
msgid ""
"There is no such option during 5.0.0, so need to make this property "
"unsupported while it not used."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:107
msgid "Description of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:111
msgid "The administrative state of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:115
msgid "Unique identifier of the firewall policy used to create the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:120
msgid "Shared status of this firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:123
msgid ""
"There is no such option during 5.0.0, so need to make this attribute "
"unsupported, otherwise error will raised."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:131
msgid "The status of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:135
#: heat/engine/resources/openstack/neutron/firewall.py:468
msgid "Id of the tenant owning the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:150
msgid "Error in Firewall"
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:154
msgid "Firewall creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:220
#: heat/engine/resources/openstack/neutron/firewall.py:254
msgid "Name for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:225
msgid "Description for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:230
msgid "Whether this policy should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:236
msgid ""
"Whether this policy should be audited. When set to True, each time the "
"firewall policy or the associated firewall rules are changed, this "
"attribute will be set to False and will have to be explicitly set to True"
" through an update operation."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:246
msgid ""
"An ordered list of firewall rules to apply to the firewall. (Prior to "
"version 14.0.0 this was a required property)."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:258
msgid "Description of the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:262
msgid "List of firewall rules in this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:266
msgid "Shared status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:270
msgid "Audit status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:274
msgid "Id of the tenant owning the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:338
#: heat/engine/resources/openstack/neutron/firewall.py:415
msgid "Name for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:343
msgid "Description for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:348
msgid "Whether this rule should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:354
msgid "Protocol for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:363
msgid "Internet protocol version."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:372
msgid "Source IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:380
msgid "Destination IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:388
msgid "Source port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:393
msgid "Destination port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:398
msgid "Action to be performed on the traffic matching the rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:407
msgid "Whether this rule should be enabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:419
msgid "Description of the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:423
msgid ""
"Unique identifier of the firewall policy to which this firewall rule "
"belongs."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:428
msgid "Shared status of this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:432
msgid "Protocol value for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:436
msgid "Ip_version for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:440
msgid "Source ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:444
msgid "Destination ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:448
msgid "Source port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:452
msgid "Destination port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:456
msgid "Allow or deny action for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:460
msgid "Indicates whether this firewall rule is enabled or not."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:464
msgid "Position of the rule within the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:79
msgid "Network to allocate floating IP from."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:88
msgid "Subnet to allocate floating IP from."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:96
msgid ""
"Extra parameters to include in the \"floatingip\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:103
#: heat/engine/resources/openstack/neutron/floatingip.py:369
msgid ""
"ID of an existing port with at least one IP address to associate with "
"this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:112
#: heat/engine/resources/openstack/neutron/floatingip.py:379
msgid "IP address to use if the port has multiple addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:120
msgid ""
"IP address of the floating IP. NOTE: The default policy setting in "
"Neutron restricts usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:130
msgid "DNS name associated with floating ip."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:139
msgid "DNS domain associated with floating ip."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:150
msgid "ID of the router used as gateway, set when associated with a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:155
msgid "The tenant owning this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:159
msgid "ID of the network in which this IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:163
msgid "IP address of the associated port, if specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:168
msgid "The allocated address of this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:172
msgid "ID of the port associated with this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:363
#: heat/engine/resources/openstack/nova/server.py:489
msgid "ID of the floating IP to associate."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:61
msgid "The name of the interface on the gateway device."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:66
msgid "A list of segmentation ids of the interface."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:73
msgid "The name of the gateway device."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:78
msgid "List of gateway device interfaces."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:90
msgid "A symbolic name for the l2-gateway, which is not required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway.py:97
msgid "List of gateway devices."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway_connection.py:45
msgid "A string specifying a id of the l2gateway resource."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway_connection.py:50
msgid ""
"A string specifying a id of the network resource to connect to the "
"l2gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/l2_gateway_connection.py:59
msgid "A string specifying a segmentation id for the interface on the l2gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:25
msgid ""
"Neutron LBaaS v1 is deprecated in the Liberty release and is planned to "
"be removed in a future release. Going forward, the LBaaS V2 should be "
"used."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:51
#: heat/engine/resources/openstack/neutron/loadbalancer.py:215
#: heat/engine/resources/openstack/neutron/loadbalancer.py:624
#: heat/engine/resources/openstack/neutron/loadbalancer.py:760
msgid "Use LBaaS V2 instead."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:78
#: heat/engine/resources/openstack/neutron/loadbalancer.py:137
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:70
msgid ""
"The minimum time in milliseconds between regular connections of the "
"member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:85
#: heat/engine/resources/openstack/neutron/loadbalancer.py:162
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:119
#: heat/engine/resources/openstack/octavia/health_monitor.py:106
msgid "One of predefined health monitor types."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:93
#: heat/engine/resources/openstack/neutron/loadbalancer.py:152
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:95
#: heat/engine/resources/openstack/octavia/health_monitor.py:82
msgid ""
"Number of permissible connection failures before changing the member "
"status to INACTIVE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:100
#: heat/engine/resources/openstack/neutron/loadbalancer.py:157
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:111
msgid ""
"Maximum number of milliseconds for a monitor to wait for a connection to "
"be established before it times out."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:107
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:64
#: heat/engine/resources/openstack/octavia/health_monitor.py:53
msgid "The administrative state of the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:113
#: heat/engine/resources/openstack/neutron/loadbalancer.py:147
#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:87
#: heat/engine/resources/openstack/octavia/health_monitor.py:75
msgid "The HTTP method used for requests by the monitor of type HTTP."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:119
#: heat/engine/resources/openstack/neutron/loadbalancer.py:142
msgid ""
"The list of HTTP status codes expected in response from the member to "
"declare it healthy."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:125
#: heat/engine/resources/openstack/neutron/loadbalancer.py:166
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:133
msgid "The administrative state of this health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:171
msgid "Tenant owning the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:258
msgid "Protocol for balancing."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:281
#: heat/engine/resources/openstack/neutron/loadbalancer.py:410
msgid ""
"The subnet for the port on which the members of the pool will be "
"connected."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:291
#: heat/engine/resources/openstack/neutron/loadbalancer.py:415
#: heat/engine/resources/openstack/neutron/lbaas/pool.py:105
#: heat/engine/resources/openstack/octavia/pool.py:98
msgid "The algorithm used to distribute load between the members of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:302
#: heat/engine/resources/openstack/neutron/loadbalancer.py:402
msgid "Name of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:306
#: heat/engine/resources/openstack/neutron/loadbalancer.py:420
msgid "Description of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:311
#: heat/engine/resources/openstack/neutron/loadbalancer.py:398
#: heat/engine/resources/openstack/neutron/lbaas/pool.py:68
#: heat/engine/resources/openstack/octavia/pool.py:61
msgid "The administrative state of this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:317
msgid "LBaaS provider to implement this load balancer instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:325
msgid "IP address and port of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:329
msgid "Name of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:333
msgid "Description of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:337
msgid "Subnet of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:344
msgid "IP address of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:351
msgid "The maximum number of connections per second allowed for the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:356
msgid ""
"TCP port on which to listen for client traffic that is associated with "
"the vip address."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:362
#: heat/engine/resources/openstack/neutron/lbaas/pool.py:80
#: heat/engine/resources/openstack/octavia/pool.py:73
msgid "Configuration of session persistence."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:366
#: heat/engine/resources/openstack/neutron/lbaas/pool.py:84
#: heat/engine/resources/openstack/octavia/pool.py:77
msgid "Method of implementation of session persistence feature."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:375
#: heat/engine/resources/openstack/neutron/lbaas/pool.py:93
#: heat/engine/resources/openstack/octavia/pool.py:86
msgid "Name of the cookie, required if type is APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:382
msgid "The administrative state of this vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:390
msgid "List of health monitors associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:406
msgid "Protocol to balance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:424
msgid "Tenant owning the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:428
msgid "Vip associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:432
msgid "Provider implementing this load balancer instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:479
#: heat/tests/openstack/neutron/test_neutron_loadbalancer.py:557
msgid ""
"Property cookie_name is required, when session_persistence type is set to"
" APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:536
msgid "error in vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:539
msgid "Pool creation failed due to vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:543
msgid "error in pool"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:547
msgid "Pool creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:650
#: heat/engine/resources/openstack/neutron/loadbalancer.py:704
#: heat/engine/resources/openstack/neutron/loadbalancer.py:778
msgid "The ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:656
#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:65
#: heat/engine/resources/openstack/octavia/pool_member.py:53
msgid "IP address of the pool member on the pool network."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:664
#: heat/engine/resources/openstack/neutron/loadbalancer.py:708
msgid "TCP port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:673
#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:82
#: heat/engine/resources/openstack/octavia/pool_member.py:85
msgid "Weight of pool member in the pool (default to 1)."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:681
#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:91
#: heat/engine/resources/openstack/octavia/pool_member.py:94
msgid "The administrative state of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:688
msgid "The administrative state of this pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:692
msgid "Tenant owning the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:696
msgid "Weight of the pool member in the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:700
msgid "IP address of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:784
msgid "Port number on which the servers are running on the members."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:792
msgid "The list of Nova server IDs load balanced."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:53
#: heat/engine/resources/openstack/neutron/metering.py:70
msgid "Name of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:57
#: heat/engine/resources/openstack/neutron/metering.py:74
msgid "Description of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:61
msgid "Whether the metering label should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:78
msgid "Shared status of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:130
#: heat/engine/resources/openstack/neutron/metering.py:166
msgid "The metering label ID to associate with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:135
msgid "Indicates remote IP prefix to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:141
msgid "The direction in which metering rule is applied, either ingress or egress."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:149
msgid ""
"Specify whether the remote_ip_prefix will be excluded or not from traffic"
" counters of the metering label. For example to not count the traffic of "
"a specific IP address of a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:158
msgid "The direction in which metering rule is applied."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:162
msgid "Exclude state for cidr."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:170
msgid "CIDR to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:56
msgid ""
"A string specifying a symbolic name for the network, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:69
msgid "A boolean value specifying the administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:76
msgid ""
"The ID of the tenant which will own the network. Only administrative "
"users can set the tenant identifier; this cannot be changed using "
"authorization policies."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:82
msgid ""
"Whether this network should be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:90
msgid ""
"The IDs of the DHCP agent to schedule the network. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:97
#: heat/engine/resources/openstack/neutron/provider_net.py:93
msgid ""
"Flag to enable/disable port security on the network. It provides the "
"default value for the attribute of the ports created on this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:105
msgid "The name or ID of QoS policy to attach to this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:114
#: heat/engine/resources/openstack/neutron/provider_net.py:115
msgid "DNS domain associated with this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:123
msgid "The tags to be added to the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:132
#: heat/engine/resources/openstack/neutron/provider_net.py:126
msgid "The status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:136
msgid "The name of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:140
#: heat/engine/resources/openstack/neutron/provider_net.py:130
msgid "Subnets of this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:144
msgid "The administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:148
msgid "The tenant owning this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:152
msgid "Port security enabled of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:157
msgid "The maximum transmission unit size(in bytes) for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:162
msgid "The QoS policy ID attached to this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:167
msgid ""
"A boolean value for L2 adjacency, True means that you can expect L2 "
"connectivity throughout the Network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:173
#: heat/engine/resources/openstack/neutron/provider_net.py:134
msgid "The segments of this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:64
msgid "The name of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:69
msgid "Device info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:78
msgid "The device id for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:84
msgid "The interface name for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:93
msgid "Connection info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:116
msgid "The internal network to connect on the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:127
msgid "L2 segmentation strategy on the external side of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:136
msgid ""
"The id for L2 segment on the external side of the network gateway. Must "
"be specified when using vlan."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:149
msgid "A boolean value of default flag."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:183
msgid "segmentation_id must be specified for using vlan"
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:187
msgid "segmentation_id cannot be specified except 0 for using flat"
msgstr ""

#: heat/engine/resources/openstack/neutron/neutron.py:129
msgid "Resource is not built"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:93
msgid "A symbolic name for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:114
#, python-format
msgid ""
"Network this port belongs to. If you plan to use current port to assign "
"Floating IP, you should specify %(fixed_ips)s with %(subnet)s. Note if "
"this changes to a different network update, the port will be replaced."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:127
msgid "Device ID of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:133
msgid ""
"Name of the network owning the port. The value is typically "
"network:floatingip or network:router_interface or network:dhcp."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:141
msgid "Desired IPs for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:162
msgid "Subnet in which to allocate the IP address for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:171
msgid "IP address desired in the subnet for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:182
msgid "Security group IDs to associate with this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:187
msgid ""
"Policy on how to respond to a stack-update for this resource. "
"REPLACE_ALWAYS will replace the port regardless of any property changes. "
"AUTO will update the existing port for any changed update-allowed "
"property."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:202
msgid ""
"Replacement policy used to work around flawed nova/neutron port "
"interaction which has been fixed since Liberty."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:211
msgid "DNS name associated with the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:220
msgid "The tags to be added to the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:232
#: heat/engine/resources/openstack/neutron/subnet.py:125
msgid "Extra parameters to include in the request."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:238
#: heat/engine/resources/openstack/neutron/port.py:334
msgid "The administrative state of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:244
msgid ""
"MAC address to give to this port. The default update policy of this "
"property in neutron is that allow admin role only."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:252
msgid "Additional MAC/IP address pairs allowed to pass through the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:259
msgid "MAC address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:266
msgid "IP address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:278
msgid ""
"The vnic type to be bound on the neutron port. To support SR-IOV PCI "
"passthrough networking, you can request that the neutron port to be "
"realized as normal (virtual nic), direct (pci passthrough), or macvtap "
"(virtual interface with a tap-like software interface). Note that this "
"only works for Neutron deployments that support the bindings extension."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:296
msgid ""
"Flag to enable/disable port security on the port. When disable this "
"feature(set it to False), there will be no packages filtering, like "
"security-group and address-pairs."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:304
msgid "The name or ID of QoS policy to attach to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:313
msgid "Flag to enable/disable propagate uplink status on the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:319
msgid "Flag to disable all fixed ips on the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:338
msgid "Unique identifier for the device."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:342
msgid "Name of the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:346
msgid "Fixed IP addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:350
msgid "MAC address of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:354
msgid "Friendly name of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:358
msgid "Unique identifier for the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:362
msgid "A list of security groups for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:366
msgid "The status of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:370
msgid "Tenant owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:374
msgid "Additional MAC/IP address pairs allowed to pass through a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:379
msgid "A list of all subnet attributes for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:383
msgid "Port security enabled of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:388
msgid "The QoS policy ID attached to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:393
msgid "The DNS assigned to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:398
msgid ""
"The attributes of the network owning the port. (The full list of response"
" parameters can be found in the `Openstack Networking service API "
"reference <https://docs.openstack.org/api-ref/network/>`_.) The following"
" examples demonstrate some (not all) possible expressions. (Obtains the "
"network, the MTU (Maximum transmission unit), the network tags and the "
"l2_adjacency property): ``{get_attr: [<port>, network]}``, ``{get_attr: "
"[<port>, network, mtu]}``, ``{get_attr: [<port>, network, tags]}?``, "
"``{get_attr: [<port>, network, l2_adjacency]}``."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:414
msgid "Enable/Disable propagate uplink status for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:64
msgid "A string specifying the provider network type for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:74
msgid "A string specifying physical network mapping for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:80
msgid "A string specifying the segmentation id for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:87
msgid "Whether this network should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:101
msgid "Whether the network contains an external router."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:108
msgid "The tags to be added to the provider network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:150
msgid "segmentation_id not allowed for flat network type."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:56
msgid "The name for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:61
msgid "The description for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:66
msgid "Whether this QoS policy should be shared to other tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:72
msgid "The owner tenant ID of this QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:78
msgid "A list of all rules for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:122
msgid "ID or name of the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:128
msgid "The owner tenant ID of this rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:167
msgid "Max bandwidth in kbps."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:176
msgid "Max burst bandwidth in kbps."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:185
#: heat/engine/resources/openstack/neutron/qos.py:340
msgid "Traffic direction from the point of view of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:251
msgid "DSCP mark between 0 and 56, except 2-6, 42, 44, and 50-54."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:331
msgid "Min bandwidth in kbps."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:60
#: heat/engine/resources/openstack/nova/quota.py:72
#: heat/engine/resources/openstack/octavia/quota.py:58
msgid "Name or id of the project to set the quota for."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:68
msgid "Quota for the number of subnets. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:75
msgid "Quota for the number of networks. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:82
msgid "Quota for the number of floating IPs. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:89
msgid "Quota for the number of security group rules. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:96
msgid "Quota for the number of security groups. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:103
msgid "Quota for the number of routers. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:110
msgid "Quota for the number of ports. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:117
msgid "Quota for the number of subnet pools. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/quota.py:125
msgid "Quota for the number of rbac policies. Setting -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:64
msgid "Type of the object that RBAC policy affects."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:72
msgid "ID of the tenant to which the RBAC policy will be enforced."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:78
#, python-format
msgid ""
"Action for the RBAC policy. The allowed actions differ for different "
"object types - only %(network)s objects can have an %(external)s action."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:89
msgid "ID or name of the RBAC object."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:94
msgid ""
"The owner tenant ID. Only required if the caller has an administrative "
"role and wants to create a RBAC for another tenant."
msgstr ""

#: heat/engine/resources/openstack/neutron/rbac_policy.py:149
#, python-format
msgid ""
"Invalid action \"%(action)s\" for object type %(obj_type)s. Valid "
"actions: %(valid_actions)s"
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:68
msgid "The name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:73
msgid "External network gateway configuration for a router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:77
msgid "ID or name of the external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:83
msgid ""
"Enables Source NAT on the router gateway. NOTE: The default policy "
"setting in Neutron restricts usage of this property to administrative "
"users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:90
msgid "External fixed IP addresses for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:96
msgid "External fixed IP address."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:103
msgid "Subnet of external fixed IP address."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:119
msgid "Extra parameters to include in the creation request."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:125
msgid "The administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:131
msgid ""
"ID of the L3 agent. NOTE: The default policy setting in Neutron restricts"
" usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:148
msgid ""
"ID list of the L3 agent. User can specify multi-agents for highly "
"available router. NOTE: The default policy setting in Neutron restricts "
"usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:160
msgid ""
"Indicates whether or not to create a distributed router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. This property can not be used in conjunction "
"with the L3 agent ID."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:168
msgid ""
"Indicates whether or not to create a highly available router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. And now neutron do not support distributed and"
" ha at the same time."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:176
msgid "The tags to be added to the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:185
msgid "The status of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:189
msgid "Gateway network for the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:193
msgid "Friendly name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:197
msgid "Administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:201
msgid "Tenant owning the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:259
msgid "Non HA routers can only have one L3 agent."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:402
msgid "The router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:410
#: heat/engine/resources/openstack/neutron/router.py:587
msgid "ID of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:442
msgid "The subnet, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:450
msgid "The port id, either subnet or port_id should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:467
msgid "The port, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:569
msgid ""
"Use the `external_gateway_info` property in the router resource to set up"
" the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:610
msgid "external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:57
#: heat/engine/resources/openstack/neutron/security_group_rule.py:67
msgid ""
"The direction in which the security group rule is applied. For a compute "
"instance, an ingress security group rule matches traffic that is incoming"
" (ingress) for that instance. An egress rule is applied to traffic "
"leaving the instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:69
#: heat/engine/resources/openstack/neutron/security_group_rule.py:79
msgid "Ethertype of the traffic."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:77
#: heat/engine/resources/openstack/neutron/security_group_rule.py:87
msgid ""
"The minimum port number in the range that is matched by the security "
"group rule. If the protocol is TCP or UDP, this value must be less than "
"or equal to the value of the port_range_max attribute. If the protocol is"
" ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:88
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:98
msgid ""
"The protocol that is matched by the security group rule. Valid values "
"include tcp, udp, and icmp."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:103
msgid "Whether to specify a remote group or a remote IP prefix."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:112
msgid ""
"The remote group ID to be associated with this security group rule. If no"
" value is specified then this rule will use this security group for the "
"remote_group_id. The remote mode parameter must be set to "
"\"remote_group_id\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:122
#: heat/engine/resources/openstack/neutron/security_group_rule.py:126
msgid ""
"The remote IP prefix (CIDR) to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:133
msgid ""
"A string specifying a symbolic name for the security group, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:144
msgid "List of security group rules."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:162
msgid "Security groups cannot be assigned the name \"default\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:55
msgid "Security group name or ID to add rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:63
msgid "Description of the security group rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:98
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP code."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:108
msgid ""
"The protocol that is matched by the security group rule. Allowed values "
"are ah, dccp, egp, esp, gre, icmp, icmpv6, igmp, ipv6-encap, ipv6-frag, "
"ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf, pgm, rsvp, sctp, tcp,"
" udp, udplite, vrrp and integer representations [0-255]."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:118
msgid ""
"The remote group name or ID to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group_rule.py:167
msgid ""
"The minimum port number must be less than or equal to the maximum port "
"number."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:52
msgid "The name/id of network to associate with this segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:58
msgid "Type of network to associate with this segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:66
msgid "Name of physical network to associate with this segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:70
msgid "Segmentation ID for this segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:77
msgid "Name of the segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:82
msgid "Description of the segment."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:105
#, python-format
msgid "%(prop)s is required for %(type)s provider network."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:116
#, python-format
msgid "%(prop)s is prohibited for %(type)s provider network."
msgstr ""

#: heat/engine/resources/openstack/neutron/segment.py:129
msgid "Up to 4094 VLAN network segments can exist on each physical_network."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:95
msgid "The ID of the attached network."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:104
msgid "The name or ID of the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:112
msgid "Prefix length for subnet allocation from subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:118
msgid "The CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:131
msgid "The name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:136
msgid "The IP version, which is 4 or 6."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:144
msgid "A specified set of DNS name servers to be used."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:150
msgid ""
"The gateway IP address. Set to any of [ null | ~ | \"\" ] to "
"create/update a subnet without a gateway. If omitted when creation, "
"neutron will assign the first free IP address within the subnet to the "
"gateway automatically. If remove this from template when update, the old "
"gateway IP address will be detached."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:160
msgid "Set to true if DHCP is enabled and false if DHCP is disabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:166
msgid "The start and end addresses for the allocation pools."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:172
msgid "Start address for the allocation pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:180
msgid "End address for the allocation pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:192
msgid ""
"The ID of the tenant who owns the network. Only administrative users can "
"specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:197
msgid "A list of host route dictionaries for the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:203
msgid "The destination for static route."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:223
msgid "IPv6 RA (Router Advertisement) mode."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:232
msgid "IPv6 address mode."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:241
msgid "The name/ID of the segment to associate."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:249
msgid "Update allowed since version 11.0.0."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:258
msgid "The tags to be added to the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:267
msgid "Friendly name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:271
msgid "Parent network of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:275
msgid "Tenant owning the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:279
msgid "Ip allocation pools and their ranges."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:283
msgid "Ip of the subnet's gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:287
msgid "Additional routes for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:291
msgid "Ip version for the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:295
msgid "CIDR block notation for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:299
msgid "List of dns nameservers."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:303
msgid "'true' if DHCP is enabled for this subnet; 'false' otherwise."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:372
msgid "ipv6_ra_mode and ipv6_address_mode are not supported for ipv4."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:376
msgid "When both ipv6_ra_mode and ipv6_address_mode are set, they must be equal."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:383
#, python-format
msgid "Gateway IP address \"%(gateway)s\" is in invalid format."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:421
msgid ""
"Updating the subnet segment assciation only allowed when the current "
"segment_id is None. The subnet is currently associated with segment. In "
"this state update"
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:49
msgid "Name of the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:54
msgid "List of subnet prefixes to assign."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:67
msgid "An address scope ID to assign to the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:75
msgid ""
"A per-tenant quota on the prefix space that can be allocated from the "
"subnet pool for tenant subnets."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:82
msgid ""
"The size of the prefix to allocate when the cidr or prefixlen attributes "
"are not specified while creating a subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:90
msgid "Smallest prefix size that can be allocated from the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:97
msgid "Maximum prefix size that can be allocated from the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:104
msgid ""
"Whether this is default IPv4/IPv6 subnet pool. There can only be one "
"default subnet pool for each IP family. Note that the default policy "
"setting restricts administrative users to set this to True."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:113
msgid ""
"The ID of the tenant who owns the subnet pool. Only administrative users "
"can specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:119
msgid ""
"Whether the subnet pool will be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:126
msgid "The tags to be added to the subnetpool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:141
#, python-format
msgid "Illegal prefix bounds: %(key1)s=%(value1)s, %(key2)s=%(value2)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:172
#, python-format
msgid ""
"Property %(key)s updated value %(new)s should be superset of existing "
"value %(old)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:101
msgid "ID or name of a port to be used as a subport."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:109
msgid "Segmentation type to be used on the subport."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:118
msgid ""
"The segmentation ID on which the subport network is presented to the "
"instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:137
msgid ""
"A string specifying a symbolic name for the trunk, which is not required "
"to be uniqe."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:143
msgid "ID or name of a port to be used as a parent port."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:152
msgid "List with 0 or more map elements containing subport details."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:161
msgid "Description for the trunk."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:166
msgid "Enable/disable subport addition, removal and trunk delete."
msgstr ""

#: heat/engine/resources/openstack/neutron/trunk.py:173
msgid "ID or name of a port used as a parent port."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:54
msgid "Name for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:59
msgid "Description for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:64
msgid "Administrative state for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:85
msgid "Subnet in which the vpn service will be created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:94
msgid ""
"Unique identifier for the router to which the vpn service will be "
"inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:101
#, python-format
msgid "Use property %s"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:111
msgid "The router to which the vpn service will be inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:122
msgid "The administrative state of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:126
msgid "The description of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:130
msgid "The name of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:134
msgid "The unique identifier of the router to which the vpn service was inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:139
msgid "The status of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:143
msgid "The unique identifier of the subnet in which the vpn service was created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:148
msgid "The unique identifier of the tenant owning the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:207
msgid "Error in VPNService"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:211
msgid "VPNService creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:270
msgid "Name for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:275
msgid "Description for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:280
msgid "Remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:286
msgid "Remote branch router identity."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:291
msgid "Remote subnet(s) in CIDR format."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:302
msgid "Maximum transmission unit size (in bytes) for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:308
msgid "Dead Peer Detection protocol configuration for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:313
msgid "Controls DPD protocol mode."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:323
msgid "Number of seconds for the DPD delay."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:328
msgid "Number of seconds for the DPD timeout."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:335
msgid "Pre-shared key string for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:340
msgid "Initiator state in lowercase for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:348
msgid "Administrative state for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:354
msgid ""
"Unique identifier for the ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:360
msgid ""
"Unique identifier for the ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:366
msgid ""
"Unique identifier for the vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:374
msgid "The administrative state of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:378
msgid "The authentication mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:382
msgid "The description of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:386
msgid ""
"The dead peer detection protocol configuration of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:391
msgid ""
"The unique identifier of ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:396
msgid "The initiator of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:400
msgid ""
"The unique identifier of ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:405
msgid ""
"The maximum transmission unit size (in bytes) of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:410
msgid "The name of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:414
msgid "The remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:419
msgid "The remote subnet(s) in CIDR format of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:424
msgid "The remote branch router identity of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:429
msgid "The pre-shared key string of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:433
msgid "The route mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:437
msgid "The status of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:441
msgid "The unique identifier of the tenant owning the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:446
msgid ""
"The unique identifier of vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:471
msgid "Error in IPsecSiteConnection"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:475
msgid "IPsecSiteConnection creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:530
msgid "Name for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:535
msgid "Description for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:540
msgid "Authentication hash algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:550
msgid "Encryption algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:560
msgid "Negotiation mode for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:568
msgid "Safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:573
#: heat/engine/resources/openstack/neutron/vpnservice.py:755
msgid "Safety assessment lifetime units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:581
#: heat/engine/resources/openstack/neutron/vpnservice.py:764
msgid "Safety assessment lifetime value in specified units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:589
msgid "Perfect forward secrecy in lowercase for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:598
msgid "Version for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:609
msgid "The authentication hash algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:613
msgid "The description of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:617
msgid "The encryption algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:621
msgid "The version of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:625
msgid "The safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:630
msgid "The name of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:634
msgid "The perfect forward secrecy of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:638
msgid "The negotiation mode of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:642
msgid "The unique identifier of the tenant owning the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:707
msgid "Name for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:712
msgid "Description for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:717
msgid "Transform protocol for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:725
msgid "Encapsulation mode for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:733
msgid "Authentication hash algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:741
msgid "Encryption algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:750
msgid "Safety assessment lifetime configuration for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:772
msgid "Perfect forward secrecy for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:782
msgid "The authentication hash algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:786
msgid "The description of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:790
msgid "The encapsulation mode of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:794
msgid "The encryption algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:798
msgid "The safety assessment lifetime configuration of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:803
msgid "The name of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:807
msgid "The perfect forward secrecy of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:811
msgid "The unique identifier of the tenant owning the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:815
msgid "The transform protocol of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:78
#: heat/engine/resources/openstack/octavia/health_monitor.py:67
msgid ""
"The HTTP status codes expected in response from the member to declare it "
"healthy. Specify one of the following values: a single value, such as "
"200. a list, such as 200, 202. a range, such as 200-204."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:103
#: heat/engine/resources/openstack/octavia/health_monitor.py:90
msgid "ID or name of the load balancing pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:127
#: heat/engine/resources/openstack/octavia/health_monitor.py:115
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health. A valid value is a string the begins with a forward slash "
"(/)."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:135
#: heat/engine/resources/openstack/octavia/health_monitor.py:122
msgid "ID of the tenant who owns the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/health_monitor.py:141
#: heat/engine/resources/openstack/octavia/health_monitor.py:128
msgid "The list of Pools related to this monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:65
#: heat/engine/resources/openstack/octavia/l7policy.py:56
msgid "Name of the policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:70
#: heat/engine/resources/openstack/octavia/l7policy.py:61
msgid "Description of the policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:75
#: heat/engine/resources/openstack/octavia/l7policy.py:66
msgid "The administrative state of the policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:81
#: heat/engine/resources/openstack/octavia/l7policy.py:72
msgid "Action type of the policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:88
#: heat/engine/resources/openstack/octavia/l7policy.py:79
msgid "ID or name of the pool for REDIRECT_TO_POOL action type."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:96
#: heat/engine/resources/openstack/octavia/l7policy.py:87
msgid "URL for REDIRECT_TO_URL action type. This should be a valid URL string."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:102
#: heat/engine/resources/openstack/octavia/l7policy.py:93
msgid ""
"L7 policy position in ordered policies list. This must be an integer "
"starting from 1. If not specified, policy will be placed at the tail of "
"existing policies list."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:110
#: heat/engine/resources/openstack/octavia/l7policy.py:101
msgid "ID or name of the listener this policy belongs to."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:120
#: heat/engine/resources/openstack/octavia/l7policy.py:111
msgid "L7Rules associated with this policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:157
#: heat/engine/resources/openstack/octavia/l7policy.py:139
#, python-format
msgid ""
"Properties %(pool)s and %(url)s are not required when %(action)s type is "
"set to %(action_type)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:172
#: heat/engine/resources/openstack/octavia/l7policy.py:154
#, python-format
msgid ""
"Property %(pool)s is required when %(action)s type is set to "
"%(action_type)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7policy.py:186
#: heat/engine/resources/openstack/octavia/l7policy.py:168
#, python-format
msgid ""
"Property %(url)s is required when %(action)s type is set to "
"%(action_type)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:61
#: heat/engine/resources/openstack/octavia/l7rule.py:53
msgid "The administrative state of the rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:67
#: heat/engine/resources/openstack/octavia/l7rule.py:59
msgid "ID or name of L7 policy this rule belongs to."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:72
#: heat/engine/resources/openstack/octavia/l7rule.py:67
msgid "Rule type."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:79
#: heat/engine/resources/openstack/octavia/l7rule.py:74
msgid "Rule compare type."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:86
#: heat/engine/resources/openstack/octavia/l7rule.py:81
msgid "Invert the compare type."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:92
#: heat/engine/resources/openstack/octavia/l7rule.py:87
msgid "Key to compare. Relevant for HEADER and COOKIE types only."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:97
#: heat/engine/resources/openstack/octavia/l7rule.py:92
msgid "Value to compare."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/l7rule.py:137
#: heat/engine/resources/openstack/octavia/l7rule.py:113
#, python-format
msgid ""
"Property %(key)s is missing. This property should be specified for rules "
"of %(header)s and %(cookie)s types."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:65
#: heat/engine/resources/openstack/octavia/listener.py:53
msgid "TCP or UDP port on which to listen for client traffic."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:73
#: heat/engine/resources/openstack/octavia/listener.py:61
msgid "Protocol on which to listen for the client traffic."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:81
#: heat/engine/resources/openstack/octavia/listener.py:69
msgid "ID or name of the load balancer with which listener is associated."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:89
msgid ""
"ID or name of the default pool for the listener. Requires shared_pools "
"service extension."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:99
#: heat/engine/resources/openstack/octavia/listener.py:85
msgid "Name of this listener."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:104
#: heat/engine/resources/openstack/octavia/listener.py:90
msgid "The administrative state of this listener."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:110
#: heat/engine/resources/openstack/octavia/listener.py:96
msgid "Description of this listener."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:116
#: heat/engine/resources/openstack/octavia/listener.py:102
msgid "Default TLS container reference to retrieve TLS information."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:122
#: heat/engine/resources/openstack/octavia/listener.py:108
msgid "List of TLS container references for SNI."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:127
#: heat/engine/resources/openstack/octavia/listener.py:113
msgid ""
"The maximum number of connections permitted for this load balancer. "
"Defaults to -1, which is infinite."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:137
#: heat/engine/resources/openstack/octavia/listener.py:123
msgid "The ID of the tenant who owns the listener."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:143
#: heat/engine/resources/openstack/octavia/listener.py:143
msgid "ID of the load balancer this listener is associated to."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:147
#: heat/engine/resources/openstack/octavia/listener.py:147
msgid "ID of the default pool this listener is associated to."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/listener.py:189
#: heat/engine/resources/openstack/octavia/listener.py:189
#, python-format
msgid "Property %(ref)s required when protocol is %(term)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:59
#: heat/engine/resources/openstack/octavia/loadbalancer.py:48
msgid "Description of this Load Balancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:65
#: heat/engine/resources/openstack/octavia/loadbalancer.py:54
msgid "Name of this Load Balancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:70
#: heat/engine/resources/openstack/octavia/loadbalancer.py:59
msgid "Provider for this Load Balancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:77
#: heat/engine/resources/openstack/octavia/loadbalancer.py:63
msgid "IP address for the VIP."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:84
#: heat/engine/resources/openstack/octavia/loadbalancer.py:70
msgid "The name or ID of the subnet on which to allocate the VIP address."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:93
#: heat/engine/resources/openstack/octavia/loadbalancer.py:79
msgid "The administrative state of this Load Balancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:99
#: heat/engine/resources/openstack/octavia/loadbalancer.py:85
msgid ""
"The ID of the tenant who owns the Load Balancer. Only administrative "
"users can specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:110
#: heat/engine/resources/openstack/octavia/loadbalancer.py:104
msgid "The VIP address of the LoadBalancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:114
#: heat/engine/resources/openstack/octavia/loadbalancer.py:108
msgid "The VIP port of the LoadBalancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:118
#: heat/engine/resources/openstack/octavia/loadbalancer.py:112
msgid "The VIP subnet of the LoadBalancer."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/loadbalancer.py:122
#: heat/engine/resources/openstack/octavia/loadbalancer.py:116
msgid "Pools this LoadBalancer is associated with."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:74
#: heat/engine/resources/openstack/octavia/pool.py:67
msgid "Description of this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:100
#: heat/engine/resources/openstack/octavia/pool.py:93
msgid "Name of this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:116
#: heat/engine/resources/openstack/octavia/pool.py:109
msgid "Listener name or ID to be associated with this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:123
msgid ""
"Loadbalancer name or ID to be associated with this pool. Requires "
"shared_pools service extension."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:132
#: heat/engine/resources/openstack/octavia/pool.py:123
msgid "Protocol of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:142
#: heat/engine/resources/openstack/octavia/pool.py:140
msgid "ID of the health monitor associated with this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:146
#: heat/engine/resources/openstack/octavia/pool.py:144
msgid "Listener associated with this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:150
#: heat/engine/resources/openstack/octavia/pool.py:148
msgid "Members associated with this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:208
#: heat/engine/resources/openstack/octavia/pool.py:199
#, python-format
msgid "Property %(cookie)s is required when %(sp)s type is set to %(app)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool.py:216
#: heat/engine/resources/openstack/octavia/pool.py:207
#, python-format
msgid ""
"Property %(cookie)s must NOT be specified when %(sp)s type is set to "
"%(ip)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:57
#: heat/engine/resources/openstack/octavia/pool_member.py:45
msgid "Name or ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:73
#: heat/engine/resources/openstack/octavia/pool_member.py:61
msgid "Port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:97
#: heat/engine/resources/openstack/octavia/pool_member.py:100
msgid "Subnet name or ID of this member."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:108
msgid "The IP address of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/lbaas/pool_member.py:112
msgid "The ID of the pool to which the pool member belongs."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:51
msgid "Name of the Flow Classifier."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:56
msgid "Description for the Flow Classifier."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:61
msgid "IP Protocol for the Flow Classifier."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:68
msgid "L2 ethertype."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:76
msgid "Source IP prefix or subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:83
msgid "Destination IP prefix or subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:90
msgid "Source protocol port Minimum."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:97
msgid "Source protocol port Maximum."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:104
msgid "Destination protocol port minimum."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:111
msgid "Destination protocol port maximum."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:118
msgid "ID or name of the neutron source port."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:125
msgid "ID or name of the neutron destination port."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:132
msgid "Dictionary of L7-parameters."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/flow_classifier.py:135
msgid "Currently, no value is supported for this option."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:49
msgid "Name of the Port Chain."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:54
msgid "Description for the Port Chain."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:59
msgid "A list of port pair groups to apply to the Port Chain."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:64
msgid "Port Pair Group ID or Name ."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:72
msgid "A list of flow classifiers to apply to the Port Chain."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:77
msgid "Flow Classifier ID or Name ."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_chain.py:85
msgid ""
"Dictionary of chain parameters. Currently, only correlation=mpls is "
"supported by default."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair.py:49
msgid "Name for the Port Pair."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair.py:54
msgid "Description for the Port Pair."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair.py:59
msgid "ID or name of the ingress neutron port."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair.py:65
msgid "ID or name of the egress neutron port."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair.py:71
msgid ""
"Dictionary of service function parameter. Currently only correlation=None"
" is supported."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair_group.py:45
msgid "Name for the Port Pair Group."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair_group.py:50
msgid "Description for the Port Pair Group."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair_group.py:55
msgid "A list of Port Pair IDs or names to apply."
msgstr ""

#: heat/engine/resources/openstack/neutron/sfc/port_pair_group.py:60
msgid "Port Pair ID or name ."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:53
msgid "Name for the Tap-Flow."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:59
msgid "Description for the Tap-Flow."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:65
msgid "ID or name of the tap-flow neutron port."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:71
msgid "ID or name of the neutron tap-service."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:79
msgid "The Direction to capture the traffic on."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_flow.py:87
msgid ""
"Comma separated list of VLANs, data for which needs to be captured on "
"probe VM."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_service.py:49
msgid "Name for the Tap-Service."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_service.py:55
msgid "Description for the Tap-Service."
msgstr ""

#: heat/engine/resources/openstack/neutron/taas/tap_service.py:61
msgid "ID or name of the tap-service neutron port."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:63
msgid "List of tenants."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:74
msgid ""
"Unique ID of the flavor. If not specified, an UUID will be auto generated"
" and used."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:80
msgid "Name of the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:85
msgid "Memory in MB for the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:90
msgid "Number of VCPUs for the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:95
msgid ""
"Size of local disk in GB. The \"0\" size is a special case that uses the "
"native base image size as the size of the ephemeral root volume."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:102
msgid "Swap space in MB."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:107
msgid "Size of a secondary ephemeral data disk in GB."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:112
msgid "RX/TX factor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:117
msgid "Key/Value pairs to extend the capabilities of the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:122
msgid ""
"Scope of flavor accessibility. Public or private. Default value is True, "
"means public, shared across all projects."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:133
msgid "Whether the flavor is shared across all projects."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:138
msgid "Extra specs of the flavor in key-value pairs."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:38
msgid "Please use OS::Neutron::FloatingIP instead."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:62
msgid ""
"Allocate a floating IP from a given floating IP pool. Now that nova-"
"network is not supported this represents the external network."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:71
msgid "Pool from which floating IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:75
msgid "Allocated floating IP address."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:134
msgid "Please use OS::Neutron::FloatingIPAssociation instead."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:157
msgid "Server to assign floating IP to."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:166
msgid "ID of the floating IP to assign to the server."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:50
msgid "Name for the aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:56
msgid "Name for the availability zone."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:61
msgid "List of hosts to join aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:70
msgid "Arbitrary key/value metadata to store information for aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:60
msgid "The name of the key pair."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:68
msgid ""
"True if the system should remember a generated private key; False "
"otherwise."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:74
msgid ""
"The optional public key. This allows users to supply the public key from "
"a pre-existing key pair. If not supplied, a new key pair will be "
"generated."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:80
msgid "Keypair type. Supported since Nova api version 2.2."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:87
msgid ""
"ID or name of user to whom to add key-pair. The usage of this property is"
" limited to being used by administrators only. Supported since Nova api "
"version 2.10."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:97
msgid "The public key."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:101
msgid "The private key if it has been saved."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:160
#, python-format
msgid ""
"Cannot use \"%s\" properties - nova does not support required api "
"microversion."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:80
msgid "Quota for the number of cores. Setting the value to -1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:89
msgid ""
"Quota for the number of fixed IPs. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:98
msgid ""
"Quota for the number of floating IPs. Setting the value to -1 removes the"
" limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:107
msgid ""
"Quota for the number of instances. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:116
msgid ""
"Quota for the number of injected files. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:121
#: heat/engine/resources/openstack/nova/quota.py:138
#: heat/engine/resources/openstack/nova/quota.py:155
msgid ""
"File injection is deprecated from compute REST API OS::Nova::Quota "
"resource will not support it in the future."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:133
msgid ""
"Quota for the number of injected file content bytes. Setting the value to"
" -1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:150
msgid ""
"Quota for the number of injected file path bytes. Setting the value to -1"
" removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:167
msgid ""
"Quota for the number of key pairs. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:176
msgid ""
"Quota for the number of metadata items. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:185
msgid ""
"Quota for the amount of ram (in megabytes). Setting the value to -1 "
"removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:194
msgid ""
"Quota for the number of security groups. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:203
msgid ""
"Quota for the number of security group rules. Setting the value to -1 "
"removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:212
msgid ""
"Quota for the number of server groups. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/quota.py:221
msgid ""
"Quota for the number of server group members. Setting the value to -1 "
"removes the limit."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:173
msgid "The ID or name of the image to boot with."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:181
msgid "Block device mappings for this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:187
#: heat/engine/resources/openstack/nova/server.py:231
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name. This value is typically vda."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:194
msgid ""
"The ID of the volume to boot from. Only one of volume_id or snapshot_id "
"should be provided."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:211
msgid ""
"The size of the volume, in GB. It is safe to leave this blank and have "
"the Compute service infer the size."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:217
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:225
msgid "Block device mappings v2 for this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:237
msgid "The volume_id can be boot or non-boot device to the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:245
msgid "The ID of the image to create a volume from."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:264
msgid "The ID or name of the image to create a volume from."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:281
msgid "The size of the swap, in MB."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:285
msgid "The size of the local ephemeral block device, in GB."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:292
msgid ""
"The format of the local ephemeral block device. If no format is "
"specified, uses default value, defined in nova configuration file."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:303
msgid ""
"Device type: at the moment we can make distinction only between disk and "
"cdrom."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:311
msgid ""
"Bus of the device: hypervisor driver chooses a suitable default if "
"omitted."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:321
msgid ""
"Integer used for ordering the boot disks. If it is not specified, value "
"\"0\" will be set for bootable sources (volume, snapshot, image); value "
"\"-1\" will be set for non-bootable sources."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:328
msgid ""
"Size of the block device in GB. If it is omitted, hypervisor driver "
"calculates size."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:333
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated. Defaults to \"False\" in case of a volume, snapshot or image "
"and to \"True\" in case of swap or ephemeral."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:345
msgid "The ID or name of the flavor to boot onto."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:354
msgid ""
"Policy on how to apply a flavor update; either by requesting a server "
"resize or by replacing the entire server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:364
msgid ""
"Policy on how to apply an image-id update; either by requesting a server "
"rebuild or by replacing the entire server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:376
msgid "Name of keypair to inject into the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:383
msgid "Name of the administrative user to use on the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:387
msgid ""
"The default cloud-init user set up for each image (e.g. \"ubuntu\" for "
"Ubuntu 12.04+, \"fedora\" for Fedora 19+ and \"cloud-user\" for "
"CentOS/RHEL 6.5)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:399
msgid "Name of the availability zone for server placement."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:403
msgid ""
"List of security group names or IDs. Cannot be used if neutron ports are "
"associated with this server; assign security groups to the ports instead."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:410
#: heat/engine/resources/openstack/zun/container.py:188
msgid ""
"An ordered list of nics to be added to this server, with information "
"about connected networks, fixed ips, port etc."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:417
msgid "ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:433
#: heat/engine/resources/openstack/zun/container.py:196
msgid "Name or ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:440
msgid ""
"The special string values of network, auto: means either a network that "
"is already available to the project will be used, or if one does not "
"exist, will be automatically created for the project; none: means no "
"networking will be allocated for the created server. Supported by Nova "
"API since version \"2.37\". This property can not be used with other "
"network keys."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:457
#: heat/engine/resources/openstack/zun/container.py:203
msgid "Fixed IP address to specify for the port created on the requested network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:465
msgid "ID of an existing port to associate with this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:473
msgid ""
"Dict, which has expand properties for port. Used only if port property is"
" not specified for creating port."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:481
msgid ""
"Subnet in which to allocate the IP address for port. Used for creating "
"port, based on derived properties. If subnet is specified, network "
"property becomes optional."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:494
msgid ""
"Port tag. Heat ignores any update on this property as nova does not "
"support it."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:504
msgid "Arbitrary key-value pairs specified by the client to help boot a server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:518
msgid ""
"How the user_data should be formatted for the server. For HEAT_CFNTOOLS, "
"the user_data is bundled as part of the heat-cfntools cloud-init boot "
"configuration data. For RAW the user_data is passed to Nova unmodified. "
"For SOFTWARE_CONFIG user_data is bundled as part of the software config "
"data, and metadata is derived from any associated SoftwareDeployment "
"resources. And if the user_data is in CoreOS ignition(json) format, the "
"metadata will be injected into the user_data automatically by Heat."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:551
msgid ""
"Policy on how to apply a user_data update; either by ignoring it or by "
"replacing the entire server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:562
msgid ""
"User data script to be executed by cloud-init or CoreOS ignition. Changes"
" cause replacement of the resource by default, but can be ignored "
"altogether by setting the `user_data_update_policy` property."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:571
msgid "A UUID for the set of servers being requested."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:575
msgid "If True, enable config drive on the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:579
msgid "Control how the disk is partitioned when the server is created."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:587
msgid ""
"A map of files to create/overwrite on the server upon boot. Keys are file"
" names and values are the file contents."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:592
msgid ""
"This is not supported with nova api microversion 2.57 and above. "
"OS::Nova::Server resource will not support it in the future. Please use "
"user_data or metadata instead. However, you can set heat config option "
"max_nova_api_microversion < 2.57 to use this property in the meantime."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:604
msgid "The administrator password for the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:609
msgid "Server tags. Supported since client version 2.26."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:653
msgid ""
"A dict of all network addresses with corresponding port_id and subnets. "
"Each network will have two keys in dict, they are network name and "
"network id. The port ID may be obtained through the following expression:"
" ``{get_attr: [<server>, addresses, <network name_or_id>, 0, port]}``. "
"The subnets may be obtained trough the following expression: ``{get_attr:"
" [<server>, addresses, <network name_or_id>, 0, subnets]}``. The network "
"may be obtained through the following expression: ``{get_attr: [<server>,"
" addresses, <network name_or_id>, 0, network]}``."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:667
msgid ""
"The attribute was extended to include subnets and network with version "
"11.0.0."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:675
msgid ""
"A dict of assigned network addresses of the form: {\"public\": [ip1, "
"ip2...], \"private\": [ip3, ip4], \"public_uuid\": [ip1, ip2...], "
"\"private_uuid\": [ip3, ip4]}. Each network will have two keys in dict, "
"they are network name and network id."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:683
msgid ""
"Convenience attribute to fetch the first assigned network address, or an "
"empty string if nothing has been assigned at this time. Result may not be"
" predictable if the server has addresses from more than one network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:690
msgid ""
"Use the networks attribute instead of first_address. For example: "
"\"{get_attr: [<server name>, networks, <network name>, 0]}\""
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:701
msgid "AWS compatible instance name."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:705
msgid "The manually assigned alternative public IPv4 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:714
msgid "The manually assigned alternative public IPv6 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:723
msgid ""
"URLs of server's consoles. To get a specific console type, the requested "
"type can be specified as parameter to the get_attr function, e.g. "
"get_attr: [ <server>, console_urls, novnc ]. Currently supported types "
"are novnc, xvpvnc, spice-html5, rdp-html5, serial and webmks."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:733
msgid "Tags from the server. Supported since client version 2.26."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:931
#, python-format
msgid "Server %s is not in ACTIVE state"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1460
#, python-format
msgid "Either volume_id or snapshot_id must be specified for device mapping %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1489
msgid ""
"Either volume_id, snapshot_id, image_id, swap_size, ephemeral_size or "
"ephemeral_format must be specified."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1504
#, python-format
msgid "Neither image nor bootable volume is specified for instance %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1509
#, python-format
msgid "Multiple bootable sources for instance %s."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1525
#, python-format
msgid "Image status is required to be %(cstatus)s not %(wstatus)s."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1533
#, python-format
msgid ""
"Image %(image)s requires %(imram)s minimum ram. Flavor %(flavor)s has "
"only %(flram)s."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1541
#, python-format
msgid ""
"Image %(image)s requires %(imsz)s GB minimum disk space. Flavor "
"%(flavor)s has only %(flsz)s GB."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1554
msgid ""
"deployments key not allowed in resource metadata with user_data_format of"
" SOFTWARE_CONFIG"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1573
#, python-format
msgid ""
"Property \"%s\" can not be specified if multiple network interfaces set "
"for server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1580
#, python-format
msgid ""
"Cannot use \"%s\" property - compute service does not support the "
"required api microversion."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1598
#, python-format
msgid ""
"Cannot use \"%s\" property in networks - nova does not support required "
"api microversion."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1607
#, python-format
msgid ""
"Cannot use \"%s\" property - nova does not support required api "
"microversion."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1618
msgid ""
"Cannot use the personality parameter as nova no longer supports it. Use "
"user_data instead."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1629
#, python-format
msgid ""
"Instance metadata must not contain greater than %s entries.  This is the "
"maximum number allowed by your service provider"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1638
#, python-format
msgid "The personality property may not contain greater than %s entries."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1644
#, python-format
msgid ""
"The contents of personality file \"%(path)s\" is larger than the maximum "
"allowed personality file size (%(max_size)s bytes)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1718
#: heat/engine/resources/openstack/nova/server.py:1761
#, python-format
msgid "Failed to find server %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1742
#, python-format
msgid "Suspend of server %s failed"
msgstr ""

#: heat/engine/resources/openstack/nova/server_group.py:45
msgid "Server Group name."
msgstr ""

#: heat/engine/resources/openstack/nova/server_group.py:49
msgid "A list of string policies to apply. Defaults to anti-affinity."
msgstr ""

#: heat/engine/resources/openstack/nova/server_group.py:70
msgid "Required microversion for soft policies not supported."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:44
#, python-format
msgid ""
"One of the properties \"%(id)s\", \"%(port_id)s\", \"%(str_network)s\" or"
" \"%(subnet)s\" should be set for the specified network of server "
"\"%(server)s\"."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:57
#, python-format
msgid "Can not specify \"%s\" with other keys of networks at the same time."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:72
#, python-format
msgid ""
"Property \"%(fip)s\" is not supported if only \"%(net)s\" is specified, "
"because the corresponding port can not be retrieved."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:89
#, python-format
msgid "Specified subnet %(subnet)s does not belongs to network %(network)s."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:97
#, python-format
msgid "%(server)s-port-%(number)s"
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor.py:49
msgid "Description of this Flavor."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor.py:55
msgid "If the resource if available for use."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor.py:61
msgid "Name of this Flavor."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor.py:66
msgid "The ID or the name of the Flavor Profile."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor.py:76
msgid "The ID of the flavor profile."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor_profile.py:40
msgid "Name of this Flavor Profile."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor_profile.py:45
msgid "JSON string containing the flavor metadata."
msgstr ""

#: heat/engine/resources/openstack/octavia/flavor_profile.py:51
msgid "Provider name of this Flavor Profile."
msgstr ""

#: heat/engine/resources/openstack/octavia/health_monitor.py:59
msgid "The minimum time in seconds between regular connections of the member."
msgstr ""

#: heat/engine/resources/openstack/octavia/health_monitor.py:98
msgid ""
"Maximum number of seconds for a monitor to wait for a connection to be "
"established before it times out."
msgstr ""

#: heat/engine/resources/openstack/octavia/listener.py:77
msgid "ID or name of the default pool for the listener."
msgstr ""

#: heat/engine/resources/openstack/octavia/listener.py:127
msgid ""
"A list of IPv4, IPv6 or mix of both CIDRs. The default is all allowed. "
"When a list of CIDRs is provided, the default switches to deny all."
msgstr ""

#: heat/engine/resources/openstack/octavia/loadbalancer.py:94
msgid "The name or ID of the flavor of the Load Balancer."
msgstr ""

#: heat/engine/resources/openstack/octavia/loadbalancer.py:120
msgid "The flavor ID of the LoadBalancer."
msgstr ""

#: heat/engine/resources/openstack/octavia/pool.py:116
msgid "Loadbalancer name or ID to be associated with this pool."
msgstr ""

#: heat/engine/resources/openstack/octavia/pool.py:131
msgid "Enable backend member re-encryption."
msgstr ""

#: heat/engine/resources/openstack/octavia/pool_member.py:70
msgid "Alternate IP address which health monitor can use for health check."
msgstr ""

#: heat/engine/resources/openstack/octavia/pool_member.py:78
msgid "Alternate Port which health monitor can use for health check."
msgstr ""

#: heat/engine/resources/openstack/octavia/pool_member.py:107
msgid ""
"A list of simple strings assigned to the member. The property is "
"supported with Stein Octavia or newer version."
msgstr ""

#: heat/engine/resources/openstack/octavia/quota.py:66
msgid ""
"Quota for the number of healthmonitors. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/octavia/quota.py:75
msgid ""
"Quota for the number of listeners. Setting the value to -1 removes the "
"limit."
msgstr ""

#: heat/engine/resources/openstack/octavia/quota.py:84
msgid ""
"Quota for the number of load balancers. Setting the value to -1 removes "
"the limit."
msgstr ""

#: heat/engine/resources/openstack/octavia/quota.py:93
msgid "Quota for the number of pools. Setting the value to -1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/octavia/quota.py:102
msgid "Quota for the number of m. Setting the value to -1 removes the limit."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:82
msgid "Hadoop cluster name."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:90
#: heat/engine/resources/openstack/sahara/templates.py:92
#: heat/engine/resources/openstack/sahara/templates.py:427
msgid "Plugin name."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:98
#: heat/engine/resources/openstack/sahara/templates.py:101
#: heat/engine/resources/openstack/sahara/templates.py:436
msgid "Version of Hadoop running on instances."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:103
msgid "ID of the Cluster Template used for Node Groups and configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:112
msgid "Keypair added to instances to make them accessible for user."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:119
msgid "Name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:135
msgid "Default name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:143
#: heat/engine/resources/openstack/sahara/templates.py:450
msgid "Name or UUID of network."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:151
#: heat/engine/resources/openstack/sahara/templates.py:212
#: heat/engine/resources/openstack/sahara/templates.py:499
msgid "Configure most important configs automatically."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:156
#: heat/engine/resources/openstack/sahara/templates.py:218
#: heat/engine/resources/openstack/sahara/templates.py:504
msgid "List of manila shares to be mounted."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:162
#: heat/engine/resources/openstack/sahara/templates.py:224
#: heat/engine/resources/openstack/sahara/templates.py:510
msgid "Id of the manila share."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:167
#: heat/engine/resources/openstack/sahara/templates.py:229
#: heat/engine/resources/openstack/sahara/templates.py:515
msgid ""
"Local path on each cluster node on which to mount the share. Defaults to "
"'/mnt/{share_id}'."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:172
#: heat/engine/resources/openstack/sahara/templates.py:234
#: heat/engine/resources/openstack/sahara/templates.py:520
msgid "Governs permissions set in manila for the cluster ips."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:187
msgid "Cluster status."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:191
msgid "Cluster information."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:242
#, python-format
msgid ""
"%(img)s must be provided: Referenced cluster template %(tmpl)s has no "
"default_image_id defined."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:53
msgid "Name of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:58
msgid "Type of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:67
msgid "URL for the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:73
msgid "Description of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:79
#: heat/engine/resources/openstack/sahara/job_binary.py:67
msgid ""
"Credentials used for swift. Not required if sahara is configured to use "
"proxy users and delegated trusts for access."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:85
msgid "Username for accessing the data source URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:90
msgid "Password for accessing the data source URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:41
msgid "ID or name of the image to register."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:49
msgid "Username of privileged user in the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:55
msgid "Description of the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:61
msgid "Tags to add to the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:63
msgid "Name of the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:72
msgid "Type of the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:80
msgid ""
"IDs or names of job's main job binary. In case of specific Sahara "
"service, this property designed as a list, but accepts only one item."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:85
msgid "ID of job's main job binary."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:93
msgid "IDs or names of job's lib job binaries."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:104
msgid "Description of the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:109
msgid "If True, job will be shared across the tenants."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:115
msgid ""
"If True, job will be protected from modifications and can not be deleted "
"until this property is set to False."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:122
msgid "Default execution data to use when run signal."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:126
msgid "ID or name of the cluster to run the job in."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:134
msgid "ID or name of the input data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:141
msgid "ID or name of the output data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:148
msgid "Config parameters to add to the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:153
msgid "Parameters to add to the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:158
msgid "Arguments to add to the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:166
msgid "If True, execution will be shared across the tenants."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:171
msgid "Interface arguments to add to the job."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:181
msgid ""
"A signed url to create execution specified in default_execution_data "
"property."
msgstr ""

#: heat/engine/resources/openstack/sahara/job.py:187
msgid "List of the job executions."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:49
msgid "Name of the job binary."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:54
msgid ""
"URL for the job binary. Must be in the format swift://<container>/<path> "
"or internal-db://<uuid>."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:61
msgid "Description of the job binary."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:73
msgid "Username for accessing the job binary URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:78
msgid "Password for accessing the job binary URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:107
#, python-format
msgid "%s is not a valid job location."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:77
msgid "Name for the Sahara Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:86
msgid "Description of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:107
msgid "Name or ID Nova flavor for the nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:116
msgid "Volumes per node."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:125
msgid "Size of the volumes, in GB."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:133
msgid "Type of the volume to create on Cinder backend."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:141
msgid "List of security group names or IDs to assign to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:150
msgid "Defines whether auto-assign security group to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:156
msgid "Availability zone to create servers in."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:161
msgid "Availability zone to create volumes in."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:166
msgid "List of processes to run on every node."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:178
msgid ""
"Name or UUID of the Neutron floating IP network or name of the Nova "
"floating ip pool to use. Should not be provided when used with Nova-"
"network that auto-assign floating IPs."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:186
msgid "Dictionary of node configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:191
msgid "ID of the image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:199
msgid ""
"Provide access to nodes using other nodes of the cluster as proxy "
"gateways."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:206
msgid "Create volumes on the same physical port as an instance."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:344
#, python-format
msgid ""
"Plugin %(plugin)s doesn't support the following node processes: "
"%(unsupported)s. Allowed processes are: %(allowed)s"
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:412
msgid "Name for the Sahara Cluster Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:421
msgid "Description of the Sahara Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:442
msgid "ID of the default image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:458
msgid "List of processes to enable anti-affinity for."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:466
msgid "Cluster configs dictionary."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:471
msgid "Node groups."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:477
msgid "Name of the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:482
msgid "Number of instances in the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:490
msgid "ID of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:586
#, python-format
msgid "%s must be provided"
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:68
msgid "The name or id of the Senlin profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:77
msgid "Name of the cluster. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:83
msgid "Desired initial number of resources in cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:89
msgid "Minimum number of resources in the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:98
msgid "Maximum number of resources in the cluster. -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:108
msgid "Metadata key-values defined for cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:114
msgid "The number of seconds to wait for the cluster actions."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:122
msgid "A list of policies to attach to this cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:131
msgid "The name or ID of the policy."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:139
msgid "Whether enable this policy on this cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:149
msgid "Cluster name."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:153
msgid "Cluster metadata."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:157
msgid "Desired capacity of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:161
msgid "Nodes list in the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:166
msgid "Min size of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:170
msgid "Max size of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:174
msgid "Policies attached to the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:179
msgid ""
"Attributes collected from cluster. According to the jsonpath following "
"this attribute, it will return a list of attributes collected from the "
"nodes of this cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:358
#, python-format
msgid "%(min_size)s can not be greater than %(max_size)s"
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:366
#, python-format
msgid "%(desired_capacity)s must be between %(min_size)s and %(max_size)s"
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:55
msgid "Name of the senlin node. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:61
msgid "Metadata key-values defined for node."
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:66
msgid "Name or ID of senlin profile to create this node."
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:75
msgid "The name of senlin cluster to attach to."
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:86
msgid "The details of physical object."
msgstr ""

#: heat/engine/resources/openstack/senlin/node.py:90
msgid "The cluster ID this node belongs to."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:55
msgid "Name of the senlin policy. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:61
msgid "The type of senlin policy."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:69
msgid "Properties of this policy."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:73
msgid "A list of clusters to which this policy is attached."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:80
msgid "The name or ID of target cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:88
msgid "Whether enable this policy on that cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/policy.py:139
#, python-format
msgid "Failed to execute %(action)s for %(cluster)s: %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:40
msgid "Name of the senlin profile. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:46
msgid "The type of profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:54
msgid "Metadata key-values defined for profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:59
msgid "Properties for profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:57
msgid "Name or ID of target cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:65
msgid "The action to be executed when the receiver is signaled."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:73
msgid "Name of the senlin receiver. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:78
msgid "Type of receiver."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:86
msgid "The parameters passed to action when the receiver is signaled."
msgstr ""

#: heat/engine/resources/openstack/senlin/receiver.py:93
msgid "The channel for receiving signals."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:52
msgid "Name for the container. If not specified, a unique name will be generated."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:57
msgid "Specify the ACL permissions on who can read objects in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:62
msgid "Specify the ACL permissions on who can write objects to the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:67
msgid ""
"A map of user-defined meta data to associate with the container. Each key"
" in the map will set the header X-Container-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:74
msgid ""
"A map of user-defined meta data to associate with the account. Each key "
"in the map will set the header X-Account-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:81
msgid ""
"If True, delete any objects in the container when the container is "
"deleted. Otherwise, deleting a non-empty container will result in an "
"error."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:93
msgid "The host from the container URL."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:97
msgid "The URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:101
msgid "The parent URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:105
msgid "The number of objects stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:109
msgid "The number of bytes stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:113
msgid "A map containing all headers for the container."
msgstr ""

#: heat/engine/resources/openstack/swift/container.py:197
#, python-format
msgid "Deleting non-empty container (%(id)s) when %(prop)s is False"
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:49
#: heat/engine/resources/openstack/trove/instance.py:46
msgid ""
"The database instance was created, but heat failed to set up the "
"datastore. If a database instance is in the FAILED state, it should be "
"deleted and a new one should be created."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:53
#: heat/engine/resources/openstack/trove/instance.py:50
msgid "The last operation for the database instance failed due to an error."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:86
msgid "Name of the cluster to create."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:93
#: heat/engine/resources/openstack/trove/instance.py:109
msgid "Name of registered datastore type."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:101
#: heat/engine/resources/openstack/trove/instance.py:116
msgid ""
"Name of the registered datastore version. It must exist for provided "
"datastore type. Defaults to using single active version. If several "
"active versions exist for provided datastore type, explicit value for "
"this parameter must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:111
msgid "List of database instances."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:118
msgid "Flavor of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:126
msgid "Size of the instance disk volume in GB."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:134
#: heat/engine/resources/openstack/trove/instance.py:134
msgid "List of network interfaces to create on instance."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:142
#: heat/engine/resources/openstack/trove/instance.py:141
#, python-format
msgid ""
"Name or UUID of the network to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:153
#: heat/engine/resources/openstack/trove/instance.py:150
#, python-format
msgid ""
"Name or UUID of Neutron port to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:164
#: heat/engine/resources/openstack/trove/instance.py:160
msgid "Fixed IPv4 address for this NIC."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:174
#: heat/engine/resources/openstack/trove/instance.py:260
msgid "Name of the availability zone for DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:184
msgid "A list of instances ids."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:188
msgid "A list of cluster instance IPs."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:364
#: heat/engine/resources/openstack/trove/instance.py:685
#, python-format
msgid "Can not use %s property on Nova-network."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:370
#: heat/engine/resources/openstack/trove/instance.py:689
#, python-format
msgid "Either %(net)s or %(port)s must be provided."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:92
msgid "Name of the DB instance to create."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:100
msgid "Reference to a flavor for creating DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:125
msgid "Database volume size in GB."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:170
msgid "List of databases to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:178
msgid "Set of symbols and encodings."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:183
msgid "Set of rules for comparing characters in a character set."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:189
msgid "Specifies database names for creating databases on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:204
msgid "List of users to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:212
msgid "User name to create a user on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:225
msgid "Password for those users on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:237
msgid "The host from which a user is allowed to connect to the database."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:244
msgid "Names of databases that those users can access on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:264
msgid "DB instance restore point."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:268
msgid "Identifier of the source instance to replicate."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:273
msgid "The number of replicas to be created."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:280
msgid "Hostname of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:284
msgid "Api endpoint reference of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:665
#, python-format
msgid ""
"Databases property is required if users property is provided for resource"
" %s."
msgstr ""

#: heat/engine/resources/openstack/trove/instance.py:675
#, python-format
msgid ""
"Database %(dbs)s specified for user does not exist in databases for "
"resource %(name)s."
msgstr ""

#: heat/engine/resources/openstack/vitrage/vitrage_template.py:51
msgid "Path of the Vitrage template to use."
msgstr ""

#: heat/engine/resources/openstack/vitrage/vitrage_template.py:56
msgid "Input parameters for the Vitrage template."
msgstr ""

#: heat/engine/resources/openstack/vitrage/vitrage_template.py:114
#, python-format
msgid "Exception when calling Vitrage template validate: %s"
msgstr ""

#: heat/engine/resources/openstack/vitrage/vitrage_template.py:121
#, python-format
msgid "Failed to validate Vitrage template %s"
msgstr ""

#: heat/engine/resources/openstack/vitrage/vitrage_template.py:127
#, python-format
msgid "Failed to validate Vitrage template. Error: %s"
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:56
msgid "Name of the queue instance to create."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:62
msgid ""
"Arbitrary key/value metadata to store contextual information about this "
"queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:69
msgid "ID of the queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:76
msgid ""
"Use get_resource|Ref command instead. For example: { get_resource : "
"<resource_name> }"
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:85
msgid "The resource href of the queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:174
msgid "Name of the queue instance to create a URL for."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:178
msgid "List of allowed paths to be accessed. Default to allow queue messages URL."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:182
msgid "Time validity of the URL, in seconds. Default to one day."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:186
msgid "List of allowed HTTP methods to be used. Default to allow GET."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:199
msgid "Signature of the URL built by Zaqar."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:202
msgid "Expiration date of the URL."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:205
msgid "Comma-delimited list of paths for convenience."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:208
msgid "Comma-delimited list of methods for convenience."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:211
msgid "The ID of the Keystone project containing the queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:214
msgid "An HTTP URI query fragment."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:45
msgid "Name of the queue to subscribe to."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:50
msgid ""
"URI of the subscriber which will be notified. Must be in the format: "
"<TYPE>:<VALUE>."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:56
msgid "Time to live of the subscription in seconds."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:68
msgid "Options used to configure this subscription."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:83
#, python-format
msgid "The subscriber type of must be one of: %s."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:172
msgid "UUID of the Mistral workflow to trigger."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:178
msgid ""
"Parameters to pass to the Mistral workflow execution. The parameters "
"depend on the workflow type."
msgstr ""

#: heat/engine/resources/openstack/zaqar/subscription.py:185
msgid "Input values to pass to the Mistral workflow."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:83
msgid "Name or ID of the image."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:88
msgid "Send command to the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:92
msgid "The number of virtual cpus."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:97
msgid "The container memory size in MiB."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:102
msgid "The environment variables."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:106
msgid "The working directory for commands to run in."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:110
msgid "Adds a map of labels to a container. May be used multiple times."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:115
msgid ""
"The policy which determines if the image should be pulled prior to "
"starting the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:124
msgid ""
"Restart policy to apply when a container exits. Possible values are "
"\"no\", \"on-failure[:max-retry]\", \"always\", and \"unless-stopped\"."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:130
msgid "Keep STDIN open even if not attached."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:134
msgid "Whether the container allocates a TTY for itself."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:139
msgid "The image driver to use to pull container image."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:146
msgid "Arbitrary key-value pairs for scheduler to select host."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:151
msgid "The hostname of the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:156
msgid "List of security group names or IDs."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:162
msgid "A list of volumes mounted inside the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:168
msgid "The ID or name of the cinder volume mount to the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:176
msgid "The size of the cinder volume to create."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:180
msgid "The filesystem path inside the container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:211
msgid "ID of an existing port to associate with this container."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:229
msgid ""
"A dict of all network addresses with corresponding port_id. Each network "
"will have two keys in dict, they are network name and network id. The "
"port ID may be obtained through the following expression: \"{get_attr: "
"[<container>, addresses, <network name_or_id>, 0, port]}\"."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:266
#, python-format
msgid ""
"restart_policy \"%s\" is invalid. Valid values are \"no\", \"on-failure"
"[:max-retry]\", \"always\", and \"unless-stopped\"."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:284
#, python-format
msgid ""
"One of the properties \"%(id)s\" or \"%(size)s\" should be set for the "
"specified mount of container \"%(container)s\"."
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:381
#, python-format
msgid ""
"Error in creating container '%(name)s' - interactive mode was enabled but"
" the container has stopped running"
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:388
#, python-format
msgid "Error in creating container '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/zun/container.py:393
#, python-format
msgid "Unknown status Container '%(name)s' - %(reason)s"
msgstr ""

#: heat/objects/resource.py:359
#, python-format
msgid "metadata setting for resource %s"
msgstr ""

#: heat/objects/stack.py:232
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(traversal)s %(msg)s"
msgstr ""

#: heat/scaling/cooldown.py:41
msgid "due to scaling activity"
msgstr ""

#: heat/scaling/cooldown.py:76
#, python-format
msgid "due to cooldown, cooldown %s"
msgstr ""

#: heat/scaling/lbutils.py:37
#, python-format
msgid "Unsupported resource '%s' in LoadBalancerNames"
msgstr ""

#: heat/tests/test_exception.py:28
#, python-format
msgid "Testing message %(text)s"
msgstr ""

#: heat/tests/test_fault_middleware.py:164
msgid "Error"
msgstr ""

#: heat/tests/test_function.py:35
msgid "Need more arguments"
msgstr ""

#: heat/tests/test_provider_template.py:810
#: heat/tests/test_provider_template.py:838
msgid "Failed to retrieve template"
msgstr ""

#: heat/tests/test_validate.py:1620
msgid ""
"Parameter Groups error: parameter_groups.Database Group: The InstanceType"
" parameter must be assigned to one parameter group only."
msgstr ""

#: heat/tests/test_validate.py:1633
msgid ""
"Parameter Groups error: parameter_groups.: The key_name parameter must be"
" assigned to one parameter group only."
msgstr ""

#: heat/tests/test_validate.py:1651
msgid ""
"Parameter Groups error: parameter_groups.Database Group: The grouped "
"parameter SomethingNotHere does not reference a valid parameter."
msgstr ""

#: heat/tests/test_validate.py:1665
msgid ""
"Parameter Groups error: parameter_groups.: The grouped parameter key_name"
" does not reference a valid parameter."
msgstr ""

#: heat/tests/test_validate.py:1678
msgid ""
"Parameter Groups error: parameter_groups.Server Group: The parameters "
"must be provided for each parameter group."
msgstr ""

#: heat/tests/test_validate.py:1689
msgid ""
"Parameter Groups error: parameter_groups: The parameter_groups should be "
"a list."
msgstr ""

#: heat/tests/test_validate.py:1700
msgid ""
"Parameter Groups error: parameter_groups.Server Group: The parameters of "
"parameter group should be a list."
msgstr ""

#: heat/tests/test_validate.py:1712
msgid ""
"Parameter Groups error: parameter_groups.: The parameters of parameter "
"group should be a list."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:41
msgid "Fake property a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:47
msgid "Fake property b."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:53
msgid "Fake property c."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:59
msgid "Fake property ca."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:65
msgid "Fake property !a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:71
msgid "Fake property !c."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:79
msgid "Fake attribute a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:83
msgid "Fake attribute !a."
msgstr ""

#: heat/tests/openstack/heat/test_remote_stack.py:718
msgid ""
"ResourceInError: resources.remote_stack: Went to status UPDATE_FAILED due"
" to \"Remote stack update failed\""
msgstr ""

#: heat/tests/openstack/heat/test_software_deployment.py:1056
msgid "need more memory."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7policy.py:61
#: heat/tests/openstack/octavia/test_l7policy.py:52
msgid ""
"Properties redirect_pool and redirect_url are not required when action "
"type is set to REJECT."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7policy.py:75
#: heat/tests/openstack/octavia/test_l7policy.py:66
msgid ""
"redirect_url property should only be specified for action with value "
"REDIRECT_TO_URL."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7policy.py:89
#: heat/tests/openstack/octavia/test_l7policy.py:80
msgid ""
"Property redirect_pool is required when action type is set to "
"REDIRECT_TO_POOL."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7policy.py:102
#: heat/tests/openstack/octavia/test_l7policy.py:93
msgid ""
"redirect_pool property should only be specified for action with value "
"REDIRECT_TO_POOL."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7policy.py:115
#: heat/tests/openstack/octavia/test_l7policy.py:106
msgid ""
"Property redirect_url is required when action type is set to "
"REDIRECT_TO_URL."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_l7rule.py:61
#: heat/tests/openstack/octavia/test_l7rule.py:52
msgid ""
"Property key is missing. This property should be specified for rules of "
"HEADER and COOKIE types."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_pool.py:59
#: heat/tests/openstack/octavia/test_pool.py:52
msgid ""
"Property cookie_name is required when session_persistence type is set to "
"APP_COOKIE."
msgstr ""

#: heat/tests/openstack/neutron/lbaas/test_pool.py:73
#: heat/tests/openstack/octavia/test_pool.py:64
msgid ""
"Property cookie_name must NOT be specified when session_persistence type "
"is set to SOURCE_IP."
msgstr ""

#: heat/tests/openstack/nova/test_server.py:1533
#, python-format
msgid ""
"One of the properties \"network\", \"port\", \"allocate_network\" or "
"\"subnet\" should be set for the specified network of server \"%s\"."
msgstr ""

#: heat/tests/openstack/nova/test_server.py:1559
msgid ""
"Property \"floating_ip\" is not supported if only \"network\" is "
"specified, because the corresponding port can not be retrieved."
msgstr ""

#: heat/tests/openstack/nova/test_server.py:1584
msgid ""
"Can not specify \"allocate_network\" with other keys of networks at the "
"same time."
msgstr ""

#: heat_integrationtests/common/clients.py:74
msgid "Please specify version in auth_url or auth_version in config."
msgstr ""

#: tools/custom_guidelines.py:54
msgid "Heat custom guidelines check started."
msgstr ""

#: tools/custom_guidelines.py:58
#, python-format
msgid "Heat custom guidelines check failed - found %s errors."
msgstr ""

#: tools/custom_guidelines.py:62
msgid "Heat custom guidelines check succeeded."
msgstr ""

#: tools/custom_guidelines.py:84 tools/custom_guidelines.py:92
msgid ""
"Resource description missing, should add resource description about "
"resource's purpose"
msgstr ""

#: tools/custom_guidelines.py:120
#, python-format
msgid "%s description missing, need to add description about property's purpose"
msgstr ""

#: tools/custom_guidelines.py:147
msgid "Method description summary should be in one line"
msgstr ""

#: tools/custom_guidelines.py:178
msgid "Trailing whitespace should be on previous line"
msgstr ""

#: tools/custom_guidelines.py:186
msgid "Omitted whitespace at the end of the line"
msgstr ""

#: tools/custom_guidelines.py:197
#, python-format
msgid "%s description summary should start with uppercase letter"
msgstr ""

#: tools/custom_guidelines.py:203
#, python-format
msgid "%s description summary omitted terminator at the end"
msgstr ""

#: tools/custom_guidelines.py:209 tools/custom_guidelines.py:244
#, python-format
msgid "%s description contains double or more whitespaces"
msgstr ""

#: tools/custom_guidelines.py:218
#, python-format
msgid ""
"%s description summary and main resource description should be separated "
"by blank line"
msgstr ""

#: tools/custom_guidelines.py:226
#, python-format
msgid "%s description should start with with uppercase letter"
msgstr ""

#: tools/custom_guidelines.py:234
#, python-format
msgid ""
"%s description multistring should have singly closing quotes at the next "
"line"
msgstr ""

#: tools/custom_guidelines.py:255
#, python-format
msgid "%s description omitted terminator at the end"
msgstr ""

#: tools/custom_guidelines.py:263
#, python-format
msgid "ERROR (in %(path)s: %(details)s): %(message)s"
msgstr ""

#: tools/custom_guidelines.py:269
#, python-format
msgid ""
"%(msg)s\n"
"    (Error snippet): %(snippet)s"
msgstr ""

#: tools/custom_guidelines.py:296
msgid "Exclude specified paths from checking."
msgstr ""

